---
swagger: "2.0"
info:
  title: "Contactplan API"
  description: "Contactplan API"
  version: "1.4.4-970"
schemes:
- "https"
host: "api-cplan.contactlab.it"
basePath: "/contactplan/api/v1"
securityDefinitions:
  OAuth2:
    description: >
      The following table provides brief descriptions of the built-in OAuth2
      scopes of this API.

      In this context, scopes are generally intended as application roles.
    type: oauth2
    flow: implicit
    authorizationUrl: 'https://login.contactlab.it/o/oauth2/auth'
    scopes:
      CONFIGURATOR: Customer Care Representative
      CLAB_OPERATOR: Contactlab Admin
      ADMIN: Admin
      POWERUSER: Poweruser
      USER: User
      GUEST: Guest
paths:
  /account/authorizations:
    get:
      tags:
      - "Account"
      summary: "Get account authorizations"
      description: "Returns the authorizations about the current account"
      operationId: "getAccountAuthorizations"
      parameters: []
      security:
        - OAuth2:
          - CONFIGURATOR
          - CLAB_OPERATOR
          - ADMIN
          - POWERUSER
          - USER
          - GUEST
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/OperationsListRes"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
  /account/info:
    get:
      tags:
      - "Account"
      summary: "Get account info"
      description: "Returns all informations about the current account"
      operationId: "getAccountInfo"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      security:
        - OAuth2:
          - CONFIGURATOR
          - CLAB_OPERATOR
          - ADMIN
          - POWERUSER
          - USER
          - GUEST
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/UserInfoRes"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
  /account/settings:
    get:
      tags:
      - "Account"
      summary: "Get account settings"
      description: "Returns the settings about the current account"
      operationId: "getAccountSettings"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      security:
        - OAuth2:
          - CONFIGURATOR
          - CLAB_OPERATOR
          - ADMIN
          - POWERUSER
          - USER
          - GUEST
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/UserSettingsRes"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
    put:
      tags:
      - "Account"
      summary: "Modify user settings"
      description: "Modify settings of the current account"
      operationId: "setAccountSettings"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - in: "body"
        name: "setting"
        description: "The account setting resource"
        required: true
        schema:
          $ref: "#/definitions/UserSettingsRes"
      security:
        - OAuth2:
          - CONFIGURATOR
          - CLAB_OPERATOR
          - ADMIN
          - POWERUSER
          - USER
          - GUEST
      responses:
        200:
          description: "The resource was updated succesfully"
          schema:
            $ref: "#/definitions/UserSettingsRes"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
  /analytics/{statementName}:
    get:
      tags:
      - "Datasets"
      summary: "Get a compressed analytics dataset"
      description: "Returns a paged list of results that match with the given query"
      operationId: "executeAnalyticCompressed"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/TenantHeader'
      - name: "statementName"
        in: "path"
        description: "The name of the statement"
        required: true
        type: "string"
      - name: "segmentId"
        in: "query"
        description: "The UUID of the segment"
        required: false
        type: "string"
      - name: "format"
        in: "query"
        description: "The format of the response (extended|compressed). Default value is 'extended'"
        required: false
        type: "string"
      - name: "forceReload"
        in: "query"
        description: "Disable dataset cache. Default value is false ( cache disabled\
          \ )"
        required: false
        type: "boolean"
      - name: "startDate"
        in: "query"
        description: "The begin of date interval"
        required: false
        type: "string"
      - name: "endDate"
        in: "query"
        description: "The end of date interval"
        required: false
        type: "string"
      - name: "limit"
        in: "query"
        description: "The maximum number of statements"
        required: false
        type: "integer"
      - name: "offset"
        in: "query"
        description: "Offset applied to retrieved statements list before returning\
          \ the required number of statements"
        required: false
        type: "integer"
      - name: "order"
        in: "query"
        description: "Sort directions of statements"
        required: false
        type: "string"
      - name: "orderField"
        in: "query"
        description: "Sort field of statements"
        required: false
        type: "string"
      - name: "windowTime"
        in: "query"
        description: "DAY|MONTH|QUARTER|YEAR"
        required: false
        type: "string"
      security:
        - OAuth2:
          - CLAB_OPERATOR
          - ADMIN
          - POWERUSER
          - USER
          - GUEST
      responses:
        200:
          description: "Ok"
          schema:
            type: "object"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
  /clab/campaigns/feedbacks:
    get:
      tags:
      - "Clab"
      summary: "Get all feedbacks of all plans"
      description: "Returns all contactlab feedbacks of all plans"
      operationId: "getCampaignsFeedbacks"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/TenantHeader'
      - name: "days"
        in: "query"
        description: "The number of days in the past. Default value is 30"
        required: false
        type: "integer"
        format: "int32"
      - name: "includeAll"
        in: "query"
        description: "Include all. Default value is false"
        required: false
        type: "boolean"
      security:
        - OAuth2:
          - CONFIGURATOR
          - CLAB_OPERATOR
          - ADMIN
          - POWERUSER
          - USER
          - GUEST
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/ClabFeedbacksListRes"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
  /clab/campaigns/tests:
    post:
      tags:
      - "Clab"
      summary: "Send a campaign test"
      description: "Send a campaign test using the contactlab platform"
      operationId: "sendCampaign"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/TenantHeader'
      - in: "body"
        name: "test campaign"
        description: "The test campaign resource"
        required: true
        schema:
          $ref: "#/definitions/TestCampaignRes"
      security:
        - OAuth2:
          - CONFIGURATOR
          - CLAB_OPERATOR
          - ADMIN
          - POWERUSER
          - USER
          - GUEST
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/TestCampaignRes"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
  /clab/campaigns/{planUuid}/feedbacks:
    get:
      tags:
      - "Clab"
      summary: "Get a feedback"
      description: "Returns contactlab feedbacks of the specified plan"
      operationId: "getCampaignFeedbacks"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/TenantHeader'
      - name: "planUuid"
        in: "path"
        description: "The UUID of the plan"
        required: true
        type: "string"
      security:
        - OAuth2:
          - CONFIGURATOR
          - CLAB_OPERATOR
          - ADMIN
          - POWERUSER
          - USER
          - GUEST
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/ClabFeedbackRes"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
  /clab/filters:
    get:
      tags:
      - "Clab"
      summary: "Get all test filters"
      description: "Returns a list of all test filters associated to the database\
        \ in use"
      operationId: "getFilters"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/TenantHeader'
      security:
        - OAuth2:
          - CONFIGURATOR
          - CLAB_OPERATOR
          - ADMIN
          - POWERUSER
          - USER
          - GUEST
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/CollectionPageResource"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
  /clab/filters/{id}:
    get:
      tags:
      - "Clab"
      summary: "Get a filter"
      description: "Returns the filter with the given id"
      operationId: "getFilter"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/TenantHeader'
      - name: "id"
        in: "path"
        description: "The ID of the filter"
        required: true
        type: "integer"
        format: "int32"
      security:
        - OAuth2:
          - CONFIGURATOR
          - CLAB_OPERATOR
          - ADMIN
          - POWERUSER
          - USER
          - GUEST
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/FilterRes"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
  /clab/messagemodels:
    get:
      tags:
      - "Clab"
      summary: "Get all message models"
      description: "Returns a list of all message models (a.k.a. mail groups) associated\
        \ to the user database in use"
      operationId: "getMessageModels"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/TenantHeader'
      security:
        - OAuth2:
          - CONFIGURATOR
          - CLAB_OPERATOR
          - ADMIN
          - POWERUSER
          - USER
          - GUEST
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/MessageModelsListRes"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
  /clab/messagemodels/{id}:
    get:
      tags:
      - "Clab"
      summary: "Get a message model"
      description: "Returns the message model with the given id"
      operationId: "getMessageModel"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/TenantHeader'
      - name: "id"
        in: "path"
        description: "The ID of the message model"
        required: true
        type: "integer"
        format: "int32"
      security:
        - OAuth2:
          - CONFIGURATOR
          - CLAB_OPERATOR
          - ADMIN
          - POWERUSER
          - USER
          - GUEST
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/MessageModelRes"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
  /clab/userdb/status:
    get:
      tags:
      - "Clab"
      summary: "Get a user database status"
      description: "Returns a status associated to the user database in use"
      operationId: "getUserDbInfo"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/TenantHeader'
      security:
        - OAuth2:
          - CONFIGURATOR
          - CLAB_OPERATOR
          - ADMIN
          - POWERUSER
          - USER
          - GUEST
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/UserdbInfoRes"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
  /consumers:
    get:
      tags:
      - "Consumers"
      summary: "Get all consumers"
      description: "Returns a list of consumers"
      operationId: "getTenantConsumers"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - name: "tenant"
        in: "query"
        description: "The ID of the tenant"
        required: false
        type: "string"
      security:
        - OAuth2:
          - CONFIGURATOR
          - CLAB_OPERATOR
          - ADMIN
          - POWERUSER
          - USER
          - GUEST
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/PlanJobListRes"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
    post:
      tags:
      - "Consumers"
      summary: "Create a consumer"
      description: "Create a consumer"
      operationId: "createTenantConsumer"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/TenantHeader'
      - in: "body"
        name: "consumer"
        description: "The consumer resource"
        required: true
        schema:
          $ref: "#/definitions/ConsumerRes"
      security:
        - OAuth2:
          - CLAB_OPERATOR
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/ConsumerRes"
        201:
          description: "The resource was created succesfully"
          schema:
            $ref: "#/definitions/ConsumerRes"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
  /consumers/{uuid}:
    get:
      tags:
      - "Consumers"
      summary: "Get a consumer"
      description: "Returns a consumer with the given UUID"
      operationId: "getTenantConsumer"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - name: "uuid"
        in: "path"
        description: "The UUID of the consumer"
        required: true
        type: "string"
      - name: "tenant"
        in: "query"
        description: "The ID of the tenant"
        required: false
        type: "string"
      security:
        - OAuth2:
          - CONFIGURATOR
          - CLAB_OPERATOR
          - ADMIN
          - POWERUSER
          - USER
          - GUEST
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/ConsumerRes"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
    put:
      tags:
      - "Consumers"
      summary: "Modify a consumer"
      description: "Modify a consumer with the given UUID"
      operationId: "modifyTenantConsumer"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/TenantHeader'
      - name: "uuid"
        in: "path"
        description: "The UUID of the consumer"
        required: true
        type: "string"
      - in: "body"
        name: "consumer"
        description: "The consumer resource"
        required: true
        schema:
          $ref: "#/definitions/ConsumerRes"
      security:
        - OAuth2:
          - CLAB_OPERATOR
      responses:
        200:
          description: "The resource was updated succesfully"
          schema:
            $ref: "#/definitions/ConsumerRes"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
    delete:
      tags:
      - "Consumers"
      summary: "Delete a consumer"
      description: "Delete a consumer with the given UUID"
      operationId: "deleteTenantConsumer"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/TenantHeader'
      - name: "uuid"
        in: "path"
        description: "The UUID of the consumer"
        required: true
        type: "string"
      security:
        - OAuth2:
          - CLAB_OPERATOR
      responses:
        204:
          description: "The resource was deleted succesfully"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
  /contacts:
    get:
      tags:
      - "Contacts"
      summary: "Get a contact list"
      description: "Returns a paged list of contacts that match with the given query\
        \ and (optionally) satisfy the given DND policy for the given planification\
        \ date"
      operationId: "getContacts"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/TenantHeader'
      - name: "query"
        in: "query"
        description: "Json expression representing the query used to retrieve contacts"
        required: false
        type: "string"
      - name: "attributes"
        in: "query"
        description: "List of contact attributes"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "resultType"
        in: "query"
        description: "Result can be hits (count is returned), list (contacts id and\
          \ email are returned), partial_list (only defined attributes are returned),\
          \ full_list (all attributes are returned)"
        required: false
        type: "string"
      - name: "limit"
        in: "query"
        description: "The maximum number of contacts"
        required: false
        type: "integer"
        format: "int32"
      - name: "offset"
        in: "query"
        description: "Offset applied to retrieved contact list before returning the\
          \ required number of contacts"
        required: false
        type: "integer"
        format: "int32"
      - name: "dnd"
        in: "query"
        description: "UUID of DND policy to be applied"
        required: false
        type: "string"
      - name: "dndRule"
        in: "query"
        description: "Json expression representing the DND policy to be applied"
        required: false
        type: "string"
      - name: "planificationDate"
        in: "query"
        description: "Target date in which contacts will be used for a marketing action.\
          \ required for DND policy evaluation"
        required: false
        type: "string"
      security:
        - OAuth2:
          - CONFIGURATOR
          - CLAB_OPERATOR
          - ADMIN
          - POWERUSER
          - USER
          - GUEST
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/DataSetRes"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
      deprecated: true
  /contacts.csv:
    post:
      tags:
      - "Contacts"
      summary: "Download a contact list"
      description: "Returns a csv file with paged list of contacts that match with\
        \ the given query and (optionally) satisfy the given DND policy for the given\
        \ planification date"
      operationId: "downloadContacts"
      consumes:
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/csv"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/TenantHeader'
      - name: "query"
        in: "query"
        description: "Json expression representing the query used to retrieve contacts"
        required: false
        type: "string"
      - name: "attributes"
        in: "query"
        description: "List of contact attributes"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "resultType"
        in: "query"
        description: "Result can be hits (count is returned), list (contacts id and\
          \ email are returned), partial_list (only defined attributes are returned),\
          \ full_list (all attributes are returned)"
        required: false
        type: "string"
      - name: "limit"
        in: "query"
        description: "The maximum number of contacts"
        required: false
        type: "integer"
        format: "int32"
      - name: "offset"
        in: "query"
        description: "Offset applied to retrieved contact list before returning the\
          \ required number of contacts"
        required: false
        type: "integer"
        format: "int32"
      - name: "filename"
        in: "query"
        description: "Name of match list"
        required: false
        type: "string"
        default: "contacts.csv"
      - name: "dnd"
        in: "query"
        description: "UUID of DND policy to be applied"
        required: false
        type: "string"
      - name: "planificationDate"
        in: "query"
        description: "Target date in which contacts will be used for a marketing action.\
          \ required for DND policy evaluation"
        required: false
        type: "string"
      security:
        - OAuth2:
          - CLAB_OPERATOR
          - ADMIN
      responses:
        200:
          description: "Ok"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
  /contacts/search:
    post:
      tags:
      - "Contacts"
      summary: "Get a contact list"
      description: "Returns a paged list of contacts that match with the given query\
        \ and (optionally) satisfy the given DND policy for the given planification\
        \ date"
      operationId: "searchContacts"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/TenantHeader'
      - in: "body"
        name: "query"
        description: "Json expression representing the query used to retrieve contacts"
        required: false
        schema:
          $ref: "#/definitions/QueryRes"
      - name: "attributes"
        in: "query"
        description: "List of contact attributes"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "resultType"
        in: "query"
        description: "Result can be hits (count is returned), list (contacts id and\
          \ email are returned), partial_list (only defined attributes are returned),\
          \ full_list (all attributes are returned)"
        required: false
        type: "string"
      - name: "limit"
        in: "query"
        description: "The maximum number of contacts"
        required: false
        type: "integer"
        format: "int32"
      - name: "offset"
        in: "query"
        description: "Offset applied to retrieved contact list before returning the\
          \ required number of contacts"
        required: false
        type: "integer"
        format: "int32"
      - name: "dnd"
        in: "query"
        description: "UUID of DND policy to be applied"
        required: false
        type: "string"
      - name: "dndRule"
        in: "query"
        description: "Json expression representing the DND policy to be applied"
        required: false
        type: "string"
      - name: "planificationDate"
        in: "query"
        description: "Target date in which contacts will be used for a marketing action.\
          \ required for DND policy evaluation"
        required: false
        type: "string"
      security:
        - OAuth2:
          - CONFIGURATOR
          - CLAB_OPERATOR
          - ADMIN
          - POWERUSER
          - USER
          - GUEST
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/DataSetRes"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
  /contacts/{customerId}:
    get:
      tags:
      - "Contacts"
      summary: "Get a contact"
      description: "Returns informations about the contact with the given customer\
        \ id"
      operationId: "getContactById"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/TenantHeader'
      - name: "customerId"
        in: "path"
        description: "Primary key of customer"
        required: true
        type: "string"
      - name: "attributes"
        in: "query"
        description: "List of contact attributes"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      security:
        - OAuth2:
          - CLAB_OPERATOR
          - ADMIN
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/DataSetRes"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
    delete:
      tags:
      - "Contacts"
      summary: "Delete a contact"
      description: "Delete a contact and all the events related by customer id"
      operationId: "deleteUserAndRelatedEventsByCustomerId"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/TenantHeader'
      - name: "customerId"
        in: "path"
        description: "Primary key of customer"
        required: true
        type: "string"
      security:
        - OAuth2:
          - CLAB_OPERATOR
      responses:
        204:
          description: "The resource was deleted successfully"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
  /contacts/{customerId}/events/{category}/{type}:
    post:
      tags:
      - "Events"
      summary: "Download the customer events"
      description: "Returns a csv file with paged list of customer events that match\
        \ with the given parameters"
      operationId: "downloadCustomerEvents"
      consumes:
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/csv"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/TenantHeader'
      - name: "customerId"
        in: "path"
        description: "Primary key of customer"
        required: true
        type: "string"
      - name: "category"
        in: "path"
        description: "Event category"
        required: true
        type: "string"
      - name: "type"
        in: "path"
        description: "Event type"
        required: true
        type: "string"
      security:
        - OAuth2:
          - CONFIGURATOR
          - CLAB_OPERATOR
          - ADMIN
          - POWERUSER
          - USER
          - GUEST
      responses:
        200:
          description: "Ok"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
  /contacts/{customerId}/plans:
    get:
      tags:
      - "Plans"
      summary: "Get a list of plans"
      description: "Return paged plans resource where contact is in associated list"
      operationId: "getPlansFromContactInList"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/TenantHeader'
      - name: "customerId"
        in: "path"
        description: "Primary key of customer"
        required: true
        type: "string"
      security:
        - OAuth2:
          - CONFIGURATOR
          - CLAB_OPERATOR
          - ADMIN
          - POWERUSER
          - USER
          - GUEST
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/CollectionPageResource"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
  /dashboards:
    get:
      tags:
      - "Dashboard"
      summary: "Get all dashboard"
      description: "Returns a list of dashboards"
      operationId: "getAllDashboards"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/TenantHeader'
      - name: "limit"
        in: "query"
        description: "The maximum number of results, Default = -1"
        required: false
        type: "integer"
        format: "int32"
      - name: "offset"
        in: "query"
        description: "The offset. Default = 0."
        required: false
        type: "integer"
        format: "int32"
      security:
        - OAuth2:
          - CLAB_OPERATOR
          - ADMIN
          - POWERUSER
          - USER
          - GUEST
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/DashboardListRes"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
    post:
      tags:
      - "Dashboard"
      summary: "Create a dashboard "
      description: "Returns a dashboard"
      operationId: "postDashboard"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/TenantHeader'
      - in: "body"
        name: "dashboard"
        description: "The dashboard resource"
        required: true
        schema:
          $ref: "#/definitions/DashboardRes"
      security:
        - OAuth2:
          - CLAB_OPERATOR
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/DashboardRes"
        201:
          description: "The resource was created successfully"
          schema:
            $ref: "#/definitions/DashboardRes"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not found"
          schema:
            $ref: "#/definitions/ErrorResource"
        409:
          description: "Resource Conflict"
          schema:
            $ref: "#/definitions/ErrorResource"
  /dashboards/{dashboardUuid}/widgets/{widgetUuid}:
    delete:
      tags:
      - "Dashboard"
      summary: "Delete a dashboard widget"
      description: "Delete a dashboard widget relationship"
      operationId: "deleteDashboardWidgets"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/TenantHeader'
      - name: "dashboardUuid"
        in: "path"
        description: "The UUID of the dashboard"
        required: true
        type: "string"
      - name: "widgetUuid"
        in: "path"
        description: "The UUID of the widget"
        required: true
        type: "string"
      security:
        - OAuth2:
          - CLAB_OPERATOR
      responses:
        204:
          description: "The resource was deleted successfully"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
  /dashboards/{uuid}:
    get:
      tags:
      - "Dashboard"
      summary: "Get a dashboard"
      description: "Returns a dashboard"
      operationId: "getDashboardPolicyById"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/TenantHeader'
      - name: "uuid"
        in: "path"
        description: "The UUID of the dashboard"
        required: true
        type: "string"
      security:
        - OAuth2:
          - CLAB_OPERATOR
          - ADMIN
          - POWERUSER
          - USER
          - GUEST
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/DashboardRes"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
    put:
      tags:
      - "Dashboard"
      summary: "Modify a dashboard"
      description: "Returns a dashboard"
      operationId: "modifyDashboard"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/TenantHeader'
      - name: "uuid"
        in: "path"
        description: "The UUID of the dashboard"
        required: true
        type: "string"
      - in: "body"
        name: "dashboard"
        description: "The dashboard resource"
        required: true
        schema:
          $ref: "#/definitions/DashboardRes"
      security:
        - OAuth2:
          - CLAB_OPERATOR
      responses:
        200:
          description: "The resource was updated successfully"
          schema:
            $ref: "#/definitions/DashboardRes"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not found"
          schema:
            $ref: "#/definitions/ErrorResource"
        409:
          description: "Resource Conflict"
          schema:
            $ref: "#/definitions/ErrorResource"
    delete:
      tags:
      - "Dashboard"
      summary: "Delete a dashboard"
      description: "Delete a dashboard with the given uuid"
      operationId: "deleteDashboardById"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/TenantHeader'
      - name: "uuid"
        in: "path"
        description: "The UUID of the dashboard"
        required: true
        type: "string"
      security:
        - OAuth2:
          - CLAB_OPERATOR
      responses:
        204:
          description: "The resource was deleted successfully"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
  /dashboards/{uuid}/widgets:
    get:
      tags:
      - "Dashboard"
      summary: "Get a dashboard widgets"
      description: "Returns a list of widgets"
      operationId: "getDashboardWidgets"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/TenantHeader'
      - name: "uuid"
        in: "path"
        description: "The UUID of the dashboard"
        required: true
        type: "string"
      security:
        - OAuth2:
          - CLAB_OPERATOR
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/WidgetListRes"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
    put:
      tags:
      - "Dashboard"
      summary: "Create a dashboard widget relationship"
      description: "Returns a dashboard"
      operationId: "postDashboardWidgets"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/TenantHeader'
      - name: "uuid"
        in: "path"
        description: "The UUID of the dashboard"
        required: true
        type: "string"
      - in: "body"
        name: "widget"
        description: "The dashboard widget resource"
        required: true
        schema:
          $ref: "#/definitions/WidgetListRes"
      security:
        - OAuth2:
          - CONFIGURATOR
          - CLAB_OPERATOR
          - ADMIN
          - POWERUSER
          - USER
          - GUEST
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/DashboardRes"
        201:
          description: "The resource was created successfully"
          schema:
            $ref: "#/definitions/DashboardRes"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not found"
          schema:
            $ref: "#/definitions/ErrorResource"
        409:
          description: "Resource Conflict"
          schema:
            $ref: "#/definitions/ErrorResource"
  /datasets/{statementId}:
    get:
      tags:
      - "Datasets"
      summary: "Get a dataset"
      description: "Returns a paged list of results that match with the given query"
      operationId: "execute"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/TenantHeader'
      - name: "statementId"
        in: "path"
        description: "The UUID of the statement"
        required: true
        type: "string"
      - name: "segmentId"
        in: "query"
        description: "The UUID of the segment"
        required: false
        type: "string"
      - name: "format"
        in: "query"
        description: "The format of the response (extended|compressed). Default value is 'extended'"
        required: false
        type: "string"
      - name: "forceReload"
        in: "query"
        description: "Disable dataset cache. Default value is false ( cache disabled\
          \ )"
        required: false
        type: "boolean"
      - name: "startDate"
        in: "query"
        description: "The begin of date interval"
        required: false
        type: "string"
      - name: "endDate"
        in: "query"
        description: "The end of date interval"
        required: false
        type: "string"
      - name: "limit"
        in: "query"
        description: "The maximum number of statements"
        required: false
        type: "integer"
      - name: "offset"
        in: "query"
        description: "Offset applied to retrieved statements list before returning\
          \ the required number of statements"
        required: false
        type: "integer"
      - name: "order"
        in: "query"
        description: "Sort directions of statements"
        required: false
        type: "string"
      - name: "orderField"
        in: "query"
        description: "Sort field of statements"
        required: false
        type: "string"
      - name: "windowTime"
        in: "query"
        description: "DAY|MONTH|QUARTER|YEAR"
        required: false
        type: "string"
      security:
        - OAuth2:
          - CLAB_OPERATOR
          - ADMIN
          - POWERUSER
          - USER
          - GUEST
      responses:
        200:
          description: "Ok"
          schema:
            type: "object"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
  /events/{category}:
    delete:
      tags:
      - "Events"
      summary: "Delete the events category"
      description: "Delete the events with the given category"
      operationId: "deleteEventsCategory"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/TenantHeader'
      - name: "category"
        in: "path"
        description: "Event category"
        required: true
        type: "string"
      - name: "categoryName"
        in: "query"
        description: "Event category Name"
        required: true
        type: "string"
      - name: "type"
        in: "query"
        description: "Event Type"
        required: false
        type: "string"
      security:
        - OAuth2:
          - CLAB_OPERATOR
          - ADMIN
      responses:
        204:
          description: "The resource was deleted successfully"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
  /extContents/automations:
    get:
      tags:
      - "External Contents"
      summary: "Get all active automations"
      description: "Returns a list of active automations for a range of date"
      operationId: "getActiveAutomation"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/TenantHeader'
      - name: "fromDate"
        in: "query"
        description: "The begin of date interval"
        required: true
        type: "string"
        format: "date-time"
      - name: "toDate"
        in: "query"
        description: "The end of date interval"
        required: false
        type: "string"
        format: "date-time"
      security:
        - OAuth2:
          - CONFIGURATOR
          - CLAB_OPERATOR
          - ADMIN
          - POWERUSER
          - USER
          - GUEST
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/CollectionPageResource"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
  /extContents/pagebuilderTemplates:
    get:
      tags:
      - "External Contents"
      summary: "Get all templates"
      description: "Returns a list of templates"
      operationId: "getPageBuilderTemplates"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/TenantHeader'
      - name: "pageSize"
        in: "query"
        description: "The maximum number of template"
        required: false
        type: "integer"
        format: "int32"
      - name: "currentPage"
        in: "query"
        description: "The page number. Default value is 1"
        required: false
        type: "integer"
        format: "int32"
      - name: "orderBy"
        in: "query"
        description: "Field name to sort result"
        required: false
        type: "string"
      - name: "sortBy"
        in: "query"
        description: "The sort order. Default value is asc"
        required: false
        type: "string"
      security:
        - OAuth2:
          - CONFIGURATOR
          - CLAB_OPERATOR
          - ADMIN
          - POWERUSER
          - USER
          - GUEST
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/PageBuilderTemplateListRes"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
  /extContents/pagebuilderTemplates/{templateId}/pages:
    get:
      tags:
      - "External Contents"
      summary: "Get all template pages"
      description: "Returns a list of template pages"
      operationId: "getPageBuilderPagesList"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/TenantHeader'
      - name: "templateId"
        in: "path"
        description: "The ID of the template"
        required: true
        type: "integer"
        format: "int32"
      - name: "pageSize"
        in: "query"
        description: "The maximum number of template"
        required: false
        type: "integer"
        format: "int32"
      - name: "currentPage"
        in: "query"
        description: "The page number. Default value is 1"
        required: false
        type: "integer"
        format: "int32"
      - name: "orderBy"
        in: "query"
        description: "Field name to sort result"
        required: false
        type: "string"
      - name: "sortBy"
        in: "query"
        description: "The sort order. Default value is asc"
        required: false
        type: "string"
      - name: "overview"
        in: "query"
        description: "Get html content at the same time. Default value is false"
        required: false
        type: "boolean"
      security:
        - OAuth2:
          - CONFIGURATOR
          - CLAB_OPERATOR
          - ADMIN
          - POWERUSER
          - USER
          - GUEST
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/PageBuilderPagesListRes"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
  /extContents/pagebuilderTemplates/{templateId}/pages/{pageId}:
    get:
      tags:
      - "External Contents"
      summary: "Get page content"
      description: "Returns a page content"
      operationId: "getPageBuilderPagesListByPageId"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/TenantHeader'
      - name: "templateId"
        in: "path"
        description: "The ID of the template"
        required: true
        type: "integer"
        format: "int32"
      - name: "pageId"
        in: "path"
        description: "The number of page"
        required: true
        type: "integer"
        format: "int32"
      security:
        - OAuth2:
          - CONFIGURATOR
          - CLAB_OPERATOR
          - ADMIN
          - POWERUSER
          - USER
          - GUEST
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/PageBuilderPagesRes"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
  /integrations:
    get:
      tags:
      - "Integrations"
      summary: "Get all integrations"
      description: "Returns a list of available integrations"
      operationId: "getAllIntegrationApplication"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/TenantHeader'
      security:
        - OAuth2:
          - CLAB_OPERATOR
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/IntegrationApplicationRes"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
  /integrations/{application}:
    get:
      tags:
      - "Integrations"
      summary: "Get a integration"
      description: "Returns a integration with the given application"
      operationId: "getIntegrations"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/TenantHeader'
      - name: "application"
        in: "path"
        description: "The application of the integration"
        required: true
        type: "string"
      security:
        - OAuth2:
          - CLAB_OPERATOR
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/IntegrationRes"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
  /integrations/{application}/disabled:
    patch:
      tags:
      - "Integrations"
      summary: "Disable a integration"
      description: "Disable a integration"
      operationId: "integrationDisabled"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/TenantHeader'
      - name: "application"
        in: "path"
        description: "The application of the integration"
        required: true
        type: "string"
      security:
        - OAuth2:
          - CLAB_OPERATOR
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/IntegrationRes"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
        422:
          description: "Unprocessable Entity"
          schema:
            $ref: "#/definitions/ErrorResource"
  /integrations/{application}/enabled:
    patch:
      tags:
      - "Integrations"
      summary: "Enable a integration"
      description: "Enable a integration"
      operationId: "integrationEnabled"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/TenantHeader'
      - name: "application"
        in: "path"
        description: "The application of the integration"
        required: true
        type: "string"
      security:
        - OAuth2:
          - CLAB_OPERATOR
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/IntegrationRes"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
        422:
          description: "Unprocessable Entity"
          schema:
            $ref: "#/definitions/ErrorResource"
  /integrations/{application}/events/{category}/resetOffset:
    patch:
      tags:
      - "Integrations"
      summary: "Reset event offset for updates"
      description: "Reset event offset for updates"
      operationId: "resetIntegrationEvent"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/TenantHeader'
      - name: "application"
        in: "path"
        description: "The application of the integration"
        required: true
        type: "string"
      - name: "category"
        in: "path"
        description: "Event category"
        required: true
        type: "string"
      - name: "eventName"
        in: "query"
        description: "Event name"
        required: false
        type: "string"
      security:
        - OAuth2:
          - CLAB_OPERATOR
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/IntegrationRes"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
        422:
          description: "Unprocessable Entity"
          schema:
            $ref: "#/definitions/ErrorResource"
  /jobs:
    get:
      tags:
      - "Jobs"
      summary: "Get all jobs"
      description: "Returns a list of jobs"
      operationId: "getJobs"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - name: "tenant"
        in: "query"
        description: "The ID of the tenant"
        required: false
        type: "string"
      - name: "includeOrphan"
        in: "query"
        description: "Includes orphan job. Default value is false"
        required: false
        type: "boolean"
      security:
        - OAuth2:
          - CONFIGURATOR
          - CLAB_OPERATOR
          - ADMIN
          - POWERUSER
          - USER
          - GUEST
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/TenantJobListRes"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
    post:
      tags:
      - "Jobs"
      summary: "Launch a single job"
      description: "Launch a single job with the given tenant ID and plugin UUID"
      operationId: "launchSingleJob"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/TenantHeader'
      - in: "body"
        name: "job"
        description: "The job resource"
        required: true
        schema:
          $ref: "#/definitions/TenantJobRes"
      security:
        - OAuth2:
          - CLAB_OPERATOR
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/TenantJobRes"
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/TenantJobRes"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
  /jobs/flow:
    post:
      tags:
      - "Jobs"
      summary: "Launch a flow job"
      description: "Launch a flow job"
      operationId: "launchFlowJob"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - name: "tenant"
        in: "query"
        description: "The ID of the tenant"
        required: true
        type: "string"
      security:
        - OAuth2:
          - CLAB_OPERATOR
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/TenantJobRes"
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/TenantJobRes"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
  /jobs/orphans:
    get:
      tags:
      - "Jobs"
      summary: "Get all orphan jobs"
      description: "Returns a list of orphan jobs"
      operationId: "getOrphansJobs"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - name: "tenant"
        in: "query"
        description: "The ID of the tenant"
        required: false
        type: "string"
      security:
        - OAuth2:
          - CONFIGURATOR
          - CLAB_OPERATOR
          - ADMIN
          - POWERUSER
          - USER
          - GUEST
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/TenantJobListRes"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
  /jobs/{uuid}:
    get:
      tags:
      - "Jobs"
      summary: "Get a job"
      description: "Returns a job with the given UUID"
      operationId: "getJobByUuid"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - name: "uuid"
        in: "path"
        description: "The UUID of the job"
        required: true
        type: "string"
      security:
        - OAuth2:
          - CONFIGURATOR
          - CLAB_OPERATOR
          - ADMIN
          - POWERUSER
          - USER
          - GUEST
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/TenantJobRes"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
  /jobs/{uuid}/execution:
    post:
      tags:
      - "Jobs"
      summary: "Launch a single job"
      description: "Launch a single job with the given UUID"
      operationId: "launchSingleJobByUuid"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - name: "uuid"
        in: "path"
        description: "The UUID of the job"
        required: true
        type: "string"
      security:
        - OAuth2:
          - CONFIGURATOR
          - CLAB_OPERATOR
          - ADMIN
          - POWERUSER
          - USER
          - GUEST
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/TenantJobRes"
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/TenantJobRes"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
  /kpis:
    get:
      tags:
      - "Kpis"
      summary: "Get all available kpis"
      description: "Returns a list of available kpis"
      operationId: "getKpis"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      security:
        - OAuth2:
          - CLAB_OPERATOR
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/KpiListRes"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
  /kpis/stats:
    get:
      tags:
      - "Kpis"
      summary: "Get all tenants statistics"
      description: "Returns statistics about all tenants"
      operationId: "getTenantsStats"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      security:
        - OAuth2:
          - CLAB_OPERATOR
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/TenantStatsKpiListRes"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
  /kpis/tenants:
    get:
      tags:
      - "Kpis"
      summary: "Get all tenants information"
      description: "Returns informations about all tenants"
      operationId: "getTenantsInfo"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      security:
        - OAuth2:
          - CLAB_OPERATOR
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/TenantKpiListRes"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
  /kpis/usage/plans:
    get:
      tags:
      - "Kpis"
      summary: "Get usage kpis"
      description: "Returns a list of usage kpis about tenants' plans"
      operationId: "getPlanUsageKpis"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - name: "tenant"
        in: "query"
        description: "Array of tenant ID"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      security:
        - OAuth2:
          - CLAB_OPERATOR
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/KpiListUsageRes"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
  /kpis/usage/segments:
    get:
      tags:
      - "Kpis"
      summary: "Get usage kpis"
      description: "Returns a list of usage kpis about tenants' plans"
      operationId: "getSegmentUsageKpis"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - name: "tenant"
        in: "query"
        description: "Array of tenant ID"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      security:
        - OAuth2:
          - CLAB_OPERATOR
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/KpiListUsageRes"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
  /lists/{listUuid}:
    get:
      tags:
      - "Scheduled-lists"
      summary: "Get a contact list metadata"
      description: "Returns a contact list metadata with the given UUID"
      operationId: "getList"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/TenantHeader'
      - name: "listUuid"
        in: "path"
        description: "The UUID of the list"
        required: true
        type: "string"
      security:
        - OAuth2:
          - CONFIGURATOR
          - CLAB_OPERATOR
          - ADMIN
          - POWERUSER
          - USER
          - GUEST
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/ContactListMetaRes"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
  /lists/{uuid}/contacts:
    get:
      tags:
      - "Scheduled-lists"
      summary: "Get list contacts"
      description: "Returns the contacts contained in the list"
      operationId: "downloadContactsJson"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/TenantHeader'
      - name: "uuid"
        in: "path"
        description: "The UUID of the list"
        required: true
        type: "string"
      - name: "attributes"
        in: "query"
        description: "List of contact attributes"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "resultType"
        in: "query"
        description: "Result can be hits (count is returned), list (contacts id and\
          \ email are returned), partial_list (only defined attributes are returned),\
          \ full_list (all attributes are returned)"
        required: false
        type: "string"
      - name: "limit"
        in: "query"
        description: "The maximum number of contacts"
        required: false
        type: "integer"
        format: "int32"
      - name: "offset"
        in: "query"
        description: "Offset applied to retrieved contacts list before returning the\
          \ required number of contacts"
        required: false
        type: "integer"
        format: "int32"
      security:
        - OAuth2:
          - CONFIGURATOR
          - CLAB_OPERATOR
          - ADMIN
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/DataSetRes"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
  /lists/{uuid}/contacts.csv:
    post:
      tags:
      - "Scheduled-lists"
      summary: "Download a contact list"
      description: "Returns a csv file with paged list of contacts"
      operationId: "downloadContactsCsv"
      produces:
      - "application/json"
      - "text/csv"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/TenantHeader'
      - name: "uuid"
        in: "path"
        description: "The UUID of the list"
        required: true
        type: "string"
      - name: "attributes"
        in: "query"
        description: "List of contact attributes"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "resultType"
        in: "query"
        description: "Result can be hits (count is returned), list (contacts id and\
          \ email are returned), partial_list (only defined attributes are returned),\
          \ full_list (all attributes are returned)"
        required: false
        type: "string"
      - name: "filename"
        in: "query"
        description: "The name of the file"
        required: true
        type: "string"
      - name: "limit"
        in: "query"
        description: "The maximum number of contacts"
        required: false
        type: "integer"
        format: "int32"
      - name: "offset"
        in: "query"
        description: "Offset applied to retrieved contacts list before returning the\
          \ required number of contacts"
        required: false
        type: "integer"
        format: "int32"
      security:
        - OAuth2:
          - CONFIGURATOR
          - CLAB_OPERATOR
          - ADMIN
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/ContactListMetaRes"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
        409:
          description: "The list is not materialized"
          schema:
            $ref: "#/definitions/ErrorResource"
  /me:
    get:
      tags:
      - "User"
      summary: "Get current user info"
      description: "Returns basic informations about the current user and a list of\
        \ tenants on which it can operate"
      operationId: "getMe"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      security:
        - OAuth2:
          - CONFIGURATOR
          - CLAB_OPERATOR
          - ADMIN
          - POWERUSER
          - USER
          - GUEST
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/UserRes"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
  /models:
    get:
      tags:
      - "Models"
      summary: "Get all metadata"
      description: "Returns the metadata"
      operationId: "getAllMeta"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/TenantHeader'
      - name: "schema"
        in: "query"
        description: "Specify the metadata to read. Available values: events, contacts.\
          \ If not specified returns all the metadata."
        required: false
        type: "string"
      security:
        - OAuth2:
          - CONFIGURATOR
          - CLAB_OPERATOR
          - ADMIN
          - POWERUSER
          - USER
          - GUEST
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/ModelsRes"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
  /models/contacts:
    get:
      tags:
      - "Models"
      summary: "Get contact meta"
      description: "Return a paged list of metadata for all the attributes of the\
        \ contact"
      operationId: "getContactMeta"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/TenantHeader'
      security:
        - OAuth2:
          - CONFIGURATOR
          - CLAB_OPERATOR
          - ADMIN
          - POWERUSER
          - USER
          - GUEST
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/ModelsRes"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
  /models/contacts/attributes/{attributeName}/bitmask:
    post:
      tags:
      - "Models"
      summary: "Set contact attribute to bitmask"
      description: "Full refresh of attribute bitmask value"
      operationId: "setBitmaskContactsLovAttribute"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/TenantHeader'
      - name: "attributeName"
        in: "path"
        description: "The attribute name"
        required: true
        type: "string"
      - in: "body"
        name: "bitmask"
        description: "The bitmask resource"
        required: true
        schema:
          $ref: "#/definitions/BitmaskRes"
      security:
        - OAuth2:
          - CLAB_OPERATOR
          - ADMIN
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/BitmaskRes"
        201:
          description: "The resource was created successfully"
          schema:
            $ref: "#/definitions/BitmaskRes"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
    delete:
      tags:
      - "Models"
      summary: "Delete contact attribute bitmask values"
      description: ""
      operationId: "deleteBitmaskContactsLovAttribute"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/TenantHeader'
      - name: "attributeName"
        in: "path"
        description: "The attribute name"
        required: true
        type: "string"
      security:
        - OAuth2:
          - CLAB_OPERATOR
          - ADMIN
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/BitmaskRes"
        204:
          description: "The resource was deleted successfully"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
  /models/contacts/attributes/{attributeName}/values:
    get:
      tags:
      - "Models"
      summary: "list of value of a specific contact attribute"
      description: "Return a list of available values for the given attribute"
      operationId: "getContactsLov"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/TenantHeader'
      - name: "attributeName"
        in: "path"
        description: "The attribute name"
        required: true
        type: "string"
      - name: "parentAttributeValue"
        in: "query"
        description: "The parent attribute value"
        required: false
        type: "string"
      security:
        - OAuth2:
          - CONFIGURATOR
          - CLAB_OPERATOR
          - ADMIN
          - POWERUSER
          - USER
          - GUEST
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/LovsListRes"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
  /models/contacts/attributes/{attributeName}/values/{lovId}:
    get:
      tags:
      - "Models"
      summary: "Gets a value from the LOV of a specific contact attribute given a\
        \ lov ID"
      description: "Returns the values of the given contact LOV value"
      operationId: "getContactLovByLovId"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/TenantHeader'
      - name: "attributeName"
        in: "path"
        description: "The attribute name"
        required: true
        type: "string"
      - name: "lovId"
        in: "path"
        description: "The ID of lov"
        required: true
        type: "string"
      security:
        - OAuth2:
          - CONFIGURATOR
          - CLAB_OPERATOR
          - ADMIN
          - POWERUSER
          - USER
          - GUEST
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/LovItemRes"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
  /models/contacts/attributes/{name}:
    get:
      tags:
      - "Models"
      summary: "Gets metadata for a specific contact attribute"
      description: "Returns the values of the given contact attribute"
      operationId: "getContactAttributeMetaByName"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/TenantHeader'
      - name: "name"
        in: "path"
        description: "The attribute name"
        required: true
        type: "string"
      security:
        - OAuth2:
          - CONFIGURATOR
          - CLAB_OPERATOR
          - ADMIN
          - POWERUSER
          - USER
          - GUEST
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/ModelAttributeRes"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
    put:
      tags:
      - "Models"
      summary: "Edits metadata associated to a contact attribute"
      description: "Returns the modified contact attribute metadata"
      operationId: "putContactAttributeMetaByName"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/TenantHeader'
      - name: "name"
        in: "path"
        description: "The attribute name"
        required: true
        type: "string"
      - in: "body"
        name: "contact attribute"
        description: "The contact attribute resource"
        required: true
        schema:
          $ref: "#/definitions/ModelAttributeRes"
      security:
        - OAuth2:
          - CLAB_OPERATOR
          - ADMIN
      responses:
        200:
          description: "The resource was updated successfully"
          schema:
            $ref: "#/definitions/ModelAttributeRes"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
        409:
          description: "Resource conflict"
          schema:
            $ref: "#/definitions/ErrorResource"
  /models/dimensions/attributes/{attributeName}/values/{lovId}:
    get:
      tags:
      - "Models"
      summary: "Gets a value from the LOV of a specific dimension attribute given\
        \ a lov ID"
      description: "Returns the values of the given event LOV value"
      operationId: "getDimensiontLovByLovId"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/TenantHeader'
      - name: "attributeName"
        in: "path"
        description: "The attribute name"
        required: true
        type: "string"
      - name: "lovId"
        in: "path"
        description: "The ID of lov"
        required: true
        type: "string"
      security:
        - OAuth2:
          - CONFIGURATOR
          - CLAB_OPERATOR
          - ADMIN
          - POWERUSER
          - USER
          - GUEST
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/LovItemRes"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
  /models/dimensions/attributes/{name}:
    get:
      tags:
      - "Models"
      summary: "Gets metadata for a specific dimension attribute"
      description: "Return the values for the given dimension attribute"
      operationId: "getDimensionAttributeMetaByName"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/TenantHeader'
      - name: "name"
        in: "path"
        description: "The dimension name"
        required: true
        type: "string"
        pattern: ".+"
      security:
        - OAuth2:
          - CONFIGURATOR
          - CLAB_OPERATOR
          - ADMIN
          - POWERUSER
          - USER
          - GUEST
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/LovItemRes"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
    put:
      tags:
      - "Models"
      summary: "Edits metadata associated to a dimension attribute"
      description: "Returns the modified event attribute metadata"
      operationId: "putDimensionAttributeMetaByName"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/TenantHeader'
      - name: "name"
        in: "path"
        description: "The dimension name"
        required: true
        type: "string"
        pattern: ".+"
      - in: "body"
        name: "dimension attribute"
        description: "The dimension attribute resource"
        required: true
        schema:
          $ref: "#/definitions/ModelAttributeRes"
      security:
        - OAuth2:
          - CLAB_OPERATOR
          - ADMIN
      responses:
        200:
          description: "The resource was updated successfully"
          schema:
            $ref: "#/definitions/ModelAttributeRes"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
        409:
          description: "Resource conflict"
          schema:
            $ref: "#/definitions/ErrorResource"
  /models/events:
    get:
      tags:
      - "Models"
      summary: "Get all events meta"
      description: "Return metadata for all the events"
      operationId: "getAllEventsMeta"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/TenantHeader'
      security:
        - OAuth2:
          - CONFIGURATOR
          - CLAB_OPERATOR
          - ADMIN
          - POWERUSER
          - USER
          - GUEST
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/ModelsRes"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
  /models/events/{category}:
    get:
      tags:
      - "Models"
      summary: "Get specific event meta"
      description: "Return metadata for all events in the given category"
      operationId: "getEventMetaByCategory"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/TenantHeader'
      - name: "category"
        in: "path"
        description: "The event category"
        required: true
        type: "string"
      security:
        - OAuth2:
          - CONFIGURATOR
          - CLAB_OPERATOR
          - ADMIN
          - POWERUSER
          - USER
          - GUEST
      responses:
        200:
          description: "Ok"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ModelsEventsRes"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
  /models/events/{category}/{type}:
    get:
      tags:
      - "Models"
      summary: "Get specific event meta"
      description: "Return metadata for the event of specified type in the given category"
      operationId: "getEventMetaByCategoryAndType"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/TenantHeader'
      - name: "category"
        in: "path"
        description: "The event category"
        required: true
        type: "string"
      - name: "type"
        in: "path"
        description: "The type of event category"
        required: true
        type: "string"
      security:
        - OAuth2:
          - CONFIGURATOR
          - CLAB_OPERATOR
          - ADMIN
          - POWERUSER
          - USER
          - GUEST
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/ModelsEventsRes"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
  /models/events/{category}/{type}/attributes/{attributeName}/values:
    get:
      tags:
      - "Models"
      summary: "Get list of value of a specific event attribute"
      description: "Return a list of available values for the given attribute"
      operationId: "getEventLov"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/TenantHeader'
      - name: "category"
        in: "path"
        description: "The event category"
        required: true
        type: "string"
      - name: "type"
        in: "path"
        description: "The type of event category"
        required: true
        type: "string"
      - name: "attributeName"
        in: "path"
        description: "The attribute name"
        required: true
        type: "string"
      - name: "parentAttributeValue"
        in: "query"
        description: "The parent attribute value"
        required: false
        type: "string"
      security:
        - OAuth2:
          - CONFIGURATOR
          - CLAB_OPERATOR
          - ADMIN
          - POWERUSER
          - USER
          - GUEST
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/LovsListRes"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
  /models/events/{category}/{type}/attributes/{attributeName}/values/{lovId}:
    get:
      tags:
      - "Models"
      summary: "Gets a value from the LOV of a specific event attribute given a lov\
        \ ID"
      description: "Returns the values of the given event LOV value"
      operationId: "getEventLovByLovId"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/TenantHeader'
      - name: "category"
        in: "path"
        description: "The event category"
        required: true
        type: "string"
      - name: "type"
        in: "path"
        description: "The type of event category"
        required: true
        type: "string"
      - name: "attributeName"
        in: "path"
        description: "The attribute name"
        required: true
        type: "string"
      - name: "lovId"
        in: "path"
        description: "The ID of lov"
        required: true
        type: "string"
      security:
        - OAuth2:
          - CONFIGURATOR
          - CLAB_OPERATOR
          - ADMIN
          - POWERUSER
          - USER
          - GUEST
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/LovItemRes"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
  /models/events/{category}/{type}/attributes/{name}:
    get:
      tags:
      - "Models"
      summary: "Gets metadata for a specific event attribute"
      description: "Returns the values of the given event attribute"
      operationId: "getEventAttributeMetaByName"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/TenantHeader'
      - name: "category"
        in: "path"
        description: "The event category"
        required: true
        type: "string"
      - name: "type"
        in: "path"
        description: "The type of event category"
        required: true
        type: "string"
      - name: "name"
        in: "path"
        description: "The name of attribute"
        required: true
        type: "string"
        pattern: ".+"
      security:
        - OAuth2:
          - CONFIGURATOR
          - CLAB_OPERATOR
          - ADMIN
          - POWERUSER
          - USER
          - GUEST
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/ModelAttributeRes"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
    put:
      tags:
      - "Models"
      summary: "Edits metadata associated to an event attribute"
      description: "Returns the modified event attribute metadata"
      operationId: "putEventAttributeMetaByName"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/TenantHeader'
      - name: "category"
        in: "path"
        description: "The event category"
        required: true
        type: "string"
      - name: "type"
        in: "path"
        description: "The type of event category"
        required: true
        type: "string"
      - name: "name"
        in: "path"
        description: "The name of attribute"
        required: true
        type: "string"
        pattern: ".+"
      - in: "body"
        name: "event attribute"
        description: "The event attribute resource"
        required: true
        schema:
          $ref: "#/definitions/ModelAttributeRes"
      security:
        - OAuth2:
          - CLAB_OPERATOR
          - ADMIN
      responses:
        200:
          description: "The resource was updated successfully"
          schema:
            $ref: "#/definitions/ModelAttributeRes"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
  /models/specials:
    get:
      tags:
      - "Models"
      summary: "Get specials query meta"
      description: "Return a list of metadata for special query available"
      operationId: "getSpecialsQueryAvailable"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/TenantHeader'
      security:
        - OAuth2:
          - CONFIGURATOR
          - CLAB_OPERATOR
          - ADMIN
          - POWERUSER
          - USER
          - GUEST
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/ModelSpecialsListRes"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
  /models/specials/{subtype}:
    get:
      tags:
      - "Models"
      summary: "Get specials query meta by subtype"
      description: "Return a list of metadata for special query available filtered\
        \ by subtype"
      operationId: "getSpecialsQueryByCategoryAvailable"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/TenantHeader'
      - name: "subtype"
        in: "path"
        description: "Subtype of special"
        required: true
        type: "string"
      security:
        - OAuth2:
          - CONFIGURATOR
          - CLAB_OPERATOR
          - ADMIN
          - POWERUSER
          - USER
          - GUEST
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/ModelSpecialsListRes"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
  /monitors/dataloaders:
    get:
      tags:
      - "Traces"
      summary: "Get all feedbacks of the loaded data"
      description: "Returns a list of all the feedbacks of the loaded data"
      operationId: "getDataLoaderFeedbacks"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/TenantHeader'
      - name: "tenant"
        in: "query"
        description: "The ID of the tenant"
        required: true
        type: "string"
      - name: "startDate"
        in: "query"
        description: "The begin of date interval"
        required: false
        type: "string"
      - name: "endDate"
        in: "query"
        description: "The end of date interval"
        required: false
        type: "string"
      security:
        - OAuth2:
          - CLAB_OPERATOR
          - ADMIN
          - POWERUSER
          - USER
          - GUEST
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/DataLoaderFlowListRes"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
  /monitors/dataloaders/{uuid}:
    get:
      tags:
      - "Traces"
      summary: "Get the feedback of the loaded data"
      description: "Return the feedback of the loaded data"
      operationId: "getDataLoaderFeedback"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/TenantHeader'
      - name: "uuid"
        in: "path"
        description: "The UUID of feedback"
        required: true
        type: "string"
      security:
        - OAuth2:
          - CLAB_OPERATOR
          - ADMIN
          - POWERUSER
          - USER
          - GUEST
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/DataLoaderFlowRes"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
  /notifications/{category}:
    get:
      tags:
      - "Notification"
      summary: "Get notifications"
      description: "Returns a list of notifications. By default unread notifications\
        \ are returned"
      operationId: "getUnreadNotification"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/TenantHeader'
      - name: "category"
        in: "path"
        description: "Notification category"
        required: true
        type: "string"
      - name: "getAll"
        in: "query"
        description: "Enables to read all notifications ( read and unread )"
        required: true
        type: "boolean"
      - name: "pageSize"
        in: "query"
        description: "The maximum number of notifications per page"
        required: false
        type: "integer"
        format: "int32"
      - name: "currentPage"
        in: "query"
        description: "The page number. Default = 1"
        required: false
        type: "integer"
        format: "int32"
      - name: "orderBy"
        in: "query"
        description: "Field name to sort result"
        required: false
        type: "string"
      - name: "sortBy"
        in: "query"
        description: "The sort order. Default = desc"
        required: false
        type: "string"
      security:
        - OAuth2:
          - CONFIGURATOR
          - CLAB_OPERATOR
          - ADMIN
          - POWERUSER
          - USER
          - GUEST
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/NotificationListRes"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
  /plans:
    get:
      tags:
      - "Plans"
      summary: "Get all plans"
      description: "Returns a list of plans"
      operationId: "getPlans"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/TenantHeader'
      - name: "page"
        in: "query"
        description: "The page number of plans list"
        required: false
        type: "string"
      - name: "limit"
        in: "query"
        description: "The maximum number of plans"
        required: true
        type: "integer"
        format: "int32"
      - name: "offset"
        in: "query"
        description: "Offset applied to retrieved plans list before returning the\
          \ required number of plans"
        required: true
        type: "integer"
        format: "int32"
      - name: "status"
        in: "query"
        description: "Array of plan status"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "start"
        in: "query"
        description: "The begin of date interval"
        required: false
        type: "string"
      - name: "end"
        in: "query"
        description: "The begin of date interval"
        required: false
        type: "string"
      security:
        - OAuth2:
          - CONFIGURATOR
          - CLAB_OPERATOR
          - ADMIN
          - POWERUSER
          - USER
          - GUEST
      responses:
        200:
          description: "Ok"
          schema:
            type: "object"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
    post:
      tags:
      - "Plans"
      summary: "Create a plan"
      description: "Create a plan"
      operationId: "postPlan"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/TenantHeader'
      - in: "body"
        name: "plan"
        description: "The plan resource"
        required: true
        schema:
          $ref: "#/definitions/PlanRes"
      security:
        - OAuth2:
          - CONFIGURATOR
          - CLAB_OPERATOR
          - ADMIN
          - POWERUSER
          - USER
          - GUEST
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PlanRes"
        201:
          description: "The resource was created successfully"
          schema:
            $ref: "#/definitions/PlanRes"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
        409:
          description: "Resource Conflict"
          schema:
            $ref: "#/definitions/ErrorResource"
  /plans/recurrences:
    get:
      tags:
      - "Recurrences"
      summary: "Get all recurrences"
      description: "Returns a list of recurrences"
      operationId: "getRecurrences"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/TenantHeader'
      - name: "page"
        in: "query"
        description: "The page number of recurrences list"
        required: false
        type: "string"
      - name: "limit"
        in: "query"
        description: "The maximum number of recurrences"
        required: true
        type: "integer"
        format: "int32"
      - name: "offset"
        in: "query"
        description: "Offset applied to retrieved recurrences list before returning\
          \ the required number of recurrences"
        required: true
        type: "integer"
        format: "int32"
      - name: "status"
        in: "query"
        description: "Array of recurrences status"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      security:
        - OAuth2:
          - CLAB_OPERATOR
          - ADMIN
          - POWERUSER
          - USER
          - GUEST
      responses:
        200:
          description: "Ok"
          schema:
            type: "object"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
    post:
      tags:
      - "Recurrences"
      summary: "Create a recurrence"
      description: "Create a recurrence with the given UUID"
      operationId: "postRecurrence"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/TenantHeader'
      - in: "body"
        name: "recurrence"
        description: "The recurrence resource"
        required: true
        schema:
          $ref: "#/definitions/PlanRes"
      security:
        - OAuth2:
          - CLAB_OPERATOR
          - ADMIN
          - POWERUSER
          - USER
      responses:
        200:
          description: "The resource was created successfully"
          schema:
            $ref: "#/definitions/PlanRes"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
        409:
          description: "Resource Conflict"
          schema:
            $ref: "#/definitions/ErrorResource"
  /plans/recurrences/{uuid}:
    get:
      tags:
      - "Recurrences"
      summary: "Get a recurrence"
      description: "Returns a recurrence with the given UUID"
      operationId: "getRecurrenceByUuid"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/TenantHeader'
      - name: "uuid"
        in: "path"
        description: "The UUID of recurrence"
        required: true
        type: "string"
      security:
        - OAuth2:
          - CLAB_OPERATOR
          - ADMIN
          - POWERUSER
          - USER
          - GUEST
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/PlanRes"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
    put:
      tags:
      - "Recurrences"
      summary: "Modify a recurrence"
      description: "Modify a recurrence with the given UUID"
      operationId: "putRecurrence"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/TenantHeader'
      - name: "uuid"
        in: "path"
        description: "The UUID of recurrence"
        required: true
        type: "string"
      - in: "body"
        name: "recurrence"
        description: "The recurrence resource"
        required: true
        schema:
          $ref: "#/definitions/PlanRes"
      - name: "dndRefresh"
        in: "query"
        description: "Force update dnd policy. Default value is false"
        required: true
        type: "boolean"
      - name: "segmentRefresh"
        in: "query"
        description: "Force update segment. Default value is false"
        required: true
        type: "boolean"
      - name: "jobRefresh"
        in: "query"
        description: "Force update job. Default value is false"
        required: true
        type: "boolean"
      security:
        - OAuth2:
          - CLAB_OPERATOR
          - ADMIN
          - POWERUSER
          - USER
      responses:
        200:
          description: "The resource was updated successfully"
          schema:
            $ref: "#/definitions/PlanRes"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
        409:
          description: "Resource Conflict"
          schema:
            $ref: "#/definitions/ErrorResource"
    delete:
      tags:
      - "Recurrences"
      summary: "Delete a recurrence"
      description: "Delete a recurrence with the given UUID"
      operationId: "deleteRecurrence"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/TenantHeader'
      - name: "uuid"
        in: "path"
        description: "The UUID of recurrence"
        required: true
        type: "string"
      - name: "forced"
        in: "query"
        description: "Force delete archived recurrence. Default value is false"
        required: false
        type: "boolean"
      security:
        - OAuth2:
          - CLAB_OPERATOR
          - ADMIN
          - POWERUSER
          - USER
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PlanRes"
        202:
          description: "Accepted"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
  /plans/recurrences/{uuid}/instances:
    get:
      tags:
      - "Recurrences"
      summary: "Get a list of recurrence instances"
      description: "Returns a list of instances of the recurrence with the given UUID"
      operationId: "getRecurrencePlansInstancesByUuidV2"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/TenantHeader'
      - name: "uuid"
        in: "path"
        description: "The UUID of recurrence"
        required: true
        type: "string"
      - name: "page"
        in: "query"
        description: "The page number of instances list"
        required: false
        type: "string"
      security:
        - OAuth2:
          - CLAB_OPERATOR
          - ADMIN
          - POWERUSER
          - USER
      responses:
        200:
          description: "Ok"
          schema:
            type: "object"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
  /plans/recurrences/{uuid}/jobs:
    get:
      tags:
      - "Plan-jobs"
      summary: "Get recurrence jobs"
      description: "Returns jobs of recurrence with the given UUID"
      operationId: "getRecurrencePlanJobs"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/TenantHeader'
      - name: "uuid"
        in: "path"
        description: "The UUID of recurrence"
        required: true
        type: "string"
      security:
        - OAuth2:
          - CLAB_OPERATOR
          - ADMIN
          - POWERUSER
          - USER
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/PlanJobListRes"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
    post:
      tags:
      - "Plan-jobs"
      summary: "Create recurrence job"
      description: "Adding job to recurrence with the given UUID"
      operationId: "postRecurrenceConsumer"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/TenantHeader'
      - name: "uuid"
        in: "path"
        description: "The UUID of recurrence"
        required: true
        type: "string"
      - in: "body"
        name: "plan job"
        description: "The plan job resource"
        required: true
        schema:
          $ref: "#/definitions/PlanJobRes"
      security:
        - OAuth2:
          - CLAB_OPERATOR
          - ADMIN
          - POWERUSER
          - USER
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PlanJobRes"
        201:
          description: "The resource was created successfully"
          schema:
            $ref: "#/definitions/PlanJobRes"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
        409:
          description: "Resource Conflict"
          schema:
            $ref: "#/definitions/ErrorResource"
      deprecated: true
  /plans/recurrences/{uuid}/jobs/{jobUuid}:
    delete:
      tags:
      - "Plan-jobs"
      summary: "Delete recurrence job"
      description: "Deleting job of recurrence with the given UUIDs"
      operationId: "deleteRecurrenceConsumer"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/TenantHeader'
      - name: "uuid"
        in: "path"
        description: "The UUID of recurrence"
        required: true
        type: "string"
      - name: "jobUuid"
        in: "path"
        description: "The UUID of plan job"
        required: true
        type: "string"
      security:
        - OAuth2:
          - CLAB_OPERATOR
          - ADMIN
          - POWERUSER
          - USER
      responses:
        204:
          description: "The resource was deleted successfully"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
        409:
          description: "Resource Conflict"
          schema:
            $ref: "#/definitions/ErrorResource"
      deprecated: true
  /plans/{planUuid}/externalinfo:
    get:
      tags:
      - "Clab"
      summary: "Get external informations"
      description: "Returns every resource created by the specific plan on external\
        \ systems"
      operationId: "getConsumerFeedbacksForPlan"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/TenantHeader'
      - name: "planUuid"
        in: "path"
        description: "The UUID of the plan"
        required: true
        type: "string"
      security:
        - OAuth2:
          - CONFIGURATOR
          - CLAB_OPERATOR
          - ADMIN
          - POWERUSER
          - USER
          - GUEST
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/PlanWithExternalInfoRes"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
  /plans/{planUuid}/jobs/{consumerUuid}/callback:
    post:
      tags:
      - "Callback"
      summary: "Webhook plan"
      description: "Altering the state of a plan"
      operationId: "callbackUpdatePlan"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/TenantHeader'
      - name: "planUuid"
        in: "path"
        description: "The UUID of the plan"
        required: true
        type: "string"
      - name: "consumerUuid"
        in: "path"
        description: "The UUID of job associated with the plan"
        required: true
        type: "string"
      responses:
        200:
          description: "Ok"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
  /plans/{puid}/lists:
    get:
      tags:
      - "Scheduled-lists"
      summary: "Get a plan lists metadata"
      description: "Returns a plan list metadata with the given plan UUID"
      operationId: "getListsFromPlan"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/TenantHeader'
      - name: "puid"
        in: "path"
        description: "The UUID of the plan"
        required: true
        type: "string"
      security:
        - OAuth2:
          - CONFIGURATOR
          - CLAB_OPERATOR
          - ADMIN
          - POWERUSER
          - USER
          - GUEST
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/ContactListMetaRes"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
  /plans/{uuid}:
    get:
      tags:
      - "Plans"
      summary: "Get a plan"
      description: "Returns a plan with the given UUID"
      operationId: "getPlanByUuid"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/TenantHeader'
      - name: "uuid"
        in: "path"
        description: "The UUID of plan"
        required: true
        type: "string"
      security:
        - OAuth2:
          - CLAB_OPERATOR
          - ADMIN
          - POWERUSER
          - USER
          - GUEST
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/PlanRes"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
    put:
      tags:
      - "Plans"
      summary: "Modify a plan"
      description: "Modify a plan with the given UUID"
      operationId: "putPlan"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/TenantHeader'
      - name: "uuid"
        in: "path"
        description: "The UUID of plan"
        required: true
        type: "string"
      - in: "body"
        name: "plan"
        description: "The plan resource"
        required: true
        schema:
          $ref: "#/definitions/PlanRes"
      - name: "dndRefresh"
        in: "query"
        description: "Force update dnd policy. Default value is false"
        required: true
        type: "boolean"
      - name: "segmentRefresh"
        in: "query"
        description: "Force update segment. Default value is false"
        required: true
        type: "boolean"
      - name: "jobRefresh"
        in: "query"
        description: "Force update job. Default value is false"
        required: true
        type: "boolean"
      security:
        - OAuth2:
          - CLAB_OPERATOR
          - ADMIN
          - POWERUSER
          - USER
      responses:
        200:
          description: "The resource was updated successfully"
          schema:
            $ref: "#/definitions/PlanRes"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
        409:
          description: "Resource Conflict"
          schema:
            $ref: "#/definitions/ErrorResource"
    delete:
      tags:
      - "Plans"
      summary: "Delete a plan"
      description: "Delete a plan with the given UUID"
      operationId: "deletePlan"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/TenantHeader'
      - name: "uuid"
        in: "path"
        description: "The UUID of plan"
        required: true
        type: "string"
      - name: "forced"
        in: "query"
        description: "Force delete archived plan. Default value is false"
        required: false
        type: "boolean"
      security:
        - OAuth2:
          - CLAB_OPERATOR
          - ADMIN
          - POWERUSER
          - USER
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PlanRes"
        202:
          description: "Accepted"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
        409:
          description: "Resource Conflict"
          schema:
            $ref: "#/definitions/ErrorResource"
  /plans/{uuid}/jobs:
    get:
      tags:
      - "Plan-jobs"
      summary: "Get plan jobs"
      description: "Returns jobs of plan with the given UUID"
      operationId: "getPlanJobs"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/TenantHeader'
      - name: "uuid"
        in: "path"
        description: "The UUID of plan"
        required: true
        type: "string"
      security:
        - OAuth2:
          - CLAB_OPERATOR
          - ADMIN
          - POWERUSER
          - USER
          - GUEST
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/PlanJobListRes"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
    post:
      tags:
      - "Plan-jobs"
      summary: "Create plan job"
      description: "Adding job to plan with the given UUID"
      operationId: "postConsumer"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/TenantHeader'
      - name: "uuid"
        in: "path"
        description: "The UUID of plan"
        required: true
        type: "string"
      - in: "body"
        name: "plan job"
        description: "The plan job resource"
        required: true
        schema:
          $ref: "#/definitions/PlanJobRes"
      security:
        - OAuth2:
          - CONFIGURATOR
          - CLAB_OPERATOR
          - ADMIN
          - POWERUSER
          - USER
          - GUEST
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PlanJobRes"
        201:
          description: "The resource was created successfully"
          schema:
            $ref: "#/definitions/PlanJobRes"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
        409:
          description: "Resource Conflict"
          schema:
            $ref: "#/definitions/ErrorResource"
      deprecated: true
  /plans/{uuid}/jobs/{jobUuid}:
    delete:
      tags:
      - "Plan-jobs"
      summary: "Delete plan job"
      description: "Deleting job of plan with the given UUIDs"
      operationId: "deleteConsumer"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/TenantHeader'
      - name: "uuid"
        in: "path"
        description: "The UUID of plan"
        required: true
        type: "string"
      - name: "jobUuid"
        in: "path"
        description: "The UUID of plan job"
        required: true
        type: "string"
      security:
        - OAuth2:
          - CONFIGURATOR
          - CLAB_OPERATOR
          - ADMIN
          - POWERUSER
          - USER
          - GUEST
      responses:
        204:
          description: "The resource was deleted successfully"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
        409:
          description: "Resource Conflict"
          schema:
            $ref: "#/definitions/ErrorResource"
      deprecated: true
  /plugins:
    get:
      tags:
      - "Plugins"
      summary: "Get all plugins"
      description: "Returns a list of plugins"
      operationId: "getAllPlugin"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      security:
        - OAuth2:
          - CLAB_OPERATOR
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/PluginListRes"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
  /plugins/{uuid}:
    get:
      tags:
      - "Plugins"
      summary: "Get a plugin"
      description: "Returns a plugin with the given UUID"
      operationId: "get"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - name: "uuid"
        in: "path"
        description: "The UUID of plugin"
        required: true
        type: "string"
      security:
        - OAuth2:
          - CLAB_OPERATOR
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/PluginRes"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
  /policies/dnds:
    get:
      tags:
      - "Dnd-policies"
      summary: "Get all the dnd policies"
      description: "Returns a list of dnd policies"
      operationId: "getAllDndPolicy"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/TenantHeader'
      - name: "limit"
        in: "query"
        description: "The maximum number of dnd policies, -1 for all"
        required: false
        type: "integer"
        format: "int32"
      - name: "offset"
        in: "query"
        description: "Offset applied to retrieved dnd policy list before returning\
          \ the required number of dnd policies"
        required: false
        type: "integer"
        format: "int32"
      security:
        - OAuth2:
          - CLAB_OPERATOR
          - ADMIN
          - POWERUSER
          - USER
          - GUEST
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/DndPolicyListRes"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
    post:
      tags:
      - "Dnd-policies"
      summary: "Create a dnd policy"
      description: "Create a dnd policy"
      operationId: "postDndPolicy"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/TenantHeader'
      - in: "body"
        name: "dnd"
        description: "The dnd policy resource"
        required: true
        schema:
          $ref: "#/definitions/DndPolicyRes"
      security:
        - OAuth2:
          - CLAB_OPERATOR
          - ADMIN
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/DndPolicyRes"
        201:
          description: "The resource was created successfully"
          schema:
            $ref: "#/definitions/DndPolicyRes"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
        409:
          description: "Resource Conflict"
          schema:
            $ref: "#/definitions/ErrorResource"
  /policies/dnds/{uuid}:
    get:
      tags:
      - "Dnd-policies"
      summary: "Get a dnd policy"
      description: "Returns a dnd policy with the given UUID"
      operationId: "getDndPolicyById"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/TenantHeader'
      - name: "uuid"
        in: "path"
        description: "The UUID of dnd policy"
        required: true
        type: "string"
      security:
        - OAuth2:
          - CLAB_OPERATOR
          - ADMIN
          - POWERUSER
          - USER
          - GUEST
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/DndPolicyRes"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
    put:
      tags:
      - "Dnd-policies"
      summary: "Modify a dnd policy"
      description: "Modify a dnd policy with the given UUID"
      operationId: "putDndPolicy"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/TenantHeader'
      - name: "uuid"
        in: "path"
        description: "The UUID of dnd policy"
        required: true
        type: "string"
      - in: "body"
        name: "dnd"
        description: "The dnd policy resource"
        required: true
        schema:
          $ref: "#/definitions/DndPolicyRes"
      security:
        - OAuth2:
          - CLAB_OPERATOR
          - ADMIN
      responses:
        200:
          description: "The resource was updated successfully"
          schema:
            $ref: "#/definitions/DndPolicyRes"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
        409:
          description: "Resource Conflict"
          schema:
            $ref: "#/definitions/ErrorResource"
    delete:
      tags:
      - "Dnd-policies"
      summary: "Delete a dnd policy"
      description: "Delete a dnd policy with the given UUID"
      operationId: "deleteDndPolicyById"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/TenantHeader'
      - name: "uuid"
        in: "path"
        description: "The UUID of dnd policy"
        required: true
        type: "string"
      security:
        - OAuth2:
          - CLAB_OPERATOR
          - ADMIN
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/DndPolicyRes"
        204:
          description: "The resource was deleted successfully"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
  /reports/plans:
    get:
      tags:
      - "Clab"
      summary: "Get all reports of all plans"
      description: "Returns all reports of all plans with contactlab feedbacks and\
        \ associated automation"
      operationId: "getPlansFeedbacks"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/TenantHeader'
      - name: "days"
        in: "query"
        description: "The number of days in the past. Default value is 30"
        required: false
        type: "integer"
        format: "int32"
      security:
        - OAuth2:
          - CONFIGURATOR
          - CLAB_OPERATOR
          - ADMIN
          - POWERUSER
          - USER
          - GUEST
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/FeedbacksListRes"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
  /reports/plans.csv:
    post:
      tags:
      - "Clab"
      summary: "Download a report list"
      description: "Returns a csv file with a list of report"
      operationId: "downloadPlanFeedbacks"
      produces:
      - "application/json"
      - "text/csv"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/TenantHeader'
      - name: "days"
        in: "query"
        description: "The number of days in the past. Default value is 30"
        required: false
        type: "integer"
        format: "int32"
      - name: "filename"
        in: "query"
        description: "The name of the file. Default value is 'feedbacks'"
        required: true
        type: "string"
      security:
        - OAuth2:
          - CONFIGURATOR
          - CLAB_OPERATOR
          - ADMIN
          - POWERUSER
          - USER
          - GUEST
      responses:
        200:
          description: "Ok"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
  /reports/plans/{planUuid}:
    get:
      tags:
      - "Clab"
      summary: "Get a plan report"
      description: "Returns a report for the specified plan with contactlab feedbacks\
        \ and associated automation"
      operationId: "getPlanFeedbacks"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/TenantHeader'
      - name: "planUuid"
        in: "path"
        description: "The UUID of the plan"
        required: true
        type: "string"
      security:
        - OAuth2:
          - CONFIGURATOR
          - CLAB_OPERATOR
          - ADMIN
          - POWERUSER
          - USER
          - GUEST
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/FeedbackRes"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
  /rules:
    get:
      tags:
      - "Rules"
      summary: "Get all rules"
      description: "Returns a list of rules"
      operationId: "getRules"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/TenantHeader'
      - name: "limit"
        in: "query"
        description: "The maximum number of rules"
        required: false
        type: "integer"
        format: "int32"
      - name: "category"
        in: "query"
        description: "The category of the rules"
        required: false
        type: "string"
      - name: "offset"
        in: "query"
        description: "Offset applied to retrieved rules list before returning the\
          \ required number of rules"
        required: false
        type: "integer"
        format: "int32"
      security:
        - OAuth2:
          - CONFIGURATOR
          - CLAB_OPERATOR
          - ADMIN
          - POWERUSER
          - USER
          - GUEST
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/RulesListRes"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
    post:
      tags:
      - "Rules"
      summary: "Create a rule"
      description: "Create a rule"
      operationId: "createRule"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/TenantHeader'
      - in: "body"
        name: "rule"
        description: "The rule resource"
        required: true
        schema:
          $ref: "#/definitions/RuleRes"
      security:
        - OAuth2:
          - CONFIGURATOR
          - CLAB_OPERATOR
          - ADMIN
          - POWERUSER
          - USER
          - GUEST
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/RuleRes"
        201:
          description: "The resource was created successfully"
          schema:
            $ref: "#/definitions/RuleRes"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
        409:
          description: "Resource conflict"
          schema:
            $ref: "#/definitions/ErrorResource"
  /rules/{uuid}:
    get:
      tags:
      - "Rules"
      summary: "Get a rule"
      description: "Returns the rule with the given UUID"
      operationId: "getRule"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/TenantHeader'
      - name: "uuid"
        in: "path"
        description: "The UUID of rule"
        required: true
        type: "string"
      security:
        - OAuth2:
          - CONFIGURATOR
          - CLAB_OPERATOR
          - ADMIN
          - POWERUSER
          - USER
          - GUEST
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/RuleRes"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
    put:
      tags:
      - "Rules"
      summary: "Modify a rule"
      description: "Modify the rule with the given UUID"
      operationId: "putRule"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/TenantHeader'
      - name: "uuid"
        in: "path"
        description: "The UUID of rule"
        required: true
        type: "string"
      - in: "body"
        name: "rule"
        description: "The rule resource"
        required: true
        schema:
          $ref: "#/definitions/RuleRes"
      security:
        - OAuth2:
          - CONFIGURATOR
          - CLAB_OPERATOR
          - ADMIN
          - POWERUSER
          - USER
          - GUEST
      responses:
        200:
          description: "The resource was updated successfully"
          schema:
            $ref: "#/definitions/RuleRes"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
        409:
          description: "Resource conflict"
          schema:
            $ref: "#/definitions/ErrorResource"
    delete:
      tags:
      - "Rules"
      summary: "Delete rule"
      description: "Delete the rule with the given UUID"
      operationId: "deleteRule"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/TenantHeader'
      - name: "uuid"
        in: "path"
        description: "The UUID of rule"
        required: true
        type: "string"
      security:
        - OAuth2:
          - CONFIGURATOR
          - CLAB_OPERATOR
          - ADMIN
          - POWERUSER
          - USER
          - GUEST
      responses:
        200:
          description: "The resource was deleted successfully"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
        409:
          description: "Resource conflict"
          schema:
            $ref: "#/definitions/ErrorResource"
  /rules/{uuid}/contacts:
    get:
      tags:
      - "Rules"
      summary: "Get rule contacts"
      description: "Return the contacts contained in the rule"
      operationId: "getRuleContacts"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/TenantHeader'
      - name: "uuid"
        in: "path"
        description: "The UUID of rule"
        required: true
        type: "string"
      - name: "resultType"
        in: "query"
        description: "Result can be hits (count is returned), list (contacts id and\
          \ email are returned), partial_list (only defined attributes are returned),\
          \ full_list (all attributes are returned)"
        required: false
        type: "string"
      - name: "limit"
        in: "query"
        description: "The maximum number of contacts"
        required: false
        type: "integer"
        format: "int32"
      - name: "offset"
        in: "query"
        description: "Offset applied to retrieved contacts list before returning the\
          \ required number of contacts"
        required: false
        type: "integer"
        format: "int32"
      - name: "attributes"
        in: "query"
        description: "List of contact attributes"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "dnd"
        in: "query"
        description: "UUID of DND policy to be applied"
        required: false
        type: "string"
      - name: "planificationDate"
        in: "query"
        description: "Target date in which contacts will be used for a marketing action.\
          \ Required for DND policy evaluation"
        required: false
        type: "string"
      security:
        - OAuth2:
          - CONFIGURATOR
          - CLAB_OPERATOR
          - ADMIN
          - POWERUSER
          - USER
          - GUEST
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/DataSetRes"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
  /rules/{uuid}/contacts.csv:
    get:
      tags:
      - "Rules"
      summary: "Download a contact list"
      description: "Returns a csv file with paged list of contacts that match with\
        \ the given rule query and (optionally) satisfy the given DND policy for the\
        \ given planification date"
      operationId: "downloadRuleContacts"
      produces:
      - "application/json"
      - "text/csv"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/TenantHeader'
      - name: "uuid"
        in: "path"
        description: "The UUID of rule"
        required: true
        type: "string"
      - name: "resultType"
        in: "query"
        description: "Result can be hits (count is returned), list (contacts id and\
          \ email are returned), partial_list (only defined attributes are returned),\
          \ full_list (all attributes are returned)"
        required: false
        type: "string"
      - name: "limit"
        in: "query"
        description: "The maximum number of contacts"
        required: false
        type: "integer"
        format: "int32"
      - name: "offset"
        in: "query"
        description: "Offset applied to retrieved contacts list before returning the\
          \ required number of contacts"
        required: false
        type: "integer"
        format: "int32"
      - name: "attributes"
        in: "query"
        description: "List of contact attributes"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "dnd"
        in: "query"
        description: "UUID of DND policy to be applied"
        required: false
        type: "string"
      - name: "planificationDate"
        in: "query"
        description: "Target date in which contacts will be used for a marketing action.\
          \ Required for DND policy evaluation"
        required: false
        type: "string"
      security:
        - OAuth2:
          - CONFIGURATOR
          - CLAB_OPERATOR
          - ADMIN
          - POWERUSER
          - USER
          - GUEST
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/RuleRes"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
  /segments:
    get:
      tags:
      - "Segments"
      summary: "Get all segments"
      description: "Returns a list of segments"
      operationId: "getSegments"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/TenantHeader'
      - name: "page"
        in: "query"
        description: "The page number of segments list"
        required: false
        type: "string"
      - name: "limit"
        in: "query"
        description: "The maximum number of segments"
        required: false
        type: "integer"
        format: "int32"
      - name: "offset"
        in: "query"
        description: "Offset applied to retrieved segments list before returning the\
          \ required number of segments"
        required: false
        type: "integer"
        format: "int32"
      security:
        - OAuth2:
          - CONFIGURATOR
          - CLAB_OPERATOR
          - ADMIN
          - POWERUSER
          - USER
          - GUEST
      responses:
        200:
          description: "Ok"
          schema:
            type: "object"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
    post:
      tags:
      - "Segments"
      summary: "Create segment"
      description: "Create a segment"
      operationId: "createSegment"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/TenantHeader'
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/SegmentRes"
      security:
        - OAuth2:
          - CLAB_OPERATOR
          - ADMIN
          - POWERUSER
          - USER
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/SegmentRes"
        201:
          description: "The resource was created successfully"
          schema:
            $ref: "#/definitions/SegmentRes"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
        409:
          description: "Resource Conflict"
          schema:
            $ref: "#/definitions/ErrorResource"
  /segments/combined:
    post:
      tags:
      - "Segments"
      summary: "Create a combined segment"
      description: "Create a combined segment"
      operationId: "createCombinedSegment"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/TenantHeader'
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/CombinedSegmentResExtended"
      security:
        - OAuth2:
          - CLAB_OPERATOR
          - ADMIN
          - POWERUSER
          - USER
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/SegmentRes"
        201:
          description: "The resource was created successfully"
          schema:
            $ref: "#/definitions/SegmentRes"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
        409:
          description: "Resource Conflict"
          schema:
            $ref: "#/definitions/ErrorResource"
      deprecated: true
  /segments/combined/contacts:
    post:
      tags:
      - "Segments"
      summary: "Get combined segment contacts"
      description: "Return the contacts contained in the combined segment"
      operationId: "getCombinedSegmentContacts"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/TenantHeader'
      - name: "resultType"
        in: "query"
        description: "Result can be hits (count is returned), list (contacts id and\
          \ email are returned), partial_list (only defined attributes are returned),\
          \ full_list (all attributes are returned)"
        required: false
        type: "string"
      - name: "limit"
        in: "query"
        description: "The maximum number of segments"
        required: false
        type: "integer"
        format: "int32"
      - name: "offset"
        in: "query"
        description: "Offset applied to retrieved segments list before returning the\
          \ required number of segments"
        required: false
        type: "integer"
        format: "int32"
      - name: "attributes"
        in: "query"
        description: "List of contact attributes"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "dnd"
        in: "query"
        description: "UUID of DND policy to be applied"
        required: false
        type: "string"
      - name: "planificationDate"
        in: "query"
        description: "Target date in which contacts will be used for a marketing action.\
          \ Required for DND policy evaluation"
        required: false
        type: "string"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/CombinedSegmentRes"
      security:
        - OAuth2:
          - CLAB_OPERATOR
          - ADMIN
          - POWERUSER
          - USER
          - GUEST
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/DataSetRes"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
  /segments/{uuid}:
    get:
      tags:
      - "Segments"
      summary: "Get a segment"
      description: "Returns the segment with the given UUID"
      operationId: "getSegment"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/TenantHeader'
      - name: "uuid"
        in: "path"
        description: "The UUID of the segment"
        required: true
        type: "string"
      security:
        - OAuth2:
          - CLAB_OPERATOR
          - ADMIN
          - POWERUSER
          - USER
          - GUEST
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/SegmentRes"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
    put:
      tags:
      - "Segments"
      summary: "Modify segment"
      description: "Modify a segment with the given UUID"
      operationId: "putSegment"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/TenantHeader'
      - name: "uuid"
        in: "path"
        description: "The UUID of the segment"
        required: true
        type: "string"
      - in: "body"
        name: "segment"
        description: "The segment resource"
        required: true
        schema:
          $ref: "#/definitions/SegmentRes"
      security:
        - OAuth2:
          - CLAB_OPERATOR
          - ADMIN
          - POWERUSER
          - USER
      responses:
        200:
          description: "The resource was updated successfully"
          schema:
            $ref: "#/definitions/SegmentRes"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
        409:
          description: "Resource Conflict"
          schema:
            $ref: "#/definitions/ErrorResource"
    delete:
      tags:
      - "Segments"
      summary: "Delete segment"
      description: "Delete a segment with the given UUID"
      operationId: "deleteSegment"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/TenantHeader'
      - name: "uuid"
        in: "path"
        description: "The UUID of the segment"
        required: true
        type: "string"
      security:
        - OAuth2:
          - CLAB_OPERATOR
          - ADMIN
          - POWERUSER
          - USER
      responses:
        200:
          description: "The resource was deleted successfully"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
        409:
          description: "Resource Conflict"
          schema:
            $ref: "#/definitions/ErrorResource"
  /segments/{uuid}/contacts:
    get:
      tags:
      - "Segments"
      summary: "Get segment contacts"
      description: "Return the contacts contained in the segment"
      operationId: "getSegmentContacts"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/TenantHeader'
      - name: "uuid"
        in: "path"
        description: "Name of the requested segment"
        required: true
        type: "string"
      - name: "resultType"
        in: "query"
        description: "Result can be hits (count is returned), list (contacts id and\
          \ email are returned), partial_list (only defined attributes are returned),\
          \ full_list (all attributes are returned)"
        required: false
        type: "string"
      - name: "limit"
        in: "query"
        description: "The maximum number of segments"
        required: false
        type: "integer"
        format: "int32"
      - name: "offset"
        in: "query"
        description: "Offset applied to retrieved segments list before returning the\
          \ required number of segments"
        required: false
        type: "integer"
        format: "int32"
      - name: "attributes"
        in: "query"
        description: "List of contact attributes"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "dnd"
        in: "query"
        description: "UUID of DND policy to be applied"
        required: false
        type: "string"
      - name: "dndRule"
        in: "query"
        description: "Json expression representing the DND policy to be applied"
        required: false
        type: "string"
      - name: "planificationDate"
        in: "query"
        description: "Target date in which contacts will be used for a marketing action.\
          \ Required for DND policy evaluation"
        required: false
        type: "string"
      security:
        - OAuth2:
          - CLAB_OPERATOR
          - ADMIN
          - POWERUSER
          - USER
          - GUEST
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/DataSetRes"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
  /segments/{uuid}/contacts.csv:
    post:
      tags:
      - "Segments"
      summary: "Download a contact list"
      description: "Returns a csv file with paged list of contacts that match with\
        \ the given segment query and (optionally) satisfy the given DND policy for\
        \ the given planification date"
      operationId: "downloadSegmentContacts"
      consumes:
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/csv"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/TenantHeader'
      - name: "uuid"
        in: "path"
        description: "Name of the requested segment"
        required: true
        type: "string"
      - name: "resultType"
        in: "query"
        description: "Result can be hits (count is returned), list (contacts id and\
          \ email are returned), partial_list (only defined attributes are returned),\
          \ full_list (all attributes are returned)"
        required: false
        type: "string"
      - name: "limit"
        in: "query"
        description: "The maximum number of segments"
        required: false
        type: "integer"
        format: "int32"
      - name: "offset"
        in: "query"
        description: "Offset applied to retrieved segments list before returning the\
          \ required number of segments"
        required: false
        type: "integer"
        format: "int32"
      - name: "attributes"
        in: "query"
        description: "List of contact attributes"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "dnd"
        in: "query"
        description: "UUID of DND policy to be applied"
        required: false
        type: "string"
      - name: "planificationDate"
        in: "query"
        description: "Target date in which contacts will be used for a marketing action.\
          \ Required for DND policy evaluation"
        required: false
        type: "string"
      security:
        - OAuth2:
          - CONFIGURATOR
          - CLAB_OPERATOR
          - ADMIN
          - POWERUSER
          - USER
          - GUEST
      responses:
        200:
          description: "Ok"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
  /statements:
    get:
      tags:
      - "Statements"
      summary: "Get all statement"
      description: "Returns a list of statements"
      operationId: "getAllStatements"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/TenantHeader'
      - name: "limit"
        in: "query"
        description: "The maximum number of statements. Default value is -1"
        required: false
        type: "integer"
        format: "int32"
      - name: "offset"
        in: "query"
        description: "Offset applied to retrieved statement list before returning\
          \ the required number of statements"
        required: false
        type: "integer"
        format: "int32"
      security:
        - OAuth2:
          - CONFIGURATOR
          - CLAB_OPERATOR
          - ADMIN
          - POWERUSER
          - USER
          - GUEST
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/StatementListRes"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
    post:
      tags:
      - "Statements"
      summary: "Creates a statement "
      description: "Returns a statement"
      operationId: "postStatement"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/TenantHeader'
      - in: "body"
        name: "statement"
        description: "The statement resource"
        required: true
        schema:
          $ref: "#/definitions/StatementRes"
      security:
        - OAuth2:
          - CLAB_OPERATOR
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/StatementRes"
        201:
          description: "The resource was created successfully"
          schema:
            $ref: "#/definitions/StatementRes"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
        409:
          description: "Resource Conflict"
          schema:
            $ref: "#/definitions/ErrorResource"
  /statements/{uuid}:
    get:
      tags:
      - "Statements"
      summary: "Get a statement"
      description: "Returns a statement with the given UUID"
      operationId: "getStatementPolicyById"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/TenantHeader'
      - name: "uuid"
        in: "path"
        description: "The UUID of the statement"
        required: true
        type: "string"
      security:
        - OAuth2:
          - CLAB_OPERATOR
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/StatementListRes"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
    put:
      tags:
      - "Statements"
      summary: "Modify a statement "
      description: "Modify a statement with the given UUID"
      operationId: "modifyStatement"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/TenantHeader'
      - name: "uuid"
        in: "path"
        description: "The UUID of the statement"
        required: true
        type: "string"
      - in: "body"
        name: "statement"
        description: "The statement resource"
        required: true
        schema:
          $ref: "#/definitions/StatementRes"
      security:
        - OAuth2:
          - CLAB_OPERATOR
      responses:
        200:
          description: "The resource was updated successfully"
          schema:
            $ref: "#/definitions/StatementRes"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
        409:
          description: "Resource Conflict"
          schema:
            $ref: "#/definitions/ErrorResource"
    delete:
      tags:
      - "Statements"
      summary: "Delete a statement"
      description: "Delete a statement with the given UUID"
      operationId: "deletestatementById"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/TenantHeader'
      - name: "uuid"
        in: "path"
        description: "The UUID of the statement"
        required: true
        type: "string"
      security:
        - OAuth2:
          - CLAB_OPERATOR
      responses:
        204:
          description: "The resource was deleted successfully"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
  /tenantconfig:
    get:
      tags:
      - "Tenants"
      summary: "Get a tenant configuration"
      description: "Returns a tenant configuration"
      operationId: "getTenantContactModel"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/TenantHeader'
      security:
        - OAuth2:
          - CONFIGURATOR
          - CLAB_OPERATOR
          - ADMIN
          - POWERUSER
          - USER
          - GUEST
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/TenantContactModelRes"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
  /tenants:
    get:
      tags:
      - "Tenants"
      summary: "Get all tenants"
      description: "Returns all tenants"
      operationId: "getTenantsByGroupPk"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - name: "groupPk"
        in: "query"
        description: "Group pk of tenant"
        required: false
        type: "integer"
        format: "int64"
      - name: "type"
        in: "query"
        description: "The type of response (extended, collapsed). Default value is\
          \ extended"
        required: false
        type: "string"
      security:
        - OAuth2:
          - CONFIGURATOR
          - CLAB_OPERATOR
          - ADMIN
          - POWERUSER
          - USER
          - GUEST
      responses:
        200:
          description: "Ok"
          schema:
            type: "object"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
    post:
      tags:
      - "Tenants"
      summary: "Create tenant"
      description: "Create the tenant with the given configuration"
      operationId: "createTenant"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/TenantHeader'
      - in: "body"
        name: "configuration"
        description: "The configuration resource"
        required: true
        schema:
          $ref: "#/definitions/PlanCustomConfig"
      security:
        - OAuth2:
          - CONFIGURATOR
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PlanCustomConfig"
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/PlanCustomConfig"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
        409:
          description: "Resource Conflict"
          schema:
            $ref: "#/definitions/ErrorResource"
    put:
      tags:
      - "Tenants"
      summary: "Modify tenant"
      description: "Modify the tenant with the given group pk and user db id"
      operationId: "modifyTenant"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/TenantHeader'
      - name: "groupPk"
        in: "query"
        description: "Group pk of tenant"
        required: true
        type: "string"
      - name: "userDbId"
        in: "query"
        description: "Users database ID of tenant"
        required: true
        type: "string"
      - in: "body"
        name: "configuration"
        description: "The configuration resource"
        required: true
        schema:
          $ref: "#/definitions/PlanCustomConfig"
      security:
        - OAuth2:
          - CONFIGURATOR
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PlanCustomConfig"
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/PlanCustomConfig"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
        409:
          description: "Resource Conflict"
          schema:
            $ref: "#/definitions/ErrorResource"
    delete:
      tags:
      - "Tenants"
      summary: "Delete tenant"
      description: "Delete the tenant with the given group pk and user db id"
      operationId: "deleteTenant"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/TenantHeader'
      - name: "groupPk"
        in: "query"
        description: "Group pk of tenant"
        required: true
        type: "string"
      - name: "userDbId"
        in: "query"
        description: "Users database ID of tenant"
        required: true
        type: "string"
      - name: "force"
        in: "query"
        description: "Forced delete tenant. Default value is false"
        required: true
        type: "boolean"
      security:
        - OAuth2:
          - CONFIGURATOR
          - CLAB_OPERATOR
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/PlanCustomConfig"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
        409:
          description: "Resource Conflict"
          schema:
            $ref: "#/definitions/ErrorResource"
  /tenants/{id}/settings:
    patch:
      tags:
      - "Tenants"
      summary: "Modify tenant settings"
      description: "Modify the settings of tenant with the given tenant ID"
      operationId: "modifyTenantSettings"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - name: "id"
        in: "path"
        description: "The ID of the tenant"
        required: true
        type: "string"
      - in: "body"
        name: "settings"
        description: "The settings tenant resource"
        required: false
        schema:
          $ref: "#/definitions/TenantSettingsRes"
      security:
        - OAuth2:
          - CONFIGURATOR
          - CLAB_OPERATOR
          - ADMIN
          - POWERUSER
          - USER
          - GUEST
      responses:
        200:
          description: "Accepted"
          schema:
            $ref: "#/definitions/TenantSettingsRes"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
        409:
          description: "Resource Conflict"
          schema:
            $ref: "#/definitions/ErrorResource"
  /traces/monitorlogs:
    get:
      tags:
      - "Traces"
      summary: "Get all traces from monitor"
      description: "Returns a list of all the traces from monitor"
      operationId: "getLogs"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - name: "limit"
        in: "query"
        description: "The maximum number of traces. Default value is 10"
        required: false
        type: "integer"
        format: "int32"
      - name: "offset"
        in: "query"
        description: "Offset applied to retrieved trace list before returning the\
          \ required number of traces"
        required: false
        type: "integer"
        format: "int32"
      - name: "startDate"
        in: "query"
        description: "The begin of date interval"
        required: false
        type: "string"
      - name: "endDate"
        in: "query"
        description: "The end of date interval"
        required: false
        type: "string"
      - name: "tenant"
        in: "query"
        description: "The ID of the tenant"
        required: false
        type: "string"
      - name: "agent"
        in: "query"
        description: "The agent info of traces"
        required: false
        type: "string"
      - name: "pclass"
        in: "query"
        description: "The process class of traces"
        required: false
        type: "string"
      - name: "pname"
        in: "query"
        description: "The process name of traces"
        required: false
        type: "string"
      - name: "pstatus"
        in: "query"
        description: "The process status of traces"
        required: false
        type: "string"
      security:
        - OAuth2:
          - CLAB_OPERATOR
          - ADMIN
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/MonitorListRes"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
  /traces/monitorlogs/{uuid}:
    get:
      tags:
      - "Traces"
      summary: "Get a trace from monitor"
      description: "Returns a trace with the given UUID"
      operationId: "getLog"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - name: "uuid"
        in: "path"
        description: "The UUID of the trace"
        required: true
        type: "string"
      security:
        - OAuth2:
          - CLAB_OPERATOR
          - ADMIN
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/MonitorRes"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
  /utilities/calculateDates:
    get:
      tags:
      - "Utilities"
      summary: "Get all scheduled recurrence"
      description: "Returns a list scheduled recurrence"
      operationId: "getSchedulation"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/TenantHeader'
      - name: "recurrence"
        in: "query"
        description: "The recurrence resource"
        required: true
        type: "string"
      security:
        - OAuth2:
          - CONFIGURATOR
          - CLAB_OPERATOR
          - ADMIN
          - POWERUSER
          - USER
          - GUEST
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/ScheduleListRes"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
  /utilities/heuristicRules:
    get:
      tags:
      - "Utilities"
      summary: "Get all heuristic rules"
      description: "Returns a list of heuristic rules"
      operationId: "getHeuristicRules"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/TenantHeader'
      - name: "type"
        in: "query"
        description: "Type of heuristic rule"
        required: false
        type: "string"
      security:
        - OAuth2:
          - CONFIGURATOR
          - CLAB_OPERATOR
          - ADMIN
          - POWERUSER
          - USER
          - GUEST
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/HeuristicRuleListRes"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
  /widgets:
    get:
      tags:
      - "Widgets"
      summary: "Get all widgets"
      description: "Returns a list of widgets"
      operationId: "getAllWidget"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/TenantHeader'
      - name: "limit"
        in: "query"
        description: "The maximum number of widgets"
        required: false
        type: "integer"
        format: "int32"
      - name: "offset"
        in: "query"
        description: "Offset applied to retrieved widget list before returning the\
          \ required number of widgets"
        required: false
        type: "integer"
        format: "int32"
      security:
        - OAuth2:
          - CONFIGURATOR
          - CLAB_OPERATOR
          - ADMIN
          - POWERUSER
          - USER
          - GUEST
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/WidgetListRes"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
    post:
      tags:
      - "Widgets"
      summary: "Creates a widget"
      description: "Returns a widget"
      operationId: "createWidget"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/TenantHeader'
      - in: "body"
        name: "widget"
        description: "The widget resource"
        required: true
        schema:
          $ref: "#/definitions/WidgetRes"
      security:
        - OAuth2:
          - CLAB_OPERATOR
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/WidgetRes"
        201:
          description: "Ok"
          schema:
            $ref: "#/definitions/WidgetRes"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
        409:
          description: "Resource Conflict"
          schema:
            $ref: "#/definitions/ErrorResource"
  /widgets/{uuid}:
    get:
      tags:
      - "Widgets"
      summary: "Get a widget"
      description: "Returns a widget"
      operationId: "getWidgetById"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/TenantHeader'
      - name: "uuid"
        in: "path"
        description: "The UUID of widget"
        required: true
        type: "string"
      security:
        - OAuth2:
          - CONFIGURATOR
          - CLAB_OPERATOR
          - ADMIN
          - POWERUSER
          - USER
          - GUEST
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/WidgetRes"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
    put:
      tags:
      - "Widgets"
      summary: "Modify a widget"
      description: "Returns a widget with the given UUID"
      operationId: "modifyWidget"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/TenantHeader'
      - name: "uuid"
        in: "path"
        description: "The UUID of widget"
        required: true
        type: "string"
      - in: "body"
        name: "widget"
        description: "The widget resource"
        required: true
        schema:
          $ref: "#/definitions/WidgetRes"
      security:
        - OAuth2:
          - CLAB_OPERATOR
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/WidgetRes"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"
        409:
          description: "Resource Conflict"
          schema:
            $ref: "#/definitions/ErrorResource"
    delete:
      tags:
      - "Widgets"
      summary: "Delete a widget"
      description: "Delete a widget with the given UUID"
      operationId: "deleteWidgetById"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/TenantHeader'
      - name: "uuid"
        in: "path"
        description: "The UUID of widget"
        required: true
        type: "string"
      security:
        - OAuth2:
          - CLAB_OPERATOR
      responses:
        204:
          description: "Ok"
        401:
          description: "Unauthorized (Missing or invalid authorization token)"
          schema:
            $ref: "#/definitions/ErrorResource"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResource"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorResource"

parameters:
  AuthorizationHeader:
    name: "Authorization"
    in: "header"
    description: "A valid OAuth2 token"
    required: true
    type: "string"
  TenantHeader:
    name: "Tenant"
    in: "header"
    description: "The ID of the tenant to operate on"
    required: true
    type: "integer"

definitions:
  AnalyticRes:
    type: "object"
    properties:
      analyticCutOff:
        type: "number"
        format: "double"
      operator:
        type: "string"
  AutomationRes:
    type: "object"
    properties:
      uuid:
        type: "string"
      name:
        type: "string"
      description:
        type: "string"
      startDate:
        type: "string"
      endDate:
        type: "string"
      created:
        type: "string"
      author:
        type: "string"
  BaseConfig:
    type: "object"
    properties:
      name:
        type: "string"
      version:
        type: "integer"
        format: "int32"
  BitmaskFieldRes:
    type: "object"
    properties:
      uuid:
        type: "string"
      attributeName:
        type: "string"
      bitPosition:
        type: "string"
      label:
        type: "string"
      author:
        type: "string"
      name:
        type: "string"
  BitmaskRes:
    type: "object"
    properties:
      attributeName:
        type: "string"
      attribute:
        $ref: "#/definitions/ModelAttributeRes"
      bitmaskField:
        type: "array"
        items:
          $ref: "#/definitions/BitmaskFieldRes"
  CampaignFeedbackRes:
    type: "object"
    properties:
      filterId:
        type: "integer"
        format: "int32"
      filterName:
        type: "string"
      deliveryId:
        type: "integer"
        format: "int32"
      deliveryName:
        type: "string"
      deliveryStatus:
        type: "string"
      subject:
        type: "string"
      removeDuplicates:
        type: "boolean"
        default: false
      sent:
        type: "integer"
        format: "int32"
      delivered:
        type: "integer"
        format: "int32"
      bounce:
        type: "integer"
        format: "int32"
      uniqueViews:
        type: "integer"
        format: "int32"
      totalViews:
        type: "integer"
        format: "int32"
      uniqueClicks:
        type: "integer"
        format: "int32"
      totalClicks:
        type: "integer"
        format: "int32"
  ClabFeedbackRes:
    type: "object"
    properties:
      deliveryId:
        type: "integer"
        format: "int32"
      filterId:
        type: "integer"
        format: "int32"
      filterName:
        type: "string"
      deliveryName:
        type: "string"
      deliveryStatus:
        type: "string"
      subject:
        type: "string"
      removeDuplicates:
        type: "boolean"
        default: false
      newsletter:
        type: "string"
      bounces:
        type: "integer"
        format: "int32"
      users:
        type: "integer"
        format: "int32"
      planificationDate:
        type: "string"
      test:
        type: "integer"
        format: "int32"
      medium:
        type: "integer"
        format: "int32"
      qualifierId:
        type: "integer"
        format: "int32"
      userDbId:
        type: "integer"
        format: "int32"
      category:
        type: "integer"
        format: "int32"
      numDomains:
        type: "integer"
        format: "int32"
      delivered:
        type: "integer"
        format: "int32"
      cancelled:
        type: "integer"
        format: "int32"
      fblComplains:
        type: "integer"
        format: "int32"
      abuse:
        type: "integer"
        format: "int32"
      listUnsuscribe:
        type: "integer"
        format: "int32"
      blacklisted:
        type: "integer"
        format: "int32"
      temporaryBlacklisted:
        type: "integer"
        format: "int32"
      errors:
        type: "integer"
        format: "int32"
      uniqueViews:
        type: "integer"
        format: "int32"
      views:
        type: "integer"
        format: "int32"
      hiddenViews:
        type: "integer"
        format: "int32"
      view_wm:
        type: "integer"
        format: "int32"
      view_ovu:
        type: "integer"
        format: "int32"
      view_mobile:
        type: "integer"
        format: "int32"
      uniqueClicks:
        type: "integer"
        format: "int32"
      clicks:
        type: "integer"
        format: "int32"
      uniqueTafClicks:
        type: "integer"
        format: "int32"
      tafClicks:
        type: "integer"
        format: "int32"
      unsubscribed:
        type: "integer"
        format: "int32"
      updates:
        type: "integer"
        format: "int32"
      blacklisting_temp:
        type: "integer"
        format: "int32"
      blacklisting_final:
        type: "integer"
        format: "int32"
      labels:
        type: "array"
        items:
          type: "string"
  ClabFeedbacksListRes:
    type: "object"
    properties:
      feedbacks:
        type: "array"
        items:
          $ref: "#/definitions/ClabFeedbackRes"
  CollectionPageResource:
    type: "object"
    properties:
      page:
        $ref: "#/definitions/Page"
      elements:
        type: "array"
        items:
          type: "object"
  CollectionPageResourceAutomationRes:
    type: "object"
    properties:
      page:
        $ref: "#/definitions/Page"
      elements:
        type: "array"
        items:
          $ref: "#/definitions/AutomationRes"
  CollectionPageResourcePlanRes:
    type: "object"
    properties:
      page:
        $ref: "#/definitions/Page"
      elements:
        type: "array"
        items:
          $ref: "#/definitions/PlanRes"
  CombinedSegmentRes:
    type: "object"
    properties:
      operators:
        type: "array"
        items:
          type: "string"
      segments:
        type: "array"
        items:
          $ref: "#/definitions/SegmentBaseInfoRes"
  CombinedSegmentResExtended:
    type: "object"
    properties:
      operators:
        type: "array"
        items:
          type: "string"
      segments:
        type: "array"
        items:
          $ref: "#/definitions/SegmentBaseInfoRes"
      name:
        type: "string"
  CompareValueConditionRes:
    allOf:
    - $ref: "#/definitions/ConditionResFilterClause"
    - type: "object"
      required:
      - "attribute"
      - "lastValueCondition"
      - "previousValueCondition"
      properties:
        attribute:
          type: "string"
        lastValueCondition:
          $ref: "#/definitions/TimeseriesSubConditionRes"
        previousValueCondition:
          $ref: "#/definitions/TimeseriesSubConditionRes"
  ConditionAtomicRes:
    allOf:
    - $ref: "#/definitions/ConditionResFilterClause"
    - type: "object"
      required:
      - "attribute"
      - "operator"
      properties:
        attribute:
          type: "string"
        aggregator:
          type: "string"
        operator:
          type: "string"
        occurency:
          type: "boolean"
          default: false
        value:
          type: "object"
        values:
          type: "array"
          items:
            type: "object"
  ConditionCompositeRes:
    allOf:
    - $ref: "#/definitions/ConditionResFilterClause"
    - type: "object"
      properties:
        conjunction:
          type: "string"
        conditions:
          type: "array"
          items:
            $ref: "#/definitions/ConditionResObject"
  ConditionResFilterClause:
    type: "object"
    discriminator: "type"
    properties:
      name:
        type: "string"
      hidden:
        type: "boolean"
        default: false
      readOnly:
        type: "boolean"
        default: false
      type:
        type: "string"
  ConditionResObject:
    type: "object"
    discriminator: "type"
    properties:
      name:
        type: "string"
      hidden:
        type: "boolean"
        default: false
      readOnly:
        type: "boolean"
        default: false
      type:
        type: "string"
  ConfigLink:
    type: "object"
    properties:
      self:
        $ref: "#/definitions/Self"
  ConstantValueInPeriodConditionRes:
    allOf:
    - $ref: "#/definitions/ConditionResFilterClause"
    - type: "object"
      required:
      - "attribute"
      - "lastValueCondition"
      - "timeframe"
      properties:
        attribute:
          type: "string"
        negative:
          type: "boolean"
          default: false
        lastValueCondition:
          $ref: "#/definitions/TimeseriesSubConditionRes"
        timeframe:
          $ref: "#/definitions/TimeframeConditionRes"
  ConstraintsRes:
    type: "object"
    properties:
      maxContacts:
        type: "integer"
        format: "int32"
      minContacts:
        type: "integer"
        format: "int32"
      ifNot:
        $ref: "#/definitions/IfNotRes"
  ConsumerListRes:
    type: "object"
    properties:
      consumers:
        type: "array"
        items:
          $ref: "#/definitions/ConsumerRes"
  ConsumerRes:
    type: "object"
    properties:
      uuid:
        type: "string"
      label:
        type: "string"
      plugin:
        type: "string"
      pluginIdentifier:
        type: "string"
      tenant:
        type: "string"
      properties:
        type: "object"
        additionalProperties:
          type: "string"
  ContactListMetaListRes:
    type: "object"
    properties:
      contactLists:
        type: "array"
        items:
          $ref: "#/definitions/ContactListMetaRes"
  ContactListMetaRes:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      segmentId:
        type: "string"
      creationDate:
        type: "string"
        format: "date-time"
      count:
        type: "integer"
        format: "int64"
      pianificationDate:
        type: "string"
        format: "date-time"
      uuid:
        type: "string"
      materializationAttempts:
        type: "integer"
        format: "int32"
  CorrelationAtomicRes:
    allOf:
    - $ref: "#/definitions/CorrelationResFilterClause"
    - type: "object"
      required:
      - "operator"
      properties:
        datediff:
          type: "array"
          items:
            type: "string"
        queryPointer:
          type: "integer"
          format: "int32"
        unit:
          type: "string"
        operator:
          type: "string"
        offset:
          type: "integer"
          format: "int32"
  CorrelationCompositeRes:
    allOf:
    - $ref: "#/definitions/CorrelationResFilterClause"
    - type: "object"
      properties:
        conjunction:
          type: "string"
        correlations:
          type: "array"
          items:
            $ref: "#/definitions/CorrelationResObject"
  CorrelationResFilterClause:
    type: "object"
    discriminator: "type"
    properties:
      hidden:
        type: "boolean"
        default: false
      readOnly:
        type: "boolean"
        default: false
  CorrelationResObject:
    type: "object"
    discriminator: "type"
    properties:
      hidden:
        type: "boolean"
        default: false
      readOnly:
        type: "boolean"
        default: false
  DashboardListRes:
    type: "object"
    properties:
      dashboards:
        type: "array"
        items:
          $ref: "#/definitions/DashboardRes"
  DashboardRes:
    type: "object"
    properties:
      uuid:
        type: "string"
      name:
        type: "string"
      label:
        type: "string"
      description:
        type: "string"
      industry:
        type: "string"
        enum:
        - "ECOMMERCE"
        - "FASHION"
        - "MOBILITY"
        - "CONSUMER_GOOD"
        - "FINANCE"
        - "MEDIA_COMM_SPORT"
        - "NO_PROFIT"
        - "TRAVEL"
        - "THIRD_PTY"
        - "OTHER"
        - "PUBLIC_SECTOR"
        - "ALL"
      enabled:
        type: "boolean"
        default: false
      range:
        type: "string"
        enum:
        - "GLOBAL"
        - "SEGMENT"
      widgets:
        type: "array"
        items:
          $ref: "#/definitions/WidgetRes"
  DataLoaderFlowListRes:
    type: "object"
    properties:
      currentPageNumber:
        type: "integer"
        format: "int32"
      maxPageNumber:
        type: "integer"
        format: "int32"
      dataLoaderFlows:
        type: "array"
        items:
          $ref: "#/definitions/DataLoaderFlowRes"
  DataLoaderFlowRes:
    type: "object"
    properties:
      uuid:
        type: "string"
      startDate:
        type: "string"
        format: "date-time"
      endDate:
        type: "string"
        format: "date-time"
      status:
        type: "string"
      dataLoaderJobs:
        type: "array"
        items:
          $ref: "#/definitions/DataLoaderJobRes"
  DataLoaderJobRes:
    type: "object"
    properties:
      processName:
        type: "string"
      startDate:
        type: "string"
        format: "date-time"
      endDate:
        type: "string"
        format: "date-time"
      status:
        type: "string"
  DataSetCompressedRes:
    type: "object"
    properties:
      name:
        type: "string"
      label:
        type: "string"
      format:
        type: "string"
      parameters:
        type: "object"
        additionalProperties:
          type: "object"
      headers:
        type: "array"
        items:
          type: "string"
      data:
        type: "array"
        items:
          type: "array"
          items:
            type: "object"
  DataSetExtendedRes:
    type: "object"
    properties:
      name:
        type: "string"
      label:
        type: "string"
      format:
        type: "string"
      parameters:
        type: "object"
        additionalProperties:
          type: "object"
      headers:
        type: "object"
        additionalProperties:
          type: "object"
          additionalProperties:
            type: "string"
      data:
        type: "array"
        items:
          type: "object"
          additionalProperties:
            type: "object"
  DataSetRes:
    type: "object"
    properties:
      attributes:
        type: "array"
        items:
          $ref: "#/definitions/ModelAttributeRes"
      results:
        type: "array"
        items:
          type: "array"
          items:
            type: "object"
      hits:
        type: "integer"
        format: "int64"
      pagination:
        $ref: "#/definitions/Pagination"
  DndPolicyListRes:
    type: "object"
    properties:
      dndPolicies:
        type: "array"
        items:
          $ref: "#/definitions/DndPolicyRes"
  DndPolicyRes:
    type: "object"
    properties:
      uuid:
        type: "string"
      name:
        type: "string"
      rule:
        $ref: "#/definitions/Rule"
      applyByDefault:
        type: "boolean"
        default: false
      createdAt:
        type: "string"
        format: "date-time"
      updatedAt:
        type: "string"
        format: "date-time"
      isGlobal:
        type: "boolean"
        default: false
  ErrorResource:
    type: "object"
    properties:
      timestamp:
        type: "integer"
        format: "int64"
      status:
        type: "integer"
        format: "int32"
      error:
        type: "string"
      message:
        type: "string"
      path:
        type: "string"
  EventIdentifierRes:
    type: "object"
    properties:
      category:
        type: "string"
      type:
        type: "string"
      name:
        type: "string"
  ExternalInfoRes:
    type: "object"
    properties:
      type:
        type: "string"
        enum:
        - "CONTACT_SEND"
  FeedbackRes:
    type: "object"
    properties:
      planUuid:
        type: "string"
      planName:
        type: "string"
      planificationDate:
        type: "string"
      segmentName:
        type: "string"
      plannedUsers:
        type: "integer"
        format: "int64"
      planStatus:
        type: "string"
      user:
        type: "string"
      creationDate:
        type: "string"
      consumer:
        type: "string"
      campaignFeedbacks:
        type: "array"
        items:
          $ref: "#/definitions/CampaignFeedbackRes"
      automationFeedbacks:
        $ref: "#/definitions/AutomationRes"
  FeedbacksListRes:
    type: "object"
    properties:
      feedbacks:
        type: "array"
        items:
          $ref: "#/definitions/FeedbackRes"
  FilterRes:
    type: "object"
    properties:
      content:
        type: "string"
      extensions:
        type: "string"
      identifier:
        type: "integer"
        format: "int32"
      name:
        type: "string"
      userDbId:
        type: "integer"
        format: "int32"
      type:
        type: "string"
  HeuristicRuleListRes:
    type: "object"
    properties:
      rules:
        type: "array"
        items:
          $ref: "#/definitions/HeuristicRuleRes"
  HeuristicRuleRes:
    type: "object"
    properties:
      type:
        type: "string"
      maxCardinality:
        type: "integer"
        format: "int32"
      minCardinality:
        type: "integer"
        format: "int32"
      inputFieldType:
        type: "string"
  IfNotPropertiesRes:
    type: "object"
    properties:
      capRandom:
        type: "number"
        format: "double"
      type:
        type: "string"
  IfNotRes:
    type: "object"
    properties:
      type:
        type: "string"
        enum:
        - "setError"
        - "addContacts"
        - "sendAnyway"
      properties:
        $ref: "#/definitions/IfNotPropertiesRes"
  IntegrationApplicationRes:
    type: "object"
    properties:
      applications:
        type: "array"
        items:
          type: "string"
  IntegrationEventRes:
    type: "object"
    properties:
      application:
        type: "string"
      eventName:
        type: "string"
      eventCategory:
        type: "string"
      offset:
        type: "integer"
        format: "int64"
      enabled:
        type: "boolean"
        default: false
  IntegrationRes:
    type: "object"
    properties:
      application:
        type: "string"
      resource:
        type: "string"
      enabled:
        type: "boolean"
        default: false
      status:
        type: "string"
      events:
        type: "array"
        items:
          $ref: "#/definitions/IntegrationEventRes"
  JsonNode:
    type: "object"
    properties:
      float:
        type: "boolean"
        default: false
      nodeType:
        type: "string"
        enum:
        - "ARRAY"
        - "BINARY"
        - "BOOLEAN"
        - "MISSING"
        - "NULL"
        - "NUMBER"
        - "OBJECT"
        - "POJO"
        - "STRING"
      int:
        type: "boolean"
        default: false
      number:
        type: "boolean"
        default: false
      valueNode:
        type: "boolean"
        default: false
      containerNode:
        type: "boolean"
        default: false
      missingNode:
        type: "boolean"
        default: false
      object:
        type: "boolean"
        default: false
      pojo:
        type: "boolean"
        default: false
      integralNumber:
        type: "boolean"
        default: false
      floatingPointNumber:
        type: "boolean"
        default: false
      short:
        type: "boolean"
        default: false
      long:
        type: "boolean"
        default: false
      double:
        type: "boolean"
        default: false
      bigDecimal:
        type: "boolean"
        default: false
      bigInteger:
        type: "boolean"
        default: false
      textual:
        type: "boolean"
        default: false
      boolean:
        type: "boolean"
        default: false
      binary:
        type: "boolean"
        default: false
      array:
        type: "boolean"
        default: false
      null:
        type: "boolean"
        default: false
  KpiListRes:
    type: "object"
    properties:
      kpis:
        type: "array"
        items:
          type: "string"
          enum:
          - "TENANTS"
          - "STATS"
          - "PLAN_USAGE"
          - "SEGMENT_USAGE"
  KpiListUsageRes:
    type: "object"
    properties:
      tenants:
        type: "array"
        items:
          $ref: "#/definitions/KpiUsageRes"
  KpiUsageRes:
    type: "object"
    properties:
      tenantId:
        type: "string"
      tenantLabel:
        type: "string"
      groupPk:
        type: "integer"
        format: "int64"
      userDbId:
        type: "string"
      total:
        type: "integer"
        format: "int64"
      totalInLastWeek:
        type: "integer"
        format: "int64"
      totalInLastMonth:
        type: "integer"
        format: "int64"
      totalInLastYear:
        type: "integer"
        format: "int64"
  LastValueConditionRes:
    - $ref: "#/definitions/ConditionResFilterClause"
    - type: "object"
      required:
      - "attribute"
      - "getlastValueCondition"
      properties:
        attribute:
          type: "string"
        getlastValueCondition:
          readOnly: true
          $ref: "#/definitions/TimeseriesSubConditionRes"
  LovItemRes:
    type: "object"
    properties:
      lovId:
        type: "string"
      name:
        type: "string"
      value:
        type: "string"
      label:
        type: "string"
      parentValue:
        type: "string"
  LovsListRes:
    type: "object"
    properties:
      values:
        type: "array"
        items:
          $ref: "#/definitions/LovItemRes"
  MaterializationRes:
    type: "object"
    properties:
      offset:
        type: "integer"
        format: "int32"
  MessageModelRes:
    type: "object"
    properties:
      identifier:
        type: "integer"
        format: "int32"
      name:
        type: "string"
      description:
        type: "string"
      subject:
        type: "string"
      charset:
        type: "string"
      htmlContent:
        type: "string"
      textContent:
        type: "string"
      senderName:
        type: "string"
      senderEmail:
        type: "string"
      senderReplyTo:
        type: "string"
  MessageModelsListRes:
    type: "object"
    properties:
      messageModels:
        type: "array"
        items:
          $ref: "#/definitions/MessageModelRes"
  ModelAttributeRes:
    type: "object"
    properties:
      name:
        type: "string"
      description:
        type: "string"
      dataType:
        type: "string"
      uuid:
        type: "string"
      label:
        type: "string"
      defaultValue:
        type: "string"
      maxValue:
        type: "number"
        format: "double"
      minValue:
        type: "number"
        format: "double"
      validationPattern:
        type: "string"
      attributeSize:
        type: "integer"
        format: "int32"
      attributePrecision:
        type: "integer"
        format: "int32"
      parentAttributeName:
        type: "string"
      inputFieldType:
        type: "string"
      inputFieldOperators:
        type: "string"
      visible:
        type: "boolean"
        default: false
      personal:
        type: "boolean"
        default: false
      lov:
        type: "boolean"
        default: false
      lovLastUpdate:
        type: "string"
      validate:
        type: "boolean"
        default: false
      validationInclusive:
        type: "boolean"
        default: false
      autoinclude:
        type: "boolean"
        default: false
      aggregable:
        type: "boolean"
        default: false
      inputFieldAggregators:
        type: "string"
      lovLocked:
        type: "boolean"
        default: false
      cardinality:
        type: "integer"
        format: "int32"
      heuristicOverride:
        type: "boolean"
        default: false
      allowedInputFieldType:
        type: "string"
  ModelContactRes:
    type: "object"
    properties:
      attributes:
        type: "array"
        items:
          $ref: "#/definitions/ModelAttributeRes"
  ModelDimensionRes:
    type: "object"
    properties:
      name:
        type: "string"
      description:
        type: "string"
      attributes:
        type: "array"
        items:
          $ref: "#/definitions/ModelAttributeRes"
  ModelSpecialsAttributeRes:
    type: "object"
    properties:
      name:
        type: "string"
      label:
        type: "string"
      defaultValue:
        type: "string"
      inputFieldType:
        type: "string"
      required:
        type: "boolean"
        default: false
      values:
        type: "array"
        items:
          $ref: "#/definitions/LovItemRes"
  ModelSpecialsListRes:
    type: "object"
    properties:
      specials:
        type: "array"
        items:
          $ref: "#/definitions/ModelSpecialsRes"
  ModelSpecialsRes:
    type: "object"
    properties:
      uuid:
        type: "string"
      criteria:
        type: "string"
      label:
        type: "string"
      subtype:
        type: "string"
      relatedEventCategory:
        type: "string"
      timeframeCapable:
        type: "boolean"
        default: false
      attributes:
        type: "array"
        items:
          $ref: "#/definitions/ModelSpecialsAttributeRes"
  ModelsEventsRes:
    type: "object"
    properties:
      name:
        type: "string"
      category:
        type: "string"
      type:
        type: "string"
      description:
        type: "string"
      label:
        type: "string"
      idAttibute:
        type: "string"
      attributes:
        type: "array"
        items:
          $ref: "#/definitions/ModelAttributeRes"
      dimensions:
        type: "array"
        items:
          $ref: "#/definitions/ModelDimensionRes"
  ModelsRes:
    type: "object"
    properties:
      contact:
        $ref: "#/definitions/ModelContactRes"
      events:
        type: "array"
        items:
          $ref: "#/definitions/ModelsEventsRes"
  MonitorListRes:
    type: "object"
    properties:
      monitors:
        type: "array"
        items:
          $ref: "#/definitions/MonitorRes"
  MonitorRes:
    type: "object"
    properties:
      uuid:
        type: "string"
      startDate:
        type: "string"
        format: "date-time"
      endDate:
        type: "string"
        format: "date-time"
      processClass:
        type: "string"
      processName:
        type: "string"
      processStatus:
        type: "string"
      processInfo:
        type: "string"
      tenantId:
        type: "string"
      agentInfo:
        type: "string"
      message:
        type: "string"
      parentProcessId:
        type: "string"
  NotificationListRes:
    type: "object"
    properties:
      currentPageNumber:
        type: "integer"
        format: "int32"
      maxPageNumber:
        type: "integer"
        format: "int32"
      notifications:
        type: "array"
        items:
          $ref: "#/definitions/NotificationRes"
  NotificationRes:
    type: "object"
    properties:
      uuid:
        type: "string"
      message:
        type: "object"
      code:
        type: "integer"
        format: "int32"
      createdAt:
        type: "string"
        format: "date-time"
      lastSeen:
        type: "string"
        format: "date-time"
  OperationRes:
    type: "object"
    properties:
      name:
        type: "string"
      description:
        type: "string"
  OperationsListRes:
    type: "object"
    properties:
      operations:
        type: "array"
        items:
          $ref: "#/definitions/OperationRes"
  Page:
    type: "object"
    properties:
      size:
        type: "integer"
        format: "int32"
      totalElements:
        type: "integer"
        format: "int64"
      totalUnfilteredElements:
        type: "integer"
        format: "int64"
      totalPages:
        type: "integer"
        format: "int32"
      number:
        type: "integer"
        format: "int32"
  PageBuilderPagesListRes:
    type: "object"
    properties:
      pages:
        type: "array"
        uniqueItems: true
        items:
          $ref: "#/definitions/PageBuilderPagesRes"
      currentPageNumber:
        type: "integer"
        format: "int32"
      maxPageNumber:
        type: "integer"
        format: "int32"
      templateId:
        type: "integer"
        format: "int32"
  PageBuilderPagesRes:
    type: "object"
    properties:
      templateId:
        type: "integer"
        format: "int32"
      id:
        type: "integer"
        format: "int32"
      pageContent:
        type: "string"
      name:
        type: "string"
  PageBuilderTemplateListRes:
    type: "object"
    properties:
      templates:
        type: "array"
        uniqueItems: true
        items:
          $ref: "#/definitions/PageBuilderTemplateRes"
      currentPageNumber:
        type: "integer"
        format: "int32"
      maxPageNumber:
        type: "integer"
        format: "int32"
  PageBuilderTemplateRes:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
      name:
        type: "string"
  Pagination:
    type: "object"
    properties:
      limit:
        type: "integer"
        format: "int32"
      offset:
        type: "integer"
        format: "int32"
  PlanCustomConfig:
    type: "object"
    properties:
      base:
        $ref: "#/definitions/BaseConfig"
      customerId:
        type: "integer"
        format: "int64"
      userDbId:
        type: "integer"
        format: "int64"
      updatedBy:
        type: "integer"
        format: "int64"
      get_links:
        $ref: "#/definitions/ConfigLink"
      properties:
        $ref: "#/definitions/PlanCustomConfigProperties"
  PlanCustomConfigProperties:
    type: "object"
    properties:
      tenantName:
        type: "string"
      tenantLabel:
        type: "string"
      customerIndustry:
        type: "string"
      hasMasterTenant:
        type: "string"
      masterTenantGroupName:
        type: "string"
      loadContacts:
        type: "string"
      contactsCron:
        type: "string"
      contactAttribute2Overwrite:
        type: "string"
      eventsDigitalMessagesDeliveryLabels:
        type: "string"
      digitalMessagesUserDbId:
        type: "string"
      loadDigitalMessages:
        type: "string"
      enableHubPurchasesUpdates:
        type: "string"
      loadPurchases:
        type: "string"
      eventsPurchasesSftpPort:
        type: "string"
      contactdbJoinKey:
        type: "string"
      eventsPurchasesSftpDirectory:
        type: "string"
      consumeFile:
        type: "string"
      eventsPurchasesInput:
        type: "string"
      eventsPurchasesSftpPassword:
        type: "string"
      insertDirectCondition:
        type: "string"
      eventsPurchasesPks:
        type: "string"
      eventsPurchasesSftpHost:
        type: "string"
      eventsPurchasesSftpUsername:
        type: "string"
      ordersJoinKey:
        type: "string"
      updateLov:
        type: "string"
      enableHubIntegrationsUpdates:
        type: "string"
      hubIntegration:
        type: "string"
      hasSftpConsumer:
        type: "string"
      consumerSftpHost:
        type: "string"
      consumerSftpPort:
        type: "string"
      consumerSftpDirectory:
        type: "string"
      consumerSftpUsername:
        type: "string"
      consumerSftpPassword:
        type: "string"
      consumerSftpHeaders:
        type: "string"
      consumerSftpAttributes:
        type: "string"
      multipleSftpConsumers:
        type: "string"
      hasClabConsumer:
        type: "string"
      clabApiKey:
        type: "string"
      clabUserKey:
        type: "string"
      contactFlowIntegration:
        type: "string"
      enableDataIntegrationsUpdates:
        type: "string"
  PlanJobListRes:
    type: "object"
    properties:
      properties:
        type: "object"
        additionalProperties:
          type: "object"
      consumer:
        $ref: "#/definitions/ConsumerRes"
      jobs:
        type: "array"
        items:
          $ref: "#/definitions/PlanJobRes"
  PlanJobRes:
    type: "object"
    properties:
      properties:
        type: "object"
        additionalProperties:
          type: "object"
      consumer:
        $ref: "#/definitions/ConsumerRes"
  PlanRes:
    type: "object"
    properties:
      uuid:
        type: "string"
      name:
        type: "string"
      segment:
        $ref: "#/definitions/SegmentRes"
      dndPolicy:
        $ref: "#/definitions/DndPolicyRes"
      excludeDnd:
        type: "boolean"
        default: false
      status:
        type: "string"
      locked:
        type: "boolean"
        default: false
      planification:
        $ref: "#/definitions/ScheduleRes"
      materialization:
        $ref: "#/definitions/MaterializationRes"
      constraints:
        $ref: "#/definitions/ConstraintsRes"
      listId:
        type: "string"
      cpm:
        type: "number"
        format: "double"
      authorId:
        type: "integer"
        format: "int64"
      author:
        type: "string"
      createdAt:
        type: "string"
        format: "date-time"
      updatedAt:
        type: "string"
        format: "date-time"
      properties:
        type: "object"
        additionalProperties:
          type: "string"
      workflowStatus:
        type: "string"
      jobs:
        type: "array"
        items:
          $ref: "#/definitions/PlanJobRes"
  PlanWithExternalInfoRes:
    type: "object"
    properties:
      uuid:
        type: "string"
      name:
        type: "string"
      externalEntities:
        type: "array"
        items:
          $ref: "#/definitions/ExternalInfoRes"
  PluginListRes:
    type: "object"
    properties:
      plugins:
        type: "array"
        items:
          $ref: "#/definitions/PluginRes"
  PluginRes:
    type: "object"
    properties:
      uuid:
        type: "string"
      identifier:
        type: "string"
      type:
        type: "string"
      category:
        type: "string"
      properties:
        type: "object"
        additionalProperties:
          type: "string"
      label:
        type: "string"
      description:
        type: "string"
  QueryPartRes:
    type: "object"
    properties:
      event:
        $ref: "#/definitions/EventIdentifierRes"
      condition:
        $ref: "#/definitions/ConditionResFilterClause"
      aggregation:
        $ref: "#/definitions/ConditionResFilterClause"
      timeframe:
        $ref: "#/definitions/ConditionResFilterClause"
      correlation:
        $ref: "#/definitions/CorrelationResFilterClause"
  QueryRes:
    type: "object"
    required:
    - "type"
    properties:
      type:
        type: "string"
      conjunction:
        type: "string"
      combinationType:
        type: "string"
      queries:
        type: "array"
        items:
          $ref: "#/definitions/QueryRes"
      name:
        type: "string"
      are:
        $ref: "#/definitions/QueryPartRes"
      correlation:
        $ref: "#/definitions/CorrelationResObject"
      did:
        $ref: "#/definitions/QueryPartRes"
      analytic:
        $ref: "#/definitions/AnalyticRes"
      negative:
        type: "boolean"
        default: false
      join:
        type: "string"
      queryId:
        type: "integer"
        format: "int32"
      specialsInfo:
        $ref: "#/definitions/SpecialsInfoRes"
      class:
        type: "string"
  RecurrenceRes:
    type: "object"
    properties:
      minutes:
        $ref: "#/definitions/TimeRes"
      hours:
        $ref: "#/definitions/TimeRes"
      dayOfMonth:
        $ref: "#/definitions/TimeRes"
      dayOfWeek:
        $ref: "#/definitions/TimeRes"
      months:
        $ref: "#/definitions/TimeRes"
      maxRepeat:
        type: "integer"
        format: "int32"
      repetitionEndDate:
        type: "string"
        format: "date-time"
      repetitionStartDate:
        type: "string"
        format: "date-time"
      recurrenceUuid:
        type: "string"
      timezone:
        type: "string"
      region:
        type: "string"
  Rule:
    type: "object"
    properties:
      type:
        type: "string"
      frequency:
        type: "integer"
        format: "int32"
      amount:
        type: "integer"
        format: "int32"
      period:
        type: "string"
      conditions:
        type: "array"
        items:
          $ref: "#/definitions/Rule"
      global:
        type: "boolean"
        default: false
  RuleRes:
    type: "object"
    properties:
      uuid:
        type: "string"
      authorId:
        type: "integer"
        format: "int64"
      author:
        type: "string"
      name:
        type: "string"
      category:
        type: "string"
      group:
        type: "string"
      query:
        $ref: "#/definitions/QueryRes"
      createdAt:
        type: "string"
        format: "date-time"
      updatedAt:
        type: "string"
        format: "date-time"
  RulesListRes:
    type: "object"
    properties:
      rules:
        type: "array"
        items:
          $ref: "#/definitions/RuleRes"
  ScheduleListRes:
    type: "object"
    properties:
      planifications:
        type: "array"
        items:
          $ref: "#/definitions/ScheduleRes"
  ScheduleRes:
    type: "object"
    properties:
      startDate:
        type: "string"
        format: "date-time"
      timezone:
        type: "string"
      region:
        type: "string"
      recurrence:
        $ref: "#/definitions/RecurrenceRes"
  SegmentBaseInfoRes:
    type: "object"
    properties:
      uuid:
        type: "string"
      name:
        type: "string"
  SegmentRes:
    type: "object"
    properties:
      uuid:
        type: "string"
      name:
        type: "string"
      query:
        $ref: "#/definitions/QueryRes"
      authorId:
        type: "integer"
        format: "int64"
      author:
        type: "string"
      createdAt:
        type: "string"
        format: "date-time"
      updatedAt:
        type: "string"
        format: "date-time"
      combined:
        type: "boolean"
        default: false
      editable:
        type: "boolean"
        default: false
      uses:
        $ref: "#/definitions/CombinedSegmentRes"
      usedBy:
        type: "array"
        items:
          $ref: "#/definitions/SegmentBaseInfoRes"
  Self:
    type: "object"
    properties:
      href:
        type: "string"
  SpecialsInfoRes:
    type: "object"
    properties:
      subtype:
        type: "string"
      criteria:
        type: "string"
      timeframe:
        $ref: "#/definitions/ConditionResObject"
  StatementListRes:
    type: "object"
    properties:
      statements:
        type: "array"
        items:
          $ref: "#/definitions/StatementRes"
  StatementRes:
    type: "object"
    properties:
      uuid:
        type: "string"
      name:
        type: "string"
      label:
        type: "string"
      type:
        type: "string"
        enum:
        - "GLOBAL"
        - "SEGMENT"
      query:
        type: "string"
      public:
        type: "boolean"
        default: false
  TenantContactModelRes:
    type: "object"
    properties:
      defaultUtcOffset:
        type: "integer"
        format: "int32"
      defaultRegion:
        type: "string"
      defaultLocale:
        type: "string"
      defaultFirstDayOfWeek:
        type: "integer"
        format: "int32"
      tenantId:
        type: "string"
      tenantName:
        type: "string"
      tenantLabel:
        type: "string"
      groupName:
        type: "string"
      groupPk:
        type: "integer"
        format: "int64"
      userDbId:
        type: "string"
      mailAttribute:
        type: "string"
      idAttribute:
        type: "string"
  TenantJobListRes:
    type: "object"
    properties:
      tasks:
        type: "array"
        items:
          $ref: "#/definitions/TenantJobRes"
  TenantJobRes:
    type: "object"
    properties:
      taskId:
        type: "string"
      tenant:
        $ref: "#/definitions/TenantRes"
      plugin:
        $ref: "#/definitions/PluginRes"
      cronExpression:
        type: "string"
      properties:
        type: "object"
        additionalProperties:
          type: "object"
      taskName:
        type: "string"
      monitorUuid:
        type: "string"
  TenantKpiListRes:
    type: "object"
    properties:
      totalTenants:
        type: "integer"
        format: "int32"
      totalGroupPks:
        type: "integer"
        format: "int32"
      tenants:
        type: "array"
        items:
          $ref: "#/definitions/TenantKpiRes"
  TenantKpiRes:
    type: "object"
    properties:
      tenantId:
        type: "string"
      tenantLabel:
        type: "string"
      groupPk:
        type: "integer"
        format: "int64"
      userDbId:
        type: "string"
      creationDate:
        type: "string"
        format: "date-time"
  TenantListRes:
    type: "object"
    properties:
      tenants:
        type: "array"
        items:
          $ref: "#/definitions/TenantRes"
  TenantRes:
    type: "object"
    properties:
      defaultUtcOffset:
        type: "integer"
        format: "int32"
      defaultRegion:
        type: "string"
      defaultLocale:
        type: "string"
      defaultFirstDayOfWeek:
        type: "integer"
        format: "int32"
      tenantId:
        type: "string"
      tenantName:
        type: "string"
      tenantLabel:
        type: "string"
      groupName:
        type: "string"
      groupPk:
        type: "integer"
        format: "int64"
      userDbId:
        type: "string"
  TenantSettingsRes:
    type: "object"
    properties:
      defaultUtcOffset:
        type: "integer"
        format: "int32"
      defaultRegion:
        type: "string"
      defaultLocale:
        type: "string"
      defaultFirstDayOfWeek:
        type: "integer"
        format: "int32"
  TenantStatsKpiListRes:
    type: "object"
    properties:
      tenantsStatistics:
        type: "array"
        items:
          $ref: "#/definitions/TenantStatsKpiRes"
  TenantStatsKpiRes:
    type: "object"
    properties:
      tenantId:
        type: "string"
      tenantLabel:
        type: "string"
      groupPk:
        type: "integer"
        format: "int64"
      userDbId:
        type: "string"
      creationDate:
        type: "string"
        format: "date-time"
      contacts:
        type: "integer"
        format: "int64"
      totalEvents:
        type: "integer"
        format: "int64"
      digitalMessages:
        type: "integer"
        format: "int64"
      purchases:
        type: "integer"
        format: "int64"
      ecommerces:
        type: "integer"
        format: "int64"
      retails:
        type: "integer"
        format: "int64"
  TestCampaignRes:
    type: "object"
    properties:
      identifier:
        type: "integer"
        format: "int32"
      name:
        type: "string"
      modelIdentifier:
        type: "integer"
        format: "int32"
      senderName:
        type: "string"
      senderEmail:
        type: "string"
      senderReplyTo:
        type: "string"
      selectionId:
        type: "integer"
        format: "int32"
      filterId:
        type: "integer"
        format: "int32"
      emails:
        type: "array"
        items:
          type: "string"
      subject:
        type: "string"
      htmlContent:
        type: "string"
      textContent:
        type: "string"
      removeDuplicates:
        type: "boolean"
        default: false
      deferred:
        type: "boolean"
        default: false
      payloadValid:
        type: "boolean"
        default: false
  TimeRes:
    type: "object"
    properties:
      mode:
        type: "string"
      value:
        type: "array"
        items:
          type: "string"
  TimeframeConditionRes:
    type: "object"
    properties:
      type:
        type: "string"
      attribute:
        type: "string"
      operator:
        type: "string"
      value:
        type: "object"
  TimeseriesSubConditionRes:
    type: "object"
    properties:
      type:
        type: "string"
      operator:
        type: "string"
      value:
        type: "object"
      values:
        type: "array"
        items:
          type: "object"
  UserBaseRes:
    type: "object"
    properties:
      userPk:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      surname:
        type: "string"
      username:
        type: "string"
      email:
        type: "string"
      picture:
        type: "string"
      lang:
        type: "string"
      timezone:
        type: "string"
      roles:
        type: "array"
        items:
          type: "string"
  UserInfoRes:
    type: "object"
    properties:
      userPk:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      surname:
        type: "string"
  UserRes:
    type: "object"
    properties:
      base:
        $ref: "#/definitions/UserBaseRes"
      extended:
        $ref: "#/definitions/TenantListRes"
  UserSettingsRes:
    type: "object"
    properties:
      userPk:
        type: "integer"
        format: "int64"
      preferences:
        $ref: "#/definitions/JsonNode"
  UserdbInfoRes:
    type: "object"
    properties:
      groupPk:
        type: "string"
      userDbId:
        type: "string"
      status:
        type: "string"
        enum:
        - "AVAILABLE"
        - "LOCKED"
        - "UNKNOWN"
  WidgetListRes:
    type: "object"
    properties:
      widgets:
        type: "array"
        items:
          $ref: "#/definitions/WidgetRes"
  WidgetRes:
    type: "object"
    properties:
      uuid:
        type: "string"
      name:
        type: "string"
      label:
        type: "string"
      range:
        type: "string"
        enum:
        - "GLOBAL"
        - "SEGMENT"
      statement:
        type: "string"
      order:
        type: "integer"
        format: "int32"
      dataSource:
        type: "string"
      type:
        type: "string"
        enum:
        - "DEMOGRAPHY"
        - "EVENTS"
      graph:
        type: "object"
        additionalProperties:
          type: "object"
