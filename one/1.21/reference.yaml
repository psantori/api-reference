swagger: '2.0'
info:
  version: '1.21.0'
  title: Contactone API

host: api.contactlab.it

schemes:
  - https
  
securityDefinitions:
  Contactlab:
    type: oauth2
    description: Contactlab OAuth2 authorization server
    authorizationUrl: 'https://login.contactlab.it/o/oauth2/auth'
    flow: implicit
    scopes:
      CUSTOMER_CARE: Customer Care Representative
      BACKEND_USER: Company configurator
      STORE_MANAGER: Company store manager
      SALES_ASSOCIATE: Company sales associate
      CUSTOMER_MANAGER: Company customer manager
    
tags:
  - name: configuration
    description: Configuration endpoint
  - name: user
    description: User endpoint
  - name: workspace
    description: Workspace endpoint
  - name: customer
    description: Customer endpoint
  - name: conversation
    description: Conversation endpoint
  - name: message
    description: Message endpoint
  - name: events
    description: Events on post endpoint
  - name: chat
    description: Chat endpoint
  - name: repository
    description: Repository endpoint
  - name: template
    description: Template endpoint
  - name: news
    description: News endpoint
  - name: collection
    description: Collection endpoint
  - name: image
    description: Image endpoint
  - name: company
    description: Company endpoint
  - name: store
    description: Store endpoint
  - name: registry
    description: Registry endpoint
  - name: facebook
    description: facebook endpoint
  - name: client-application
    description: Client Application endpoint
  - name: permission
    description: Permission endpoint
  - name: channel
    description: Channel endpoint
  - name: feed
    description: Feeds endpoint
  - name: configurations
    description: Configurations endpoint
    
basePath: /one/v1

paths:
  
  /me:
    get:
      summary: "[GET] Me"
      tags:
        - user
      description: Returns profile with workspaces of the company associated to user
      produces:
        - application/json
      security:
        - Contactlab:
          - CUSTOMER_CARE
          - BACKEND_USER
          - STORE_MANAGER
          - SALES_ASSOCIATE
      parameters:
        - $ref: '#/parameters/AuthorizationHeader'         
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/Profile'
        401:
          description: Unauthorized

    patch:
      summary: "[PATCH] Me"
      tags:
        - user
      description: Updates properties of profile for the current user
      produces:
        - application/json
      security:
        - Contactlab:
          - CUSTOMER_CARE
          - BACKEND_USER
          - STORE_MANAGER
          - SALES_ASSOCIATE
      parameters:
        - $ref: '#/parameters/AuthorizationHeader'
        - name: properties
          in: body
          description: Map of properties and values to be updated
          required: true
          schema:
            $ref: '#/definitions/ProfileSource'
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/Profile'
        401:
          description: Unauthorized
        404:
          description: Not Found

  /workspaces/{workspaceId}/posts/events:
    get:
      tags:
        - events
      summary: "[GET] Posts Events"
      description: Get an Emitter for ServerSentEvents for posts related events
      produces:
        - text/event-stream
      security:
        - Contactlab:
          - STORE_MANAGER
          - SALES_ASSOCIATE
      parameters:
        - $ref: '#/parameters/AuthorizationHeader' 
        - name: workspaceId
          in: path
          description: WorkspaceId selected
          type: string
          required: true
      responses:
        202:
          description: OK
        401:
          description: Unauthorized
      x-async-responses:
        - event: newPost
          data:
            $ref: '#/definitions/NewPostEvent'
        - event: postStatusUpdate
          data:
            $ref: '#/definitions/PostStatusUpdateEvent'
            
  /workspaces/{workspaceId}/repositories:
    get:
      tags:
        - repository
      summary: "[GET] Repositories"
      description: Get a list of available repositories
      produces:
        - application/json
      security:
        - Contactlab:
          - STORE_MANAGER
          - SALES_ASSOCIATE
      parameters:
        - $ref: '#/parameters/AuthorizationHeader' 
        - name: workspaceId
          in: path
          description: WorkspaceId selected
          type: string
          required: true
        - name: Accept-Language
          in: header
          type: string
          description: Locale to use for retrieving resources
          required: false
        - name: contentTypeId
          in: query
          description: Name of id of content type to filter repositories by
          type: string
          required: false
        - name: page
          in: query
          description: |
            Page number to retrive (starting from 0)
          required: false
          type: integer
        - name: size
          in: query
          description: |
            Number of elements per page
          required: false
          type: integer
        - name: primary
          in: query
          description: Flag to filter repositories to show on the main page
          required: false
          type: boolean
        - name: supportedLocale
          in: query
          description: Language to filter repositories by
          type: string
          required: false
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/PagedRepository'
        401:
          description: Unauthorized

  /workspaces/{workspaceId}/repositories/{id}:
    get:
      summary: "[GET] Repository"
      tags:
        - repository
      description: Get information about a specific repository
      produces:
        - application/json
      security:
        - Contactlab:
          - STORE_MANAGER
          - SALES_ASSOCIATE
      parameters:
        - $ref: '#/parameters/AuthorizationHeader' 
        - name: workspaceId
          in: path
          description: WorkspaceId selected
          type: string
          required: true
        - name: id
          in: path
          description: Id of repository
          required: true
          type: string
        - name: Accept-Language
          in: header
          type: string
          description: Locale to use for retrieving resources
          required: false
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Repository'
        401:
          description: Unauthorized
        404:
          description: Not Found

  /workspaces/{workspaceId}/repositories/{id}/contents:
    get:
      summary: "[GET] Repository contents"
      tags:
        - repository
      description: Get a list of contents available in the given repository
      produces:
        - application/json
      security:
        - Contactlab:
          - STORE_MANAGER
          - SALES_ASSOCIATE
      parameters:
        - $ref: '#/parameters/AuthorizationHeader' 
        - name: workspaceId
          in: path
          description: WorkspaceId selected
          type: string
          required: true      
        - name: id
          in: path
          description: Id of repository
          required: true
          type: string
        - name: externalId
          in: query
          description: External id of content to filter repositories by
          type: string
          required: false
        - name: query
          in: query
          description: Query to filter contents of repository (query=value)
          type: string
          required: false
        - name: category
          in: query
          description: Id of the category to filter contents of repository (category=value)
          type: string
          required: false
        - name: tag
          in: query
          description: Tag to filter contents of repository (tag=value)
          type: string
          required: false
        - name: page
          in: query
          description: |
            Page number to retrive (starting from 0)
          required: false
          type: integer
        - name: size
          in: query
          description: |
            Number of elements per page
          required: false
          type: integer
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/PagedContent'
        401:
          description: Unauthorized
        501:
          description: Not Implemented (in case repository filter is by a not supported feature)

  /workspaces/{workspaceId}/repositories/{id}/categories:
    get:
      summary: "[GET] Repository categories"
      tags:
        - repository
      description: Get categories supported by the repository. The root category is returned if no parameter is supplied. A list of subcategories of the provided category is supplied if a `parentId` param is provided.
      produces:
        - application/json
      security:
        - Contactlab:
          - STORE_MANAGER
          - SALES_ASSOCIATE
      parameters:
        - $ref: '#/parameters/AuthorizationHeader' 
        - name: workspaceId
          in: path
          description: WorkspaceId selected
          type: string
          required: true      
        - name: id
          in: path
          description: Id of repository
          required: true
          type: string
        - name: externalId
          in: query
          description: External id of category to filter repositories by
          type: string
          required: false
        - name: parentId
          in: query
          description: Id of category to retrieve subcategories
          required: true
          type: string
        - name: page
          in: query
          description: |
            Page number to retrive (starting from 0)
          required: false
          type: integer
        - name: size
          in: query
          description: |
            Number of elements per page
          required: false
          type: integer
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/PagedCategory'
        401:
          description: Unauthorized
        404:
          description: Not Found
        501:
          description: Not Implemented (in case repository feature is not True)

  /workspaces/{workspaceId}/repositories/{id}/tags:
    get:
      summary: "[GET] Repository tags"
      tags:
        - repository
      description: Get all tags supported by the given repository.
      produces:
        - application/json
      security:
        - Contactlab:
          - STORE_MANAGER
          - SALES_ASSOCIATE
      parameters:
        - $ref: '#/parameters/AuthorizationHeader' 
        - name: workspaceId
          in: path
          description: WorkspaceId selected
          type: string
          required: true      
        - name: id
          in: path
          description: Id of repository
          required: true
          type: string
        - name: page
          in: query
          description: |
            Page number to retrive (starting from 0)
          required: false
          type: integer
        - name: size
          in: query
          description: |
            Number of elements per page
          required: false
          type: integer
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/PagedTag'
        401:
          description: Unauthorized
        404:
          description: Not Found
        501:
          description: Not Implemented (in case repository feature is not True)

  /workspaces/{workspaceId}/repositories/{id}/rules/{ruleId}:
    post:
      summary: "[POST] Query contents by rule"
      tags:
        - repository
      description: Create a query based on the provided rule id to extract contents from repository.
      produces:
        - application/json
      security:
        - Contactlab:
          - STORE_MANAGER
          - SALES_ASSOCIATE
      parameters:
        - $ref: '#/parameters/AuthorizationHeader' 
        - name: workspaceId
          in: path
          description: WorkspaceId selected
          type: string
          required: true      
        - name: id
          in: path
          description: Id of repository
          required: true
          type: string
        - name: ruleId
          in: path
          description: Rule id
          required: true
          type: string
        - name: customerId
          in: query
          description: Customer id to pass as context for rule
          type: string
          required: false
        - name: channel
          in: query
          description: Medium to pass as context for rule
          type: string
          required: false
        - name: size
          in: query
          description: Number of elements requested. (Min and max of cardinality) Default is "10"
          type: integer
          required: false
        - name: parameters
          in: body
          description: Map of parameter values required by rule
          required: true
          schema:
            type: object
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/PagedContent'
        401:
          description: Unauthorized
        404:
          description: Not Founda
          
          
  /workspaces/{workspaceId}/models/customer:
    get:
      summary: "[GET] Customer model"
      description: Returns customer model for workspace
      tags:
        - customer
      produces:
        - application/json
      security:
        - Contactlab:
          - CUSTOMER_MANAGER
          - STORE_MANAGER
          - SALES_ASSOCIATE
      parameters:
        - $ref: '#/parameters/AuthorizationHeader' 
        - name: workspaceId
          in: path
          description: WorkspaceId selected
          type: string
          required: true          
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/CustomerModel'
        401:
          description: Unauthorized
          
  /workspaces/{workspaceId}/customers:
    get:
      summary: "[GET] Customers"
      description: Returns a list of customers for the currently connected user
      tags:
        - customer
      produces:
        - application/json
      security:
        - Contactlab:
          - CUSTOMER_MANAGER
          - STORE_MANAGER
          - SALES_ASSOCIATE
      parameters:
        - $ref: '#/parameters/AuthorizationHeader' 
        - name: workspaceId
          in: path
          description: WorkspaceId selected
          type: string
          required: true      
        - name: page
          in: query
          description: Page number to retrive (starting from 0)
          required: false
          type: integer
        - name: size
          in: query
          description: Number of elements per page
          required: false
          type: integer
        - name: channel
          in: query
          description: Filter customers per subscription
          required: false
          type: string
        - name: userId
          in: query
          description: Filter customers per user (available only for Store_Manager)
          required: false
          type: string
        - name: expand
          in: query
          description: If present, the field user is populated. By default the field user is empty.
          required: false
          type: string
          enum: ["user"]         
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/PagedCustomer'
        401:
          description: Unauthorized
          
    post:
      summary: "[POST] Create a new customer"
      tags:
        - customer
      description: Creates a new customer, assigned to the user identified by assignedToUserId.
      produces:
        - application/json
      security:
        - Contactlab:
          - CUSTOMER_MANAGER
          - STORE_MANAGER
          - SALES_ASSOCIATE
      parameters:
        - $ref: '#/parameters/AuthorizationHeader' 
        - name: workspaceId
          in: path
          description: WorkspaceId selected
          type: string
          required: true
        - name: dryRun
          in: query
          description: enable dry run execution
          type: boolean
          required: false
        - name: customer
          in: body
          description: Customer resource to be created
          required: true
          schema:
            $ref: '#/definitions/SourceCustomer'
      responses:
        200:
          description: Success (if dryRun=true)
          schema:
            $ref: '#/definitions/Customer'
        201:
          description: Created (if dryRun=false)
          schema:
            $ref: '#/definitions/Customer'
        400:
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResource'
        401:
          description: Unauthorized
        404:
          description: Not Found
          
  /workspaces/{workspaceId}/customers/{customerId}:
    get:
      summary: "[GET] Customer"
      tags:
        - customer
      description: get customer
      produces:
        - application/json
      security:
        - Contactlab:
          - CUSTOMER_MANAGER
          - STORE_MANAGER
          - SALES_ASSOCIATE
      parameters:
        - $ref: '#/parameters/AuthorizationHeader' 
        - name: workspaceId
          in: path
          description: WorkspaceId selected
          type: string
          required: true
        - name: customerId
          in: path
          description: Id of customer
          required: true
          type: string
        - name: expand
          in: query
          description: If present, the field user is populated. By default the field user is empty.
          required: false
          type: string
          enum: ["user"]         
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Customer'
        401:
          description: Unauthorized
        404:
          description: Not Found
          
    patch:
      summary: "[PATCH] Customer"
      tags:
        - customer
      description: get customer
      produces:
        - application/json
      security:
        - Contactlab:
          - CUSTOMER_MANAGER
          - STORE_MANAGER
          - SALES_ASSOCIATE
      parameters:
        - $ref: '#/parameters/AuthorizationHeader' 
        - name: workspaceId
          in: path
          description: WorkspaceId selected
          type: string
          required: true
        - name: customerId
          in: path
          description: Id of customer
          required: true
          type: string
        - name: dryRun
          in: query
          description: enable dry run execution
          type: boolean
          required: false
        - name: customer
          in: body
          description: Customer resource to be created
          required: true
          schema:
            $ref: '#/definitions/SourceCustomer'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Customer'
        400:
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResource'
        401:
          description: Unauthorized
        404:
          description: Not Found
          
  /workspaces/{workspaceId}/customers/{customerId}/events:
    get:
      summary: "[GET] Customer events"
      description: Returns a list of customer events
      tags:
        - customer
      produces:
        - application/json
      security:
        - Contactlab:
          - STORE_MANAGER
          - SALES_ASSOCIATE
      parameters:
        - $ref: '#/parameters/AuthorizationHeader' 
        - name: workspaceId
          in: path
          description: WorkspaceId selected
          type: string
          required: true      
        - name: customerId
          in: path
          description: Id of customer
          required: true
          type: string
        - name: page
          in: query
          description: Page number to retrive (starting from 0)
          required: false
          type: integer
        - name: size
          in: query
          description: Number of elements per page
          required: false
          type: integer
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/PagedCustomerEvent'
        401:
          description: Unauthorized          

  /workspaces/{workspaceId}/customers/{customerId}/invitations:
    post:
      summary: "[POST] Send invitation message"
      tags:
        - message
      description: Create a query based on the provided rule id to extract contents from repository.
      produces:
        - application/json
      security:
        - Contactlab:
          - STORE_MANAGER
          - SALES_ASSOCIATE
      parameters:
        - $ref: '#/parameters/AuthorizationHeader' 
        - name: workspaceId
          in: path
          description: WorkspaceId selected
          type: string
          required: true      
        - name: customerId
          in: path
          description: Id of customer
          required: true
          type: string
        - name: invitation
          in: body
          description: Invitation resource to be sent
          required: true
          schema:
            $ref: '#/definitions/InvitationSource'
      responses:
        202:
          description: OK
          schema:
            $ref: '#/definitions/MessageDelivery'
        401:
          description: Unauthorized
        404:
          description: Not Found
  
  /workspaces/{workspaceId}/conversations/customers:
    get:
      summary: "[GET] Customers conversations"
      tags:
        - conversation
      description: get all conversations for sa
      produces:
        - application/json
      security:
        - Contactlab:
          - STORE_MANAGER
          - SALES_ASSOCIATE
      parameters:
        - $ref: '#/parameters/AuthorizationHeader' 
        - name: workspaceId
          in: path
          description: WorkspaceId selected
          type: string
          required: true
        - name: Accept-Language
          in: header
          type: string
          description: Locale to use for retrieving resources
          required: false
        - name: threadByMedium
          in: query
          description: array of medium to filter customers
          required: false
          type: array
          items:
            type: string
            enum: [MESSENGER, LINE, TELEGRAM, WECHAT, EMAIL, SMS]
        - name: page
          in: query
          description: |
            Page number to retrive (starting from 0)
          required: false
          type: integer
        - name: size
          in: query
          description: |
            Number of elements per page
          required: false
          type: integer
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/PagedConversationCustomer'
        401:
          description: Unauthorized
  
  /workspaces/{workspaceId}/conversations/customers/{customerId}:
    get:
      summary: "[GET] Customer conversation"
      tags:
        - conversation
      description: get a customer and its threads
      produces:
        - application/json
      security:
        - Contactlab:
          - STORE_MANAGER
          - SALES_ASSOCIATE
      parameters:
        - $ref: '#/parameters/AuthorizationHeader' 
        - name: workspaceId
          in: path
          description: WorkspaceId selected
          type: string
          required: true
        - name: customerId
          in: path
          description: Id of customer
          required: true
          type: string
        - name: threadByMedium
          in: query
          description: array of medium to filter customers
          required: false
          type: array
          items:
            type: string
            enum: [MESSENGER, EMAIL, SMS, WECHAT, TELEGRAM, LINE]
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ConversationCustomer'
        401:
          description: Unauthorized
        404:
          description: Not Found
  
  /workspaces/{workspaceId}/conversations/customers/{customerId}/threads/{threadId}:
    get:
      summary: "[GET] Customer conversation thread"
      tags:
        - conversation
      description: get thread
      produces:
        - application/json
      security:
        - Contactlab:
          - STORE_MANAGER
          - SALES_ASSOCIATE
      parameters:
        - $ref: '#/parameters/AuthorizationHeader' 
        - name: workspaceId
          in: path
          description: WorkspaceId selected
          type: string
          required: true
        - name: customerId
          in: path
          description: customerId selected
          type: string
          required: true
        - name: threadId
          in: path
          description: ThreadId selected
          type: string
          required: true
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ConversationThread'
        401:
          description: Unauthorized
        404:
          description: Not Found
    
    patch:
      summary: "[PATCH] Customer conversation thread"
      tags:
        - conversation
      description: patch last read
      produces:
        - application/json
      security:
        - Contactlab:
          - STORE_MANAGER
          - SALES_ASSOCIATE
      parameters:
        - $ref: '#/parameters/AuthorizationHeader' 
        - name: workspaceId
          in: path
          description: WorkspaceId selected
          type: string
          required: true
        - name: customerId
          in: path
          description: customerId selected
          type: string
          required: true
        - name: threadId
          in: path
          description: ThreadId selected
          type: string
          required: true
        - name: threadSource
          in: body
          description: patch body with lastRead date
          required: true
          schema:
            type: object
            properties:
              lastRead:
                type: string
                format: date-time
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ConversationThread'
        401:
          description: Unauthorized
        404:
          description: Not Found

    delete:
      summary: "[DELETE] Customer conversation thread and all post associated"
      tags:
        - conversation
      description: delete thread
      produces:
        - application/json
      security:
        - Contactlab:
          - STORE_MANAGER
          - SALES_ASSOCIATE
      parameters:
        - $ref: '#/parameters/AuthorizationHeader'
        - name: workspaceId
          in: path
          description: WorkspaceId selected
          type: string
          required: true
        - name: customerId
          in: path
          description: customerId selected
          type: string
          required: true
        - name: threadId
          in: path
          description: ThreadId selected
          type: string
          required: true
      responses:
        204:
          description: OK
          schema:
            $ref: '#/definitions/ConversationThread'
        401:
          description: Unauthorized

  /workspaces/{workspaceId}/conversations/customers/{customerId}/threads/{threadId}/posts:
    get:
      summary: "[GET] Posts"
      tags:
        - conversation
      description: get all posts for thread
      produces:
        - application/json
      security:
        - Contactlab:
          - STORE_MANAGER
          - SALES_ASSOCIATE
      parameters:
        - $ref: '#/parameters/AuthorizationHeader' 
        - name: workspaceId
          in: path
          description: WorkspaceId selected
          type: string
          required: true
        - name: customerId
          in: path
          description: customerId selected
          type: string
          required: true
        - name: threadId
          in: path
          description: ThreadId selected
          type: string
          required: true
        - name: Accept-Language
          in: header
          type: string
          description: Locale to use for retrieving resources
          required: false
        - name: page
          in: query
          description: |
            Page number to retrive (starting from 0)
          required: false
          type: integer
        - name: size
          in: query
          description: |
            Number of elements per page
          required: false
          type: integer
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/PagedPost'
        401:
          description: Unauthorized
  
  /workspaces/{workspaceId}/configuration:
    get:
      summary: "[GET] Configuration"
      tags:
        - configuration
      description: Returns configuration for the company associated to current user
      produces:
        - application/json
      security:
        - Contactlab:
          - CUSTOMER_CARE
          - BACKEND_USER
          - STORE_MANAGER
          - SALES_ASSOCIATE
      parameters:
        - $ref: '#/parameters/AuthorizationHeader' 
        - name: workspaceId
          in: path
          description: WorkspaceId selected
          type: string
          required: true
        - name: Contactone-Application
          in: header
          description: Contactone client application uid (provided by Contatctlab)
          required: true
          type: string
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/CompanyAndApplicationConfiguration'
        400:
          description: Bad Request
        401:
          description: Unauthorized
        404:
          description: Not Found

  /workspaces/{workspaceId}/configurations/media/email:
    post:
      summary: "[POST] Email configuration"
      tags:
        - configuration
      description: Create email configuration.
      produces:
        - application/json
      security:
        - Contactlab:
          - BACKEND_USER
      parameters:
        - $ref: '#/parameters/AuthorizationHeader' 
        - name: workspaceId
          in: path
          description: WorkspaceId selected
          type: string
          required: true      
        - name: emailConf
          in: body
          description: Email configuration
          required: true
          schema:
            $ref: '#/definitions/EmailConfigurationSource'
      responses:
        201:
          description: OK
          schema:
            $ref: '#/definitions/EmailConfiguration'
        401:
          description: Unauthorized
        400:
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResource'
          
    get:
      summary: "[GET] Email configuration"
      tags:
        - configuration
      description: Returns configuration for email
      produces:
        - application/json
      security:
        - Contactlab:
          - BACKEND_USER
      parameters:
        - $ref: '#/parameters/AuthorizationHeader' 
        - name: workspaceId
          in: path
          description: WorkspaceId selected
          type: string
          required: true
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/EmailConfiguration'
        400:
          description: Bad Request
        401:
          description: Unauthorized
        404:
          description: Not Found

    delete:
      summary: "[DELETE] Email configuration"
      tags:
        - configuration
      description: Delete the Email configuration
      produces:
        - application/json
      security:
        - Contactlab:
          - BACKEND_USER
      parameters:
        - $ref: '#/parameters/AuthorizationHeader' 
        - name: workspaceId
          in: path
          description: WorkspaceId selected
          type: string
          required: true
      responses:
        204:
          description: Successful response.
        401:
          description: Unauthorized
        404:
          description: Email configuration not found for the given workspace


  /workspaces/{workspaceId}/configurations/media/sms:
    post:
      summary: "[POST] Sms configuration"
      tags:
        - configuration
      description: Create sms configuration.
      produces:
        - application/json
      security:
        - Contactlab:
          - BACKEND_USER
      parameters:
        - $ref: '#/parameters/AuthorizationHeader' 
        - name: workspaceId
          in: path
          description: WorkspaceId selected
          type: string
          required: true
        - name: smsConf
          in: body
          description: Sms configuration
          required: true
          schema:
            $ref: '#/definitions/SmsConfigurationSource'
      responses:
        201:
          description: OK
          schema:
            $ref: '#/definitions/SmsConfiguration'
        401:
          description: Unauthorized
        400:
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResource'

    get:
      summary: "[GET] Sms configuration"
      tags:
        - configuration
      description: Returns configuration for sms
      produces:
        - application/json
      security:
        - Contactlab:
          - BACKEND_USER
      parameters:
        - $ref: '#/parameters/AuthorizationHeader' 
        - name: workspaceId
          in: path
          description: WorkspaceId selected
          type: string
          required: true
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/SmsConfiguration'
        400:
          description: Bad Request
        401:
          description: Unauthorized
        404:
          description: Not Found

    delete:
      summary: "[DELETE] Sms configuration"
      tags:
        - configuration
      description: Delete the sms configuration
      produces:
        - application/json
      security:
        - Contactlab:
          - BACKEND_USER
      parameters:
        - $ref: '#/parameters/AuthorizationHeader' 
        - name: workspaceId
          in: path
          description: WorkspaceId selected
          type: string
          required: true
      responses:
        204:
          description: Successful response.
        401:
          description: Unauthorized
        404:
          description: Sms configuration not found for the given workspace


  /workspaces/{workspaceId}/configurations/media/messenger:
    post:
      summary: "[POST] Messenger configuration"
      tags:
        - configuration
      description: Create messenger configuration.
      produces:
        - application/json
      security:
        - Contactlab:
          - BACKEND_USER
      parameters:
        - $ref: '#/parameters/AuthorizationHeader' 
        - name: workspaceId
          in: path
          description: WorkspaceId selected
          type: string
          required: true
        - name: messengerConf
          in: body
          description: Messenger configuration
          required: true
          schema:
            $ref: '#/definitions/MessengerConfigurationSource'
      responses:
        201:
          description: OK
          schema:
            $ref: '#/definitions/MessengerConfiguration'
        401:
          description: Unauthorized
        400:
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResource'

    get:
      summary: "[GET] Messenger configuration"
      tags:
        - configuration
      description: Returns configuration for messenger
      produces:
        - application/json
      security:
        - Contactlab:
          - BACKEND_USER
      parameters:
        - $ref: '#/parameters/AuthorizationHeader' 
        - name: workspaceId
          in: path
          description: WorkspaceId selected
          type: string
          required: true
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/MessengerConfiguration'
        400:
          description: Bad Request
        401:
          description: Unauthorized
        404:
          description: Not Found

    delete:
      summary: "[DELETE] Messenger configuration"
      tags:
        - configuration
      description: Delete the Messenger configuration
      produces:
        - application/json
      security:
        - Contactlab:
          - BACKEND_USER
      parameters:
        - $ref: '#/parameters/AuthorizationHeader' 
        - name: workspaceId
          in: path
          description: WorkspaceId selected
          type: string
          required: true
      responses:
        204:
          description: Successful response.
        401:
          description: Unauthorized
        404:
          description: Messenger configuration not found for the given workspace

  /workspaces/{workspaceId}/configurations/media/wechat:
    post:
      summary: "[POST] WeChat configuration"
      tags:
        - configuration
      description: Endpoint to create the WeChat configuration for workspace
      produces:
        - application/json
      security:
        - Contactlab:
          - BACKEND_USER
      parameters:
        - $ref: '#/parameters/AuthorizationHeader' 
        - name: workspaceId
          in: path
          description: WorkspaceId selected
          type: string
          required: true
        - name: WeChat configuration
          in: body
          description: WeChat configuration resource to be created
          required: true
          schema:
            $ref: '#/definitions/WeChatConfigurationSource'
      responses:
        201:
          description: Successful creation of the WeChat configuration
          schema:
            $ref: "#/definitions/WeChatConfiguration"
        400:
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResource'
        401:
          description: Unauthorized

    get:
      summary: "[GET] WeChat configuration"
      tags:
        - configuration
      description: Get the WeChat configuration for workspace
      produces:
        - application/json
      security:
        - Contactlab:
          - BACKEND_USER
      parameters:
        - $ref: '#/parameters/AuthorizationHeader' 
        - name: workspaceId
          in: path
          description: WorkspaceId selected
          type: string
          required: true
      responses:
        200:
          description: Successful response
          schema:
            $ref: "#/definitions/WeChatConfiguration"
        401:
          description: Unauthorized
        404:
          description: Not found

    delete:
      summary: "[DELETE] WeChat configuration"
      tags:
        - configuration
      description: Delete the WeChat configuration for workspace
      produces:
        - application/json
      security:
        - Contactlab:
          - BACKEND_USER
      parameters:
        - $ref: '#/parameters/AuthorizationHeader' 
        - name: workspaceId
          in: path
          description: WorkspaceId selected
          type: string
          required: true
      responses:
        204:
          description: Successful response
        401:
          description: Unauthorized
        404:
          description: Not found

  /workspaces/{workspaceId}/templates:
    get:
      summary: "[GET] Templates"
      description: |
        Get available templates. This may optionally be queried to retrieve templates supporting specific ContentTypeId(s) with an optional  cardinality (minumum number of ContentTypeId occurrences)
      tags:
        - template
      produces:
        - application/json
      security:
        - Contactlab:
          - STORE_MANAGER
          - SALES_ASSOCIATE
      parameters:
        - $ref: '#/parameters/AuthorizationHeader' 
        - name: workspaceId
          in: path
          description: WorkspaceId selected
          type: string
          required: true
        - name: Accept-Language
          in: header
          type: string
          description: Locale to use for retrieving resources
          required: false
        - name: page
          in: query
          description: |
            Page number to retrive (starting from 0)
          required: false
          type: integer
        - name: size
          in: query
          description: |
            Number of elements per page
          required: false
          type: integer
        - name: primary
          in: query
          description: Flag to filter templates to show on the main page
          required: false
          type: boolean
        - name: supportedLocale
          in: query
          description: Language to filter templates by
          type: string
          required: false
        - name: collection
          in: query
          description: Collection to filter templates by
          type: string
          required: false
        - name: medium
          in: query
          description: Language to filter templates by
          required: false
          type: array
          items:
            type: string
            enum: [EMAIL, SMS, MESSENGER, WECHAT, TELEGRAM, LINE]
        - name: supportedContents
          in: query
          description: |
            ContentTypesIds and cardinality for filtering templates.
             **e.g:**

                -supportedContents=com.contactlab.product+3,com.contactlab.event
                -supportedContents=com.contactlab.product
          required: false
          type: array
          items:
            type: string
        - name: supportedInputs
          in: query
          description: |
            supportedInputs and cardinality for filtering templates.
             **e.g:**

                supportedInputs=INPUT_TEXT+3,INPUT_NUMBER
          required: false
          type: array
          items:
            type: string
      responses:
        200:
          description: Successful response
          schema:
            $ref: "#/definitions/PagedTemplate"
        401:
          description: Unauthorized

  /workspaces/{workspaceId}/templates/{id}:
    get:
      summary: "[GET] Template"
      tags:
        - template
      description: |
        Gets `Template` object by id.
      produces:
        - application/json
      security:
        - Contactlab:
          - STORE_MANAGER
          - SALES_ASSOCIATE
      parameters:
        - $ref: '#/parameters/AuthorizationHeader' 
        - name: workspaceId
          in: path
          description: WorkspaceId selected
          type: string
          required: true
        - name: id
          in: path
          description: |
            id of the template to be retrieved
          required: true
          type: string
        - name: Accept-Language
          in: header
          type: string
          description: Locale to use for retrieving resources
          required: false
      responses:
        200:
          description: Successful response
          schema:
            $ref: "#/definitions/Template"
        401:
          description: Unauthorized
        404:
          description: Template not found

  /workspaces/{workspaceId}/messages:
    get:
      summary: "[GET] Messages"
      tags:
        - message
      description: |
        Returns a collection of messages created so far.
      produces:
        - application/json
      security:
        - Contactlab:
          - STORE_MANAGER
          - SALES_ASSOCIATE
      parameters:
        - $ref: '#/parameters/AuthorizationHeader' 
        - name: workspaceId
          in: path
          description: WorkspaceId selected
          type: string
          required: true
        - name: Accept-Language
          in: header
          type: string
          description: Locale to use for retrieving resources
          required: false
        - name: page
          in: query
          description: |
            Page number to retrive (starting from 0)
          required: false
          type: integer
        - name: size
          in: query
          description: |
            Number of elements per page
          required: false
          type: integer
        - name: user
          in: query
          description: |
            User id to filter message creator
          required: false
          type: string
        - name: customer
          in: query
          description: |
            Id of the customer to filter messages sent to customer
          required: false
          type: string

      responses:
        200:
          description: Successful response
          schema:
            $ref: "#/definitions/PagedMessage"
        401:
          description: Unauthorized
        404:
          description: Customer or user not found

    post:
      summary: "[POST] Message"
      tags:
        - message
      description: Endpoint to create a message
      produces:
        - application/json
      security:
        - Contactlab:
          - STORE_MANAGER
          - SALES_ASSOCIATE
      parameters:
        - $ref: '#/parameters/AuthorizationHeader' 
        - name: workspaceId
          in: path
          description: WorkspaceId selected
          type: string
          required: true
        - name: Accept-Language
          in: header
          type: string
          description: Locale to use for retrieving resources
          required: false
        - name: message
          in: body
          description: Message resource to be created
          required: true
          schema:
            $ref: '#/definitions/MessageSource'
      responses:
        201:
          description: Successful creation of the Message
          schema:
            $ref: "#/definitions/Message"
        400:
          description: Message content rules does not match template selected
        401:
          description: Unauthorized

  /workspaces/{workspaceId}/messages/{id}:
    get:
      summary: "[GET] Message"
      tags:
        - message
      description: Get the message resource
      produces:
        - application/json
      security:
        - Contactlab:
          - STORE_MANAGER
          - SALES_ASSOCIATE
      parameters:
        - $ref: '#/parameters/AuthorizationHeader' 
        - name: workspaceId
          in: path
          description: WorkspaceId selected
          type: string
          required: true
        - name: id
          in: path
          description: |
            Id of the message blueprint to show
          required: true
          type: string
        - name: Accept-Language
          in: header
          type: string
          description: Locale to use for retrieving resources
          required: false
        - name: outputType
          in: header
          description: |
            outputType of the messageoutput. (Should be supported by template selected)
          required: false
          type: string
      responses:
        200:
          description: Successful response.
          schema:
            $ref: "#/definitions/Message"
        400:
          description: Bad request (output type not supported)
        401:
          description: Unauthorized
        404:
          description: Message not found for the given workspace

    delete:
      summary: "[DELETE] Message"
      tags:
        - message
      description: Delete the message
      produces:
        - application/json
      security:
        - Contactlab:
          - STORE_MANAGER
          - SALES_ASSOCIATE
      parameters:
        - $ref: '#/parameters/AuthorizationHeader' 
        - name: workspaceId
          in: path
          description: WorkspaceId selected
          type: string
          required: true
        - name: id
          in: path
          description: |
            Id of the message
          required: true
          type: string
      responses:
        204:
          description: Successful response.
        401:
          description: Unauthorized
        404:
          description: Message not found for the given workspace

  /workspaces/{workspaceId}/messages/{id}/previews:
    get:
      summary: "[GET] Previews"
      tags:
        - message
      description: Get previews
      produces:
        - application/json
      security:
        - Contactlab:
          - STORE_MANAGER
          - SALES_ASSOCIATE
      parameters:
        - $ref: '#/parameters/AuthorizationHeader' 
        - name: workspaceId
          in: path
          description: WorkspaceId selected
          type: string
          required: true
        - name: id
          in: path
          description: |
            Id of the message
          required: true
          type: string
        - name: outputType
          in: query
          description: |
            outputType of the message output. (Should be supported by template selected)
          required: false
          type: string
        - name: page
          in: query
          description: |
            Page number to retrive (starting from 0)
          required: false
          type: integer
        - name: size
          in: query
          description: |
            Number of elements per page
          required: false
          type: integer
        - name: Accept-Language
          in: header
          type: string
          description: Locale to use for retrieving resources
          required: false
      responses:
        200:
          description: Successful response.
          schema:
            $ref: "#/definitions/PagedMessageBlueprint"
        401:
          description: Unauthorized
        404:
          description: Message or message instance not found

  /workspaces/{workspaceId}/messages/{id}/instances/{instanceId}/preview:
    get:
      summary: "[GET] Preview"
      tags:
        - message
      description: Get preview
      produces:
        - application/json
      security:
        - Contactlab:
          - STORE_MANAGER
          - SALES_ASSOCIATE
      parameters:
        - $ref: '#/parameters/AuthorizationHeader' 
        - name: workspaceId
          in: path
          description: WorkspaceId selected
          type: string
          required: true
        - name: id
          in: path
          description: |
            Id of the message
          required: true
          type: string
        - name: instanceId
          in: path
          description: |
            Id of the message instance
          required: true
          type: string
        - name: outputType
          in: query
          description: |
            outputType of the message output. (Should be supported by selected template)
          required: false
          type: string
        - name: Accept-Language
          in: header
          type: string
          description: Locale to use for retrieving resources
          required: false
      responses:
        200:
          description: Successful response.
          schema:
            $ref: "#/definitions/MessageBlueprint"
        401:
          description: Unauthorized
        404:
          description: Message or message instance not found

  /workspaces/{workspaceId}/messages/{id}/deliveries:
    post:
      summary: "[POST] Delivery"
      tags:
        - message
      description: Endpoint to deliver a message
      produces:
        - application/json
      security:
        - Contactlab:
          - STORE_MANAGER
          - SALES_ASSOCIATE
      parameters:
        - $ref: '#/parameters/AuthorizationHeader' 
        - name: workspaceId
          in: path
          description: WorkspaceId selected
          type: string
          required: true
        - name: id
          in: path
          description: |
            Id of message
          required: true
          type: string
        - name: Accept-Language
          in: header
          type: string
          description: Locale to use for retrieving resources
          required: false
        - name: deliverySource
          in: body
          description: Message resource to be sent
          required: true
          schema:
            $ref: '#/definitions/DeliverySource'
      responses:
        202:
          description: Request for sending the Message
          schema:
            $ref: "#/definitions/MessageDelivery"
        401:
          description: Unauthorized
    get:
      summary: "[GET] Deliveries"
      tags:
        - message
      description: Get list of deliveries for the message
      produces:
        - application/json
      security:
        - Contactlab:
          - STORE_MANAGER
          - SALES_ASSOCIATE
      parameters:
        - $ref: '#/parameters/AuthorizationHeader' 
        - name: workspaceId
          in: path
          description: WorkspaceId selected
          type: string
          required: true
        - name: id
          in: path
          description: |
            Id of the message
          required: true
          type: string
        - name: Accept-Language
          in: header
          type: string
          description: Locale to use for retrieving resources
          required: false
        - name: page
          in: query
          description: |
            Page number to retrive (starting from 0)
          required: false
          type: integer
        - name: size
          in: query
          description: |
            Number of elements per page
          required: false
          type: integer
      responses:
        200:
          description: Successful response.
          schema:
            $ref: "#/definitions/PagedMessageDelivery"
        401:
          description: Unauthorized

  /workspaces/{workspaceId}/messages/{id}/deliveries/{deliveryId}:
    get:
      summary: "[GET] Delivery"
      tags:
        - message
      description: Get delivery
      produces:
        - application/json
      security:
        - Contactlab:
          - STORE_MANAGER
          - SALES_ASSOCIATE
      parameters:
        - $ref: '#/parameters/AuthorizationHeader' 
        - name: workspaceId
          in: path
          description: WorkspaceId selected
          type: string
          required: true
        - name: id
          in: path
          description: |
            Id of the message
          required: true
          type: string
        - name: deliveryId
          in: path
          description: |
            Id of the delivery
          required: true
          type: string
        - name: Accept-Language
          in: header
          type: string
          description: Locale to use for retrieving resources
          required: false
      responses:
        200:
          description: Successful response.
          schema:
            $ref: "#/definitions/MessageDelivery"
        401:
          description: Unauthorized
        404:
          description: Delivery not found for the given message

    delete:
      summary: "[DELETE] Delivery"
      tags:
        - message
      description: Get previews
      produces:
        - application/json
      security:
        - Contactlab:
          - STORE_MANAGER
          - SALES_ASSOCIATE
      parameters:
        - $ref: '#/parameters/AuthorizationHeader' 
        - name: workspaceId
          in: path
          description: WorkspaceId selected
          type: string
          required: true
        - name: id
          in: path
          description: |
            Id of the message
          required: true
          type: string
        - name: deliveryId
          in: path
          description: |
            Id of the delivery
          required: true
          type: string
        - name: Accept-Language
          in: header
          type: string
          description: Locale to use for retrieving resources
          required: false
      responses:
        204:
          description: Successful response.
        401:
          description: Unauthorized
        404:
          description: Delivery or message not found

  /workspaces/{workspaceId}/emails:
    get:
      summary: "[GET] Sent emails"
      description: Returns a list of sent emails
      tags:
        - message
      produces:
        - application/json
      security:
        - Contactlab:
          - STORE_MANAGER
          - SALES_ASSOCIATE
      parameters:
        - $ref: '#/parameters/AuthorizationHeader' 
        - name: workspaceId
          in: path
          description: WorkspaceId selected
          type: string
          required: true
        - name: customerId
          in: query
          description: filter emails by customer
          required: false
          type: string
        - name: expand
          in: query
          description: If present, the field template is populated. By default the field template is empty.
          required: false
          type: string
          enum: ["template"]     
        - name: page
          in: query
          description: Page number to retrive (starting from 0)
          required: false
          type: integer
        - name: size
          in: query
          description: Number of elements per page
          required: false
          type: integer
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/PagedSentEmail'
        401:
          description: Unauthorized


  /workspaces/{workspaceId}/channels:
    get:
      summary: "[GET] Channels"
      tags:
        - news
      description: Get list of channel
      produces:
        - application/json
      security:
        - Contactlab:
          - STORE_MANAGER
          - SALES_ASSOCIATE
      parameters:
        - $ref: '#/parameters/AuthorizationHeader' 
        - name: workspaceId
          in: path
          description: Id of workspace
          required: true
          type: string
        - name: hasFeed
          in: query
          description: If true, returns only channels with some feed associated. If false or null returns all channels
          required: false
          type: boolean
        - name: page
          in: query
          description: |
            Page number to retrive (starting from 0)
          required: false
          type: integer
        - name: size
          in: query
          description: |
            Number of elements per page
          required: false
          type: integer
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/PagedChannel'
        401:
          description: Unauthorized
        404:
          description: Not Found

  /workspaces/{workspaceId}/channels/{channel}:
    get:
      summary: "[GET] Channel"
      tags:
        - news
      description: get channel
      produces:
        - application/json
      security:
        - Contactlab:
          - STORE_MANAGER
          - SALES_ASSOCIATE
      parameters:
        - $ref: '#/parameters/AuthorizationHeader' 
        - name: workspaceId
          in: path
          description: WorkspaceId selected
          type: string
          required: true
        - name: channel
          in: path
          description: channel key
          required: true
          type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Channel'
        401:
          description: Unauthorized
        404:
          description: Not Found

  /workspaces/{workspaceId}/channels/{channel}/news:
    get:
      summary: "[GET] News list"
      tags:
        - news
      description: Get list of news
      produces:
        - application/json
      security:
        - Contactlab:
          - STORE_MANAGER
          - SALES_ASSOCIATE
      parameters:
        - $ref: '#/parameters/AuthorizationHeader' 
        - name: workspaceId
          in: path
          description: Id of workspace
          required: true
          type: string
        - name: channel
          in: path
          description: channel key
          required: true
          type: string
        - name: language
          in: query
          description: If specified, returns all news that are available in that language and all news that have relevant field set to true. If not specified, returns all news that are in english and all news that have relevant field set to true.
          required: false
          type: string
        - name: page
          in: query
          description: |
            Page number to retrive (starting from 0)
          required: false
          type: integer
        - name: size
          in: query
          description: |
            Number of elements per page
          required: false
          type: integer
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/PagedNews'
        401:
          description: Unauthorized
        404:
          description: Not Found

  /workspaces/{workspaceId}/channels/{channel}/news/{id}:
    get:
      summary: "[GET] News"
      tags:
        - news
      description: get news
      produces:
        - application/json
      security:
        - Contactlab:
          - STORE_MANAGER
          - SALES_ASSOCIATE
      parameters:
        - $ref: '#/parameters/AuthorizationHeader' 
        - name: workspaceId
          in: path
          description: WorkspaceId selected
          type: string
          required: true
        - name: channel
          in: path
          description: channel key
          required: true
          type: string
        - name: id
          in: path
          description: Id of news
          required: true
          type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/News'
        401:
          description: Unauthorized
        404:
          description: Not Found

  /workspaces/{workspaceId}/channels/{channel}/news/{id}/likes:
    post:
      summary: "[POST] Like"
      tags:
        - news
      description: add one like on news
      produces:
        - application/json
      security:
        - Contactlab:
          - STORE_MANAGER
          - SALES_ASSOCIATE
      parameters:
        - $ref: '#/parameters/AuthorizationHeader' 
        - name: workspaceId
          in: path
          description: WorkspaceId selected
          type: string
          required: true
        - name: channel
          in: path
          description: channel key
          required: true
          type: string
        - name: id
          in: path
          description: Id of news
          required: true
          type: string
        - name: newsLike
          in: body
          required: true
          schema:
            $ref: '#/definitions/NewsLikeSource'
      responses:
        201:
          description: OK
          schema:
            $ref: '#/definitions/Like'
        401:
          description: Unauthorized
        404:
          description: Not Found

  /workspaces/{workspaceId}/channels/{channel}/news/{id}/likes/{likeId}:
    delete:
      summary: "[DELETE] Like"
      tags:
        - news
      description: remove like on news
      produces:
        - application/json
      security:
        - Contactlab:
          - STORE_MANAGER
          - SALES_ASSOCIATE
      parameters:
        - $ref: '#/parameters/AuthorizationHeader' 
        - name: workspaceId
          in: path
          description: WorkspaceId selected
          type: string
          required: true
        - name: channel
          in: path
          description: channel key
          required: true
          type: string
        - name: id
          in: path
          description: Id of news
          required: true
          type: string
        - name: likeId
          in: path
          description: Id of like
          required: true
          type: string
      responses:
        204:
          description: OK
        401:
          description: Unauthorized
        404:
          description: Not Found

  /workspaces/{workspaceId}/collections:
    get:
      summary: "[GET] Collections"
      tags:
        - collection
      description: Gets `Collections` for the workspace
      produces:
        - application/json
      security:
        - Contactlab:
          - STORE_MANAGER
          - SALES_ASSOCIATE
      parameters:
        - $ref: '#/parameters/AuthorizationHeader' 
        - name: workspaceId
          in: path
          description: id of the workspace
          required: true
          type: string
        - name: Accept-Language
          in: header
          type: string
          description: Locale to use for retrieving resources
          required: false
        - name: supportedLocale
          in: query
          description: Language to filter collections
          type: string
          required: false
        - name: page
          in: query
          description: |
            Page number to retrive (starting from 0)
          required: false
          type: integer
        - name: size
          in: query
          description: |
            Number of elements per page
          required: false
          type: integer
      responses:
        200:
          description: Successful response
          schema:
            $ref: "#/definitions/PagedCollection"
        401:
          description: Unauthorized

  /images/{imageId}:
    get:
      summary: "[GET] Image"
      tags:
        - image
      description: Gets image
      produces:
        - application/json
      parameters:
        - name: imageId
          in: path
          description: id of the image
          required: true
          type: string
        - name: Accept-Language
          in: header
          type: string
          description: Locale to use for retrieving resources
          required: false
        - name: width
          in: query
          type: string
          required: false
        - name: height
          in: query
          type: string
          required: false
      responses:
        200:
          description: Successful response
          schema:
            $ref: "#/definitions/Image"
        401:
          description: Unauthorized

  /workspaces/{workspaceId}/images:
    post:
      summary: "[POST] Image"
      tags:
        - image
      description: Upload image
      produces:
        - application/json
      consumes:
        - multipart/form-data
      security:
        - Contactlab:
          - STORE_MANAGER
          - SALES_ASSOCIATE
      parameters:
        - $ref: '#/parameters/AuthorizationHeader' 
        - name: Accept-Language
          in: header
          type: string
          description: Locale to use for retrieving resources
          required: false
        - name: workspaceId
          in: path
          description: id of the workspace
          required: true
          type: string
        - name: file
          in: formData
          description: file
          required: true
          type: file
      responses:
        200:
          description: Successful response
          schema:
            $ref: "#/definitions/LightImage"
        401:
          description: Unauthorized

  /workspaces/{workspaceId}/images/{imageName}:
    delete:
      summary: "[DELETE] Image"
      tags:
        - image
      description: remove image
      produces:
        - application/json
      security:
        - Contactlab:
          - SALES_ASSOCIATE
      parameters:
        - $ref: '#/parameters/AuthorizationHeader' 
        - name: workspaceId
          in: path
          description: WorkspaceId selected
          type: string
          required: true
        - name: imageName
          in: path
          description: Name of the image
          required: true
          type: string
      responses:
        204:
          description: OK
        401:
          description: Unauthorized
        404:
          description: Not Found

  /users:
    get:
      summary: "[GET] Users"
      tags:
        - user
      description: get users
      produces:
        - application/json
      security:
        - Contactlab:
          - CUSTOMER_CARE
          - STORE_MANAGER
      parameters:
        - $ref: '#/parameters/AuthorizationHeader' 
        - name: page
          in: query
          description: |
            Page number to retrive (starting from 0)
          required: false
          type: integer
        - name: size
          in: query
          description: |
            Number of elements per page
          required: false
          type: integer
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/PagedUser'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found

    post:
      summary: "[POST] User"
      tags:
        - user
      description: Enpoint to create a user
      consumes:
        - application/json
      produces:
        - application/json
      security:
        - Contactlab:
          - CUSTOMER_CARE
      parameters:
        - $ref: '#/parameters/AuthorizationHeader' 
        - name: user
          in: body
          description: User resource to be created
          required: true
          schema:
            $ref: '#/definitions/UserSource'
      responses:
        201:
          description: Successful creation of the User
          schema:
            $ref: "#/definitions/User"
        400:
          description: Bad Request
        401:
          description: Unauthorized
        403:
          description: Forbidden
        409:
          description: Conflict

  /users/{userId}:
    get:
      summary: "[GET] User"
      tags:
        - user
      description: get user
      produces:
        - application/json
      security:
        - Contactlab:
          - CUSTOMER_CARE
          - STORE_MANAGER
      parameters:
        - $ref: '#/parameters/AuthorizationHeader' 
        - name: userId
          in: path
          description: Id of user
          required: true
          type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/User'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found

    delete:
      summary: "[DELETE] User"
      tags:
        - user
      description: delete user
      produces:
        - application/json
      security:
        - Contactlab:
          - CUSTOMER_CARE
      parameters:
        - $ref: '#/parameters/AuthorizationHeader' 
        - name: userId
          in: path
          description: Id of user
          required: true
          type: string
      responses:
        204:
          description: OK
        401:
          description: Unauthorized
        403:
          description: Forbidden

  /workspaces/{workspaceId}/chatroomInvitations:
    post:
      summary: "[POST] Chatroom invitations"
      tags:
        - chat
      description: Get links and qrcodes for chatrooms
      produces:
        - application/json
      consumes:
        - application/json
      security:
        - Contactlab:
          - STORE_MANAGER
          - SALES_ASSOCIATE
      parameters:
        - $ref: '#/parameters/AuthorizationHeader' 
        - name: Accept-Language
          in: header
          type: string
          description: Locale to use for retrieving resources
          required: false
        - name: workspaceId
          in: path
          description: id of the workspace
          required: true
          type: string
        - name: chatroomInvitationSource
          in: body
          description: chatroom invitation source
          required: true
          schema:
            $ref: '#/definitions/ChatroomInvitationSource'
      responses:
        201:
          description: Successful response
          schema:
            $ref: "#/definitions/ChatroomInvitations"
        400:
          description: Bad request
        401:
          description: Unauthorized

  /integrations/facebook:
    get:
      summary: "[GET] Facebook integration"
      tags:
        - facebook
      description: Endpoint to get facebook api information
      produces:
        - application/json
      security:
        - Contactlab:
          - BACKEND_USER
      parameters:
        - $ref: '#/parameters/AuthorizationHeader' 
      responses:
        200:
          description: Successful response
          schema:
            $ref: "#/definitions/FacebookInfo"

  /companies:
    get:
      summary: "[GET] Companies"
      tags:
        - company
      description: Endpoint to get companies
      produces:
        - application/json
      security:
        - Contactlab:
          - CUSTOMER_CARE
      parameters:
        - $ref: '#/parameters/AuthorizationHeader' 
        - name: page
          in: query
          description: |
            Page number to retrive (starting from 0)
          required: false
          type: integer
        - name: size
          in: query
          description: |
            Number of elements per page
          required: false
          type: integer
      responses:
        200:
          description: Successful response
          schema:
            $ref: "#/definitions/PagedCompany"
        401:
          description: Unauthorized
        403:
          description: Forbidden

    post:
      summary: "[POST] Company"
      tags:
        - company
      description: Endpoint to create company
      produces:
        - application/json
      consumes:
        - application/json
      security:
        - Contactlab:
          - CUSTOMER_CARE
      parameters:
        - $ref: '#/parameters/AuthorizationHeader' 
        - name: companySource
          in: body
          description: company source
          required: true
          schema:
            $ref: '#/definitions/CompanySource'
      responses:
        201:
          description: Successful response
          schema:
            $ref: "#/definitions/Company"
        400:
          description: Bad request
        401:
          description: Unauthorized
        403:
          description: Forbidden

  /companies/{companyId}:
    get:
      summary: "[GET] Company"
      tags:
        - company
      description: Endpoint to get company
      produces:
        - application/json
      security:
        - Contactlab:
          - CUSTOMER_CARE
      parameters:
        - $ref: '#/parameters/AuthorizationHeader' 
        - name: companyId
          in: path
          description: company id
          required: true
          type: string
      responses:
        200:
          description: Successful response
          schema:
            $ref: "#/definitions/Company"
        401:
          description: Unauthorized
        403:
          description: Forbidden

    patch:
      summary: "[PATCH] Company"
      tags:
        - company
      description: Endpoint to update company
      produces:
        - application/json
      consumes:
        - application/json
      security:
        - Contactlab:
          - CUSTOMER_CARE
      parameters:
        - $ref: '#/parameters/AuthorizationHeader' 
        - name: companyId
          in: path
          description: company id
          required: true
          type: string
        - name: companyPatchSource
          in: body
          description: company patch source
          required: true
          schema:
            $ref: '#/definitions/CompanyPatchSource'
      responses:
        200:
          description: Successful response
          schema:
            $ref: "#/definitions/Company"
        400:
          description: Bad request
        401:
          description: Unauthorized
        403:
          description: Forbidden

    delete:
      summary: "[DELETE] Company"
      tags:
        - company
      description: Endpoint to delete company
      produces:
        - application/json
      consumes:
        - application/json
      security:
        - Contactlab:
          - CUSTOMER_CARE
      parameters:
        - $ref: '#/parameters/AuthorizationHeader' 
        - name: companyId
          in: path
          description: company id
          required: true
          type: string
      responses:
        204:
          description: Successful response
        400:
          description: Bad request
        401:
          description: Unauthorized
        403:
          description: Forbidden

  /workspaces/{workspaceId}/stores:
    get:
      summary: "[GET] Stores"
      tags:
        - store
      description: Endpoint to get stores for workspace
      produces:
        - application/json
      security:
        - Contactlab:
          - CUSTOMER_CARE
          - BACKEND_USER
      parameters:
        - $ref: '#/parameters/AuthorizationHeader' 
        - name: workspaceId
          in: path
          description: workspace id
          required: true
          type: string
        - name: page
          in: query
          description: |
            Page number to retrive (starting from 0)
          required: false
          type: integer
        - name: size
          in: query
          description: |
            Number of elements per page
          required: false
          type: integer
      responses:
        200:
          description: Successful response
          schema:
            $ref: "#/definitions/PagedStore"
        401:
          description: Unauthorized
        403:
          description: Forbidden

    post:
      summary: "[POST] Store"
      tags:
        - store
      description: Endpoint to create store for workspace
      produces:
        - application/json
      consumes:
        - application/json
      security:
        - Contactlab:
          - CUSTOMER_CARE
          - BACKEND_USER
      parameters:
        - $ref: '#/parameters/AuthorizationHeader' 
        - name: workspaceId
          in: path
          description: workspace id
          required: true
          type: string
        - name: storeSource
          in: body
          description: store source
          required: true
          schema:
            $ref: '#/definitions/StoreSource'
      responses:
        201:
          description: Successful response
          schema:
            $ref: "#/definitions/Store"
        400:
          description: Bad request
        401:
          description: Unauthorized
        403:
          description: Forbidden

  /workspaces/{workspaceId}/stores/{storeId}:
    get:
      summary: "[GET] Store"
      tags:
        - store
      description: Endpoint to get company
      produces:
        - application/json
      security:
        - Contactlab:
          - CUSTOMER_CARE
          - BACKEND_USER
      parameters:
        - $ref: '#/parameters/AuthorizationHeader' 
        - name: workspaceId
          in: path
          description: workspace id
          required: true
          type: string
        - name: storeId
          in: path
          description: store id
          required: true
          type: string
      responses:
        200:
          description: Successful response
          schema:
            $ref: "#/definitions/Store"
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not found

    patch:
      summary: "[PATCH] Store"
      tags:
        - store
      description: Endpoint to update store
      produces:
        - application/json
      consumes:
        - application/json
      security:
        - Contactlab:
          - CUSTOMER_CARE
          - BACKEND_USER
      parameters:
        - $ref: '#/parameters/AuthorizationHeader' 
        - name: workspaceId
          in: path
          description: workspace id
          required: true
          type: string
        - name: storeId
          in: path
          description: store id
          required: true
          type: string
        - name: storePatchSource
          in: body
          description: store patch source
          required: true
          schema:
            $ref: '#/definitions/StorePatchSource'
      responses:
        200:
          description: Successful response
          schema:
            $ref: "#/definitions/Store"
        400:
          description: Bad request
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not found

    delete:
      summary: "[DELETE] Store"
      tags:
        - store
      description: Endpoint to delete store
      produces:
        - application/json
      consumes:
        - application/json
      security:
        - Contactlab:
          - CUSTOMER_CARE
          - BACKEND_USER
      parameters:
        - $ref: '#/parameters/AuthorizationHeader' 
        - name: workspaceId
          in: path
          description: workspace id
          required: true
          type: string
        - name: storeId
          in: path
          description: store id
          required: true
          type: string
      responses:
        204:
          description: Successful response
        400:
          description: Bad request
        401:
          description: Unauthorized
        403:
          description: Forbidden

  /registries:
    get:
      summary: "[GET] Registries"
      tags:
        - registry
      description: Endpoint to get registries
      consumes:
        - application/json
      security:
        - Contactlab:
          - CUSTOMER_CARE
      parameters:
        - $ref: '#/parameters/AuthorizationHeader' 
        - name: page
          in: query
          description: |
            Page number to retrive (starting from 0)
          required: false
          type: integer
        - name: size
          in: query
          description: |
            Number of elements per page
          required: false
          type: integer
      responses:
        201:
          description: Get all existing registry
          schema:
            $ref: "#/definitions/PagedRegistry"
        400:
          description: Bad Request
        401:
          description: Unauthorized
    post:
      summary: "[POST] Registry"
      tags:
        - registry
      produces:
        - application/json
      security:
        - Contactlab:
          - CUSTOMER_CARE
      parameters:
        - $ref: '#/parameters/AuthorizationHeader' 
        - name: registry
          in: body
          description: Registries configuration
          required: true
          schema:
            $ref: '#/definitions/Registry'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Registry'
        401:
          description: Unauthorized
        404:
          description: Not Found

  /registries/{key}:
    get:
      summary: "[GET] Registry"
      tags:
        - registry
      description: Endpoint to get registry
      consumes:
        - application/json
      security:
        - Contactlab:
          - CUSTOMER_CARE
      parameters:
        - $ref: '#/parameters/AuthorizationHeader' 
        - name: key
          in: path
          description: Key of registry
          required: true
          type: string
      responses:
        201:
          description: Get all existing registry
          schema:
            $ref: "#/definitions/PagedRegistry"
        400:
          description: Bad Request
        401:
          description: Unauthorized

    delete:
      summary: "[DELETE] Registry"
      tags:
        - registry
      description: delete registry
      produces:
        - application/json
      security:
        - Contactlab:
          - CUSTOMER_CARE
      parameters:
        - $ref: '#/parameters/AuthorizationHeader' 
        - name: key
          in: path
          description: Key of registry
          required: true
          type: string
      responses:
        204:
          description: OK
        401:
          description: Unauthorized
        404:
          description: Not Found

  /applications:
    get:
      summary: "[GET] Applications"
      tags:
        - client-application
      description: Endpoint to get information of an application
      produces:
        - application/json
      security:
        - Contactlab:
          - CUSTOMER_CARE
      parameters:
        - $ref: '#/parameters/AuthorizationHeader' 
        - name: page
          in: query
          description: |
            Page number to retrive (starting from 0)
          required: false
          type: integer
        - name: size
          in: query
          description: |
            Number of elements per page
          required: false
          type: integer
      responses:
        200:
          description: Successful return of client application
          schema:
            $ref: "#/definitions/PagedClientApplication"
        401:
          description: Unauthorized
        404:
          description: Not Found
    post:
      summary: "[POST] Application"
      tags:
        - client-application
      description: Endpoint to registry an application
      consumes:
        - application/json
      produces:
        - application/json
      security:
        - Contactlab:
          - CUSTOMER_CARE
      parameters:
        - $ref: '#/parameters/AuthorizationHeader' 
        - name: clientapplication
          in: body
          description: ClientApplication resource to be created
          required: true
          schema:
            $ref: '#/definitions/ClientApplicationSource'
      responses:
        201:
          description: Successful creation of the ClientApplication
          schema:
            $ref: "#/definitions/ClientApplication"
        400:
          description: Bad Request
        401:
          description: Unauthorized

  /applications/{id}:
    get:
      summary: "[GET] Application"
      tags:
        - client-application
      description: Endpoint to get information of an application
      produces:
        - application/json
      security:
        - Contactlab:
          - CUSTOMER_CARE
      parameters:
        - $ref: '#/parameters/AuthorizationHeader' 
        - name: id
          in: path
          description: ClientApplication id to retrieve
          required: true
          type: string
      responses:
        200:
          description: Successful return of client application
          schema:
            $ref: "#/definitions/ClientApplication"
        401:
          description: Unauthorized
        404:
          description: Not Found

    delete:
      summary: "[DELETE] Application"
      tags:
        - client-application
      produces:
        - application/json
      security:
        - Contactlab:
          - CUSTOMER_CARE
      parameters:
        - $ref: '#/parameters/AuthorizationHeader' 
        - name: id
          in: path
          description: id of the application
          required: true
          type: string
      responses:
        204:
          description: OK
        401:
          description: Unauthorized
        404:
          description: Not Found

  /workspaces/{workspaceId}/configurations/clabApplicationUser:
    get:
      summary: "[GET] Application user"
      tags:
        - configuration
      description: get clab application user associated to the workspace
      produces:
        - application/json
      security:
        - Contactlab:
          - CUSTOMER_CARE
      parameters:
        - $ref: '#/parameters/AuthorizationHeader' 
        - name: workspaceId
          in: path
          description: Id of workspace
          required: true
          type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ClabApplicationUser'
        401:
          description: Unauthorized
        404:
          description: Not Found

    put:
      summary: "[PUT] Application user"
      tags:
        - configuration
      description: Enpoint to modify clab application user associated
      consumes:
        - application/json
      produces:
        - application/json
      security:
        - Contactlab:
          - CUSTOMER_CARE
      parameters:
        - $ref: '#/parameters/AuthorizationHeader' 
        - name: workspaceId
          in: path
          description: Id of workspace
          required: true
          type: string
        - name: clabApplicationUser
          in: body
          description: clab application user associated to be update
          required: true
          schema:
            $ref: '#/definitions/ClabApplicationUser'
      responses:
        200:
          description: Successful updated
          schema:
            $ref: "#/definitions/ClabApplicationUser"
        400:
          description: Bad Request
        401:
          description: Unauthorized

  /workspaces/{workspaceId}/setup:
    post:
      summary: "[POST] Setup"
      tags:
        - configuration
      description: Enpoint to setup a demo client
      consumes:
        - application/json
      produces:
        - application/json
      security:
        - Contactlab:
          - CUSTOMER_CARE
      parameters:
        - $ref: '#/parameters/AuthorizationHeader' 
        - name: workspaceId
          in: path
          description: WorkspaceId selected
          type: string
          required: true
        - name: setup
          in: body
          description: setup resource to be used for demo client creation
          required: true
          schema:
            $ref: '#/definitions/SetupBody'
      responses:
        201:
          description: Successful creation of endpoint to setup demo client
        400:
          description: Bad Request
        401:
          description: Unauthorized

  /workspaces:
    get:
      summary: "[GET] Workspaces"
      tags:
        - workspace
      description: get all workspaces
      produces:
        - application/json
      security:
        - Contactlab:
          - CUSTOMER_CARE
      parameters:
        - $ref: '#/parameters/AuthorizationHeader' 
        - name: page
          in: query
          description: |
            Page number to retrive (starting from 0)
          required: false
          type: integer
        - name: size
          in: query
          description: |
            Number of elements per page
          required: false
          type: integer
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/PagedWorkspaces'
        401:
          description: Unauthorized

    post:
      summary: "[POST] Workspace"
      tags:
        - workspace
      description: Enpoint to create a workspace
      consumes:
        - application/json
      produces:
        - application/json
      security:
        - Contactlab:
          - CUSTOMER_CARE
      parameters:
        - $ref: '#/parameters/AuthorizationHeader' 
        - name: workspace
          in: body
          description: Workspace resource to be created
          required: true
          schema:
            $ref: '#/definitions/WorkspaceSource'
      responses:
        201:
          description: Successful creation of the Workspace
          schema:
            $ref: "#/definitions/Workspace"
        400:
          description: Bad Request
        401:
          description: Unauthorized

  /workspaces/{id}:
    get:
      summary: "[GET] Workspace"
      tags:
        - workspace
      description: get workspace
      produces:
        - application/json
      security:
        - Contactlab:
          - CUSTOMER_CARE
      parameters:
        - $ref: '#/parameters/AuthorizationHeader' 
        - name: id
          in: path
          description: Id of workspace
          required: true
          type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Workspace'
        401:
          description: Unauthorized
        404:
          description: Not Found

    patch:
      summary: "[PATCH] Workspace"
      tags:
        - workspace
      description: Enpoint to create a workspace
      consumes:
        - application/json
      produces:
        - application/json
      security:
        - Contactlab:
          - CUSTOMER_CARE
      parameters:
        - $ref: '#/parameters/AuthorizationHeader' 
        - name: id
          in: path
          description: Id of workspace
          required: true
          type: string
        - name: workspace
          in: body
          description: Workspace resource to be created
          required: true
          schema:
            $ref: '#/definitions/WorkspacePatchSource'
      responses:
        201:
          description: Successful creation of the Workspace
          schema:
            $ref: "#/definitions/Workspace"
        400:
          description: Bad Request
        401:
          description: Unauthorized

    delete:
      summary: "[DELETE] Workspace"
      tags:
        - workspace
      description: delete workspace
      produces:
        - application/json
      security:
        - Contactlab:
          - CUSTOMER_CARE
      parameters:
        - $ref: '#/parameters/AuthorizationHeader' 
        - name: id
          in: path
          description: Id of workspace
          required: true
          type: string
      responses:
        204:
          description: OK
        401:
          description: Unauthorized
        404:
          description: Not Found

  /configurations/workspaces/{workspaceId}/repositories:
    get:
      summary: "[GET] Repositories"
      tags:
        - repository
        - configurations
      description: Get list of repositories available for the workspace
      produces:
        - application/json
      security:
        - Contactlab:
          - BACKEND_USER
      parameters:
        - $ref: '#/parameters/AuthorizationHeader'
        - name: workspaceId
          in: path
          description: Id of workspace
          required: true
          type: string
        - name: Accept-Language
          in: header
          type: string
          description: Locale to use for retrieving resources
          required: false
        - name: supportedLocale
          in: query
          description: Language to filter repositories by
          type: string
          required: false
        - name: page
          in: query
          description: |
            Page number to retrive (starting from 0)
          required: false
          type: integer
        - name: size
          in: query
          description: |
            Number of elements per page
          required: false
          type: integer
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/PagedLightRepository'
        401:
          description: Unauthorized
        404:
          description: Not Found

    post:
      summary: "[POST] Repositories"
      tags:
        - repository
        - configurations
      description: create new repository
      produces:
        - application/json
      consumes:
        - application/json
      security:
        - Contactlab:
          - BACKEND_USER
      parameters:
        - $ref: '#/parameters/AuthorizationHeader'
        - name: workspaceId
          in: path
          description: WorkspaceId selected
          type: string
          required: true
        - name: Accept-Language
          in: header
          type: string
          description: Locale to use for retrieving resources
          required: false
        - name: repositorySource
          in: body
          description: repository to create
          required: true
          schema:
            $ref: '#/definitions/RepositorySource'
      responses:
        201:
          description: Created
          schema:
            $ref: '#/definitions/TranslatedRepository'
        400:
          description: Bad Request
        401:
          description: Unauthorized

  /configurations/workspaces/{workspaceId}/repositories/{id}:
    get:
      summary: "[GET] Repository"
      tags:
        - repository
        - configurations
      description: get repository
      produces:
        - application/json
      security:
        - Contactlab:
          - BACKEND_USER
      parameters:
        - $ref: '#/parameters/AuthorizationHeader'
        - name: workspaceId
          in: path
          description: WorkspaceId selected
          type: string
          required: true
        - name: id
          in: path
          description: Id of repository
          required: true
          type: string
        - name: Accept-Language
          in: header
          type: string
          description: Locale to use for retrieving resources
          required: false
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/TranslatedRepository'
        401:
          description: Unauthorized
        404:
          description: Not Found

    patch:
      summary: "[PATCH] Repository"
      tags:
        - repository
        - configurations
      description: get repository
      produces:
        - application/json
      security:
        - Contactlab:
          - BACKEND_USER
      parameters:
        - $ref: '#/parameters/AuthorizationHeader'
        - name: workspaceId
          in: path
          description: WorkspaceId selected
          type: string
          required: true
        - name: id
          in: path
          description: Id of repository
          required: true
          type: string
        - name: Accept-Language
          in: header
          type: string
          description: Locale to use for retrieving resources
          required: false
        - name: repository
          in: body
          description: Repository resource to be modified
          required: true
          schema:
            $ref: '#/definitions/RepositoryPatchSource'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/TranslatedRepository'
        401:
          description: Unauthorized
        404:
          description: Not Found

    delete:
      summary: "[DELETE] Repository"
      tags:
        - repository
        - configurations
      description: delete repository
      produces:
        - application/json
      security:
        - Contactlab:
          - BACKEND_USER
      parameters:
        - $ref: '#/parameters/AuthorizationHeader'
        - name: workspaceId
          in: path
          description: WorkspaceId selected
          type: string
          required: true
        - name: id
          in: path
          description: Id of repository
          required: true
          type: string
        - name: Accept-Language
          in: header
          type: string
          description: Locale to use for retrieving resources
          required: false
      responses:
        204:
          description: No Content
        401:
          description: Unauthorized
        404:
          description: Not Found
          
  /configurations/workspaces/{workspaceId}/templates:
    get:
      summary: "[GET] Templates"
      tags:
        - template
        - configurations
      description: Get list of templates available for the workspace
      produces:
        - application/json
      security:
        - Contactlab:
          - BACKEND_USER
      parameters:
        - $ref: '#/parameters/AuthorizationHeader'
        - name: workspaceId
          in: path
          description: Id of workspace
          required: true
          type: string
        - name: Accept-Language
          in: header
          type: string
          description: Locale to use for retrieving resources
          required: false
        - name: supportedLocale
          in: query
          description: Language to filter templates by
          type: string
          required: false
        - name: page
          in: query
          description: |
            Page number to retrive (starting from 0)
          required: false
          type: integer
        - name: size
          in: query
          description: |
            Number of elements per page
          required: false
          type: integer
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/PagedLightTemplate'
        401:
          description: Unauthorized
        404:
          description: Not Found
    
    post:
      summary: "[POST] Templates"
      tags:
        - template
        - configurations
      description: Create template
      produces:
        - application/json
      consumes:
        - application/json
      security:
        - Contactlab:
          - BACKEND_USER
      parameters:
        - $ref: '#/parameters/AuthorizationHeader'
        - name: workspaceId
          in: path
          description: Id of workspace
          required: true
          type: string
        - name: Accept-Language
          in: header
          type: string
          description: Locale to use for retrieving resources
          required: false
        - name: source
          in: body
          description: Template source to create
          required: true
          schema:
            $ref: '#/definitions/TemplateSource'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/TranslatedTemplate'
        400:
          description: Bad request
        401:
          description: Unauthorized

  /configurations/workspaces/{workspaceId}/templates/{id}:
    get:
      summary: "[GET] Template"
      tags:
        - template
        - configurations
      description: get template
      produces:
        - application/json
      security:
        - Contactlab:
          - BACKEND_USER
      parameters:
        - $ref: '#/parameters/AuthorizationHeader'
        - name: workspaceId
          in: path
          description: WorkspaceId selected
          type: string
          required: true
        - name: id
          in: path
          description: Id of template
          required: true
          type: string
        - name: Accept-Language
          in: header
          type: string
          description: Locale to use for retrieving resources
          required: false
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/TranslatedTemplate'
        401:
          description: Unauthorized
        404:
          description: Not Found

    patch:
      summary: "[PATCH] Template"
      tags:
        - template
        - configurations
      description: get template
      produces:
        - application/json
      security:
        - Contactlab:
          - BACKEND_USER
      parameters:
        - $ref: '#/parameters/AuthorizationHeader'
        - name: workspaceId
          in: path
          description: WorkspaceId selected
          type: string
          required: true
        - name: id
          in: path
          description: Id of template
          required: true
          type: string
        - name: template
          in: body
          description: Template resource to be modified
          required: true
          schema:
            $ref: '#/definitions/TemplatePatchSource'
        - name: Accept-Language
          in: header
          type: string
          description: Locale to use for retrieving resources
          required: false
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/TranslatedTemplate'
        401:
          description: Unauthorized
        404:
          description: Not Found
      
    delete:
      summary: "[DELETE] Template"
      tags:
        - template
        - configurations
      description: delete template
      produces:
        - application/json
      security:
        - Contactlab:
          - BACKEND_USER
      parameters:
        - $ref: '#/parameters/AuthorizationHeader'
        - name: workspaceId
          in: path
          description: WorkspaceId selected
          type: string
          required: true
        - name: id
          in: path
          description: Id of template
          required: true
          type: string
        - name: Accept-Language
          in: header
          type: string
          description: Locale to use for retrieving resources
          required: false
      responses:
        204:
          description: Successful response
        401:
          description: Unauthorized
        404:
          description: Not Found

  /configurations/workspaces/{workspaceId}/collections:
    get:
      summary: "[GET] Collections"
      tags:
        - collection
        - configurations
      description: Gets `Collections` for the workspace
      produces:
        - application/json
      security:
        - Contactlab:
          - BACKEND_USER
      parameters:
        - $ref: '#/parameters/AuthorizationHeader'
        - name: workspaceId
          in: path
          description: id of the workspace
          required: true
          type: string
        - name: Accept-Language
          in: header
          type: string
          description: Locale to use for retrieving resources
          required: false
        - name: supportedLocale
          in: query
          description: Language to filter templates by
          type: string
          required: false
        - name: page
          in: query
          description: |
            Page number to retrive (starting from 0)
          required: false
          type: integer
        - name: size
          in: query
          description: |
            Number of elements per page
          required: false
          type: integer
      responses:
        200:
          description: Successful response
          schema:
            $ref: "#/definitions/PagedCollection"
        401:
          description: Unauthorized

    post:
      summary: "[POST] Collection"
      tags:
        - collection
        - configurations
      description: Create collection for the workspace
      consumes:
        - application/json
      produces:
        - application/json
      security:
        - Contactlab:
          - BACKEND_USER
      parameters:
        - $ref: '#/parameters/AuthorizationHeader'
        - name: workspaceId
          in: path
          description: id of the workspace
          required: true
          type: string
        - name: source
          in: body
          description: source for the collection to be created
          required: true
          schema:
            $ref: '#/definitions/CollectionSource'
      responses:
        201:
          description: Successful response
          schema:
            $ref: "#/definitions/TranslatedCollection"
        401:
          description: Unauthorized

  /configurations/workspaces/{workspaceId}/collections/{collectionId}:
    get:
      summary: "[GET] Collection"
      tags:
        - collection
        - configurations
      description: Gets `Collection` object by id.
      produces:
        - application/json
      security:
        - Contactlab:
          - BACKEND_USER
      parameters:
        - $ref: '#/parameters/AuthorizationHeader'
        - name: workspaceId
          in: path
          description: id of the workspace
          required: true
          type: string
        - name: collectionId
          in: path
          description: id of the collection to be retrieved
          required: true
          type: string
        - name: Accept-Language
          in: header
          type: string
          description: Locale to use for retrieving resources
          required: false
        - name: expand
          in: query
          description: If present, the field locales is populated. By default the field locales is empty.
          required: false
          type: string
          enum: ["locales"]
      responses:
        200:
          description: Successful response
          schema:
            $ref: "#/definitions/TranslatedCollection"
        401:
          description: Unauthorized
        404:
          description: Not found
          
    patch: 
      summary: "[PATCH] Collection"
      tags:
        - collection
        - configurations
      description: Update collection for the workspace
      consumes:
        - application/json
      produces:
        - application/json
      security:
        - Contactlab:
          - BACKEND_USER
      parameters:
        - $ref: '#/parameters/AuthorizationHeader'
        - name: workspaceId
          in: path
          description: id of the workspace
          required: true
          type: string
        - name: collectionId
          in: path
          description: id of the collection
          required: true
          type: string
        - name: source
          in: body
          description: properties to update
          required: true
          schema:
            $ref: '#/definitions/CollectionPatchSource'
      responses:
        200:
          description: Successful response
          schema:
            $ref: "#/definitions/TranslatedCollection"
        401:
          description: Unauthorized
        404:
          description: Not Found
   
    delete:
      summary: "[DELETE] Collection"
      tags:
        - collection
        - configurations
      description: Delete collection from the workspace
      produces:
        - application/json
      security:
        - Contactlab:
          - BACKEND_USER
      parameters:
        - $ref: '#/parameters/AuthorizationHeader'
        - name: workspaceId
          in: path
          description: id of the workspace
          required: true
          type: string
        - name: collectionId
          in: path
          description: id of the collection
          required: true
          type: string      
      responses:
        204:
          description: Successful response
        401:
          description: Unauthorized
        404:
          description: Not Found

  /configurations/workspaces/{workspaceId}/channels:
    get:
      summary: "[GET] channels"
      tags:
        - channel
        - configurations
      description: Get list of channels available for the workspace
      produces:
        - application/json
      security:
        - Contactlab:
          - BACKEND_USER
      parameters:
        - $ref: '#/parameters/AuthorizationHeader'
        - name: workspaceId
          in: path
          description: Id of workspace
          required: true
          type: string
        - name: page
          in: query
          description: |
            Page number to retrive (starting from 0)
          required: false
          type: integer
        - name: size
          in: query
          description: |
            Number of elements per page
          required: false
          type: integer
        - name: hasFeed
          in: query
          description: |
            Filter channels only having feeds
          required: false
          type: boolean
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/PagedConfigurationChannel'
        401:
          description: Unauthorized
          
    post:
      summary: "[POST] channels"
      tags:
        - channel
        - configurations
      description: Create channel
      produces:
        - application/json
      consumes:
      - application/json
      security:
        - Contactlab:
          - BACKEND_USER
      parameters:
        - $ref: '#/parameters/AuthorizationHeader'
        - name: workspaceId
          in: path
          description: Id of workspace
          required: true
          type: string
        - name: channelSource
          in: body
          description: Channel source to be created
          required: true
          schema:
            $ref: '#/definitions/ChannelSource'
      responses:
        201:
          description: OK
          schema:
            $ref: '#/definitions/ConfigurationChannel'
        401:
          description: Unauthorized
        404:
          description: Not Found
          
  
  /configurations/workspaces/{workspaceId}/channels/{channelKey}:
    get:
      summary: "[GET] channels"
      tags:
        - channel
        - configurations
      description: Get channel
      produces:
        - application/json
      security:
        - Contactlab:
          - BACKEND_USER
      parameters:
        - $ref: '#/parameters/AuthorizationHeader'
        - name: workspaceId
          in: path
          description: Id of workspace
          required: true
          type: string
        - name: channelKey
          in: path
          description: Channel key to retrieve
          required: true
          type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ConfigurationChannel'
        401:
          description: Unauthorized
        404:
          description: Unauthorized
          
    delete:
      summary: "[POST] channels"
      tags:
        - channel
        - configurations
      description: Create channel
      produces:
        - application/json
      consumes:
      - application/json
      security:
        - Contactlab:
          - BACKEND_USER
      parameters:
        - $ref: '#/parameters/AuthorizationHeader'
        - name: workspaceId
          in: path
          description: Id of workspace
          required: true
          type: string
        - name: channelKey
          in: path
          description: Channel key to retrieve
          required: true
          type: string
      responses:
        204:
          description: No Content
        401:
          description: Unauthorized
        404:
          description: Not Found


  /configurations/workspaces/{workspaceId}/feeds:
    get:
      summary: "[GET] Feeds"
      tags:
        - feed
        - configurations
      description: Get list of feeds available for the workspace
      produces:
        - application/json
      security:
        - Contactlab:
          - BACKEND_USER
      parameters:
        - $ref: '#/parameters/AuthorizationHeader'
        - name: workspaceId
          in: path
          description: Id of workspace
          required: true
          type: string
        - name: page
          in: query
          description: |
            Page number to retrive (starting from 0)
          required: false
          type: integer
        - name: size
          in: query
          description: |
            Number of elements per page
          required: false
          type: integer
        - name: sort
          in: query
          description: |
            field and direction to sort feeds e.g; sort=name
            example asc (default); sort=name,ASC
            example desc; sort=name,DESC
            example multiple sort=channel&sort=name,DESC&sort=description,ASC
          required: false
          type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/PagedFeed'
        401:
          description: Unauthorized
        404:
          description: Not Found
   
    post:
      summary: "[POST] Feed"
      tags:
        - feed
        - configurations
      description:
        Create feed
      produces:
        - application/json
      security:
        - Contactlab:
          - BACKEND_USER
      parameters:
        - $ref: '#/parameters/AuthorizationHeader'
        - name: workspaceId
          in: path
          description: WorkspaceId selected
          type: string
          required: true
        - name: feedSource
          in: body
          description: Feed source to be created
          required: true
          schema:
            $ref: '#/definitions/FeedSource'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Feed'
        401:
          description: Unauthorized
        404:
          description: Not Found          

  /configurations/workspaces/{workspaceId}/feeds/{id}:
    get:
      summary: "[GET] Feed"
      tags:
        - feed
        - configurations
      description: get feeds
      produces:
        - application/json
      security:
        - Contactlab:
          - BACKEND_USER
      parameters:
        - $ref: '#/parameters/AuthorizationHeader'
        - name: workspaceId
          in: path
          description: WorkspaceId selected
          type: string
          required: true
        - name: id
          in: path
          description: Id of feeds
          required: true
          type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Feed'
        401:
          description: Unauthorized
        404:
          description: Not Found

    patch:
      summary: "[PATCH] Feed"
      tags:
        - feed
        - configurations
      description: get feeds
      produces:
        - application/json
      security:
        - Contactlab:
          - BACKEND_USER
      parameters:
        - $ref: '#/parameters/AuthorizationHeader'
        - name: workspaceId
          in: path
          description: WorkspaceId selected
          type: string
          required: true
        - name: id
          in: path
          description: Id of feeds
          required: true
          type: string
        - name: feeds
          in: body
          description: Feed resource to be modified
          required: true
          schema:
            $ref: '#/definitions/FeedPatchSource'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Feed'
        401:
          description: Unauthorized
        404:
          description: Not Found
          
    delete:
      summary: "[DELETE] Feed"
      tags:
        - feed
        - configurations
      description: get feeds
      produces:
        - application/json
      security:
        - Contactlab:
          - BACKEND_USER
      parameters:
        - $ref: '#/parameters/AuthorizationHeader'
        - name: workspaceId
          in: path
          description: WorkspaceId selected
          type: string
          required: true
        - name: id
          in: path
          description: Id of feeds
          required: true
          type: string
      responses:
        204:
          description: OK
        401:
          description: Unauthorized
        404:
          description: Not Found
    
  /configurations/workspaces/{workspaceId}/permissions:
    get:
      summary: "[GET] permissions"
      tags:
        - permission
        - configurations
      description: get permissions
      produces:
        - application/json
      security:
        - Contactlab:
          - CUSTOMER_CARE
      parameters:
        - $ref: '#/parameters/AuthorizationHeader'
        - name: workspaceId
          in: path
          description: WorkspaceId selected
          type: string
          required: true
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Permissions'
        401:
          description: Unauthorized
        404:
          description: Not Found

    patch:
      summary: "[PATCH] permissions"
      tags:
        - permission
        - configurations
      description: get permissions
      produces:
        - application/json
      security:
        - Contactlab:
          - CUSTOMER_CARE
      parameters:
        - $ref: '#/parameters/AuthorizationHeader'
        - name: workspaceId
          in: path
          description: WorkspaceId selected
          type: string
          required: true
        - name: permissions
          in: body
          description: Permissions resource to be modified
          required: true
          schema:
            $ref: '#/definitions/SourcePermissions'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Permissions'
        401:
          description: Unauthorized
        404:
          description: Not Found

definitions:
  CustomerCardSource:
    type: object
    properties:
      label:
        description: The title of the card
        type: string
      fields:
        default:
          description: The field list
          type: string
        additionalProperties:
          $ref: "#/definitions/CustomerCardFieldSource"

  CustomerCardFieldSource:
    type: object
    properties:
      type:
        type: string
        description: field type
        enum: [INPUT_TEXT, INPUT_TEXTAREA, INPUT_NUMBER, INPUT_EMAIL,  INPUT_DATE,  INPUT_IMAGE, INPUT_ENUM]
      cardinality:
        $ref: "#/definitions/Cardinality"
      name:
        type: string
        description: field name
      description:
        type: string
        description: field description
      placeholder:
        type: string
        description: field placeholder
      defaultValue:
        type: string
        description: field default value
      semantic:
        description: Semantic of the field
        type: string
        enum: [FIRST_NAME, LAST_NAME, BIRTHDATE, GENDER, EMAIL, PHONE, OTHER]
      referredField:
        description: hub field path with dot notation
        type: string
      validationRules:
        type: array
        description: List of rule for validation of parameter
        items:
          $ref: "#/definitions/ValidationRule"
      extras:
        type: object
        description: based on type. see the json schema for details

  CustomerModelSource:
    type: object
    properties:
      cards:
        default:
          type: string
          description: card name
        additionalProperties:
          $ref: "#/definitions/CustomerCardSource"

  HubAttributes:
    type: object
    required:
      - workspaceId
      - nodeId
      - token
      - userId
    properties:
      workspaceId:
        type: string
        description: id of hub workspace
      nodeId:
        type: string
        description: hub node name
      token:
        type: string
        description: hub token
      userId:
        type: object
        required:
          - referredField
        description: customer/user association field
        properties:
          referredField:
            type: string
            description: Dot notation path for the field to read userId from customer resource in hub
      model:
        $ref: "#/definitions/CustomerModelSource"

  Medium:
    type: string
    enum: [EMAIL, SMS, MESSENGER, WECHAT, LINE, TELEGRAM]

  WorkspacePatchSource:
    type: object
    properties:
      enabledMedia:
        type: array
        items:
          $ref: "#/definitions/Medium"

  WorkspaceSource:
    type: object
    required:
      - companyId
      - hubAttributes
      - clabApplicationUser
      - languages
    properties:
      companyId:
        type: integer
        description: Id of the company to configure
      name:
        type: string
        description: company name
      clabApplicationUser:
        $ref: "#/definitions/ClabApplicationUser"
      hubAttributes:
        $ref: "#/definitions/HubAttributes"
      userDb:
        type: object
        required:
          - id
          - filterId
        properties:
          id:
            type: string
          filterId:
            type: string
      enabledMedia:
        type: array
        items:
          $ref: "#/definitions/Medium"
      languages:
        type: object
        properties:
          defaultLanguageKey:
            type: string
          enabledLanguages:
            type: array
            items:
              type: string

  PagedWorkspaces:
    properties:
      page:
        $ref: '#/definitions/Page'
      elements:
        type: array
        items:
          $ref: "#/definitions/Workspace"

  SetupBody:
    type: object
    properties:
      emails:
        type: array
        description: List of email addresses to be used for customer creation for this workspace
        items:
          type: string

  ClabApplicationUser:
    type: object
    required: [uid, secret]
    properties:
      uid:
        type: string
      secret:
        type: string
      apiKey:
        type: string

  ClientApplicationSource:
    type: object
    required: [name, version, enabled, defaultJson]
    properties:
      name:
        type: string
        description: Application name
      version:
        type: integer
        description: Application version
      provider:
        type: string
        format: email
        description: Provider contact information
      enabled:
        type: boolean
        description: Flag to enable disable application
      defaultJson:
        type: string
        description: |
          Application configuration properties.
          Must be a map containing three different map of property definitions (ui, conf, custom)
          e.g: {"ui": { 
                    "headerHeight": {
                      "type":"STRING",
                      "defaultValue":"45px",
                      "validationRegExp":null
                    }
                },
                "conf": {
                    "maxCardinality": {
                      "type":"NUMBER",
                      "defaultValue":1,
                      "validationRegExp":null
                    }
                },"custom":{
                }
              }

  ClientApplication:
    type: object
    properties:
      id:
        type: string
        description: Application id
      name:
        type: string
        description: Application name
      version:
        type: integer
        description: Application version
      provider:
        type: string
        description: Provider contact information
      enabled:
        type: boolean
        description: Flag to enable disable application
      defaultJson:
        type: string
        description: |
          Application configuration properties.
          Must be a map containing three different map of property definitions (ui, conf, custom)
          e.g: {"ui": {
                    "headerHeight": {
                      "type":"STRING",
                      "defaultValue":"45px",
                      "validationRegExp":null
                    }
                },
                "conf": {
                    "maxCardinality": {
                      "type":"NUMBER",
                      "defaultValue":1,
                      "validationRegExp":null
                    }
                },"custom":{
                }
              }

  PagedClientApplication:
    properties:
      page:
        $ref: '#/definitions/Page'
      elements:
        type: array
        items:
          $ref: "#/definitions/ClientApplication"

  Registry:
    type: object
    properties:
      key:
        type: string
        description: Key of the registry

  PagedRegistry:
    properties:
      page:
        $ref: '#/definitions/Page'
      elements:
        type: array
        items:
          $ref: "#/definitions/Registry"

  EmailConfigurationSource:
    type: object
    required: [storeConfiguration]
    properties:
      storeConfiguration:
        type: array
        items:
          type: object
          required: [storeId, campaignAlias, defaultSender]
          properties:
            storeId:
              type: string
            campaignAlias:
              type: string
            defaultSender:
              type: string
              enum: [USER, STORE]

  EmailConfiguration:
    type: object
    required: [storeConfiguration]
    properties:
      storeConfiguration:
        type: array
        items:
          type: object
          required: [storeId, campaignAlias, defaultSender]
          properties:
            storeId:
              type: string
            campaignAlias:
              type: string
            defaultSender:
              type: string
              enum: [USER, STORE]


  SmsConfigurationSource:
    type: object
    required: [storeConfiguration]
    properties:
      storeConfiguration:
        type: array
        items:
          type: object
          required: [storeId, campaignAlias]
          properties:
            storeId:
              type: string
            campaignAlias:
              type: string

  SmsConfiguration:
    type: object
    required: [storeConfiguration]
    properties:
      storeConfiguration:
        type: array
        items:
          type: object
          required: [storeId, campaignAlias]
          properties:
            storeId:
              type: string
            campaignAlias:
              type: string


  MessengerConfigurationSource:
    type: object
    required: [userToken, page]
    properties:
      userToken: 
        type: string
      page:
        type: object
        required: [id, name]
        properties:
          id: 
            type: string
          name:
            type: string

  MessengerConfiguration:
    type: object
    properties:
      page:
        type: object
        properties:
          id: 
            type: string
          name:
            type: string
          accessToken:
            type: string

  WeChatConfigurationSource:
    type: object
    required: [appId, appSecret]
    properties:
      appId:
        type: string
        description: WeChat application id
      appSecret:
        type: string
        description: WeChat application secret

  WeChatConfiguration:
    type: object
    properties:
      appId:
        type: string
        description: WeChat application id
      appSecret:
        type: string
        description: WeChat application secret
      webhookUrl:
        type: string
        description: Integration webhook url
      webhookSecret:
        type: string
        description: Integration webhook secret

  ChatroomInvitationSource:
    type: object
    required:
      - mediums
    properties:
      customerId:
        type: string
        description: customer id to invite
      mediums:
        type: array
        description: list of im mediums to create chatroom invitation
        items:
          type: string
          enum: [MESSENGER, WECHAT, LINE, TELEGRAM]
          
  
  ChatroomInvitations:
    type: object
    properties:
      pin:
        type: object
        description: pin for customer if customerId is present
        properties:
          code:
            type: string
            format: number
          expiration:
            type: string
            description: expiration date for pin
            format: date-time
      chatRooms:
        type: array
        description: list of chatroom invitation links for mediums
        items:
          $ref: "#/definitions/ChatroomInvitation"
          
  ChatroomInvitation:
    type: object
    properties:
      medium:
        type: string
        enum: [MESSENGER, WECHAT, LINE, TELEGRAM]
      link:
        type: object
        properties:
          url:
            type: string
            description: url for chatroom link
            format: url
          expiration:
            type: string
            description: expiration date for link
            format: date-time
      qrCode:
        type: object
        properties:
          url:
            type: string
            description: url for chatroom qrcode
            format: url
          expiration:
            type: string
            description: expiration date for qrcode
            format: date-time

  UserSource:
    type: object
    required:
      - registryData
      - authenticationData
      - personalData
    properties:
      registryData:
        type: object
        required:
          - id
        description: user data in the registry company
        properties:
          id:
            type: string
            description: the id of the user in the registry company system
          registry:
            type: string
            description: the key that identify the type of registry in Contactone
      authenticationData:
        type: object
        required:
          - id
        description: user data in the authentication system
        properties:
          id:
            type: string
            description: the id of the user in the authentication system
          authenticationService:
            type: string
            description: the key that identify the type of authentication system in Contactone
      personalData:
        type: object
        description: personal data of the user
        required:
          - firstName
          - lastName
        properties:
          firstName:
            type: string
            description: user name
          lastName:
            type: string
            description: user lastname
          email:
            type: string
            description: user email
            
  User:
    type: object
    properties:
      id:
        type: string
        description: user id
      registryData:
        type: object
        description: user data in the registry company
        properties:
          id:
            type: string
            description: the id of the user in the registry company system
          registry:
            type: string
            description: the key that identify the type of registry in Contactone
      authenticationData:
        type: object
        description: user data in the authentication system
        properties:
          id:
            type: string
            description: the id of the user in the authentication system
          authenticationService:
            type: string
            description: the key that identify the type of authentication system in Contactone
      personalData:
        type: object
        description: personal data of the user
        properties:
          firstName:
            type: string
            description: user name
          lastName:
            type: string
            description: user lastname
          email:
            type: string
            description: user email
          profilePictureUrl:
            type: string
            description: user profile picture url
          signatureUrl:
            type: string
            description: user signature url
  
  PagedUser:
    properties:
      page:
        $ref: '#/definitions/Page'
      elements:
        type: array
        items:
          $ref: "#/definitions/User"

  LightImage:
    type: object
    properties:
      url:
        type: string
        description: url of the image
      fileName:
        type: string
        description: Name of the image
      mediaType:
        type: string
        description: mediaType of the image

  Image:
    type: object
    properties:
      id:
        type: string
        description: Id of the image
      url:
        type: string
        description: url of the image
      originalUrl:
        description: original url of the image
        type: string
      size:
        type: object
        properties:
          width: 
            type: number
            description: width of the image
          height: 
            type: number
            description: height of the image
          ratio: 
            type: number
            description: ratio of width to height of the image
      file:
        type: object
        properties:
          weight: 
            type: number
            description: weight of the image
          mimeType: 
            type: string
            description: mime-type of the image
      colors:
        type: object
        properties:
          palette:
            type: array
            description: hexadecimal color values of the image
            items:
              type: string
              
  NewPostEvent:
    properties:
      workspaceId:
        type: string
        description: workspace id
      postId:
        type: string
        description: post id
      parts:
        type: object
        description: Map of post parts ready to render such as subject, body etc.
        additionalProperties:
          $ref: "#/definitions/MessagePart"
      status:
        type: string
        enum: [SENDING, SENT, RECEIVED, READ, ERROR]
      direction:
        type: string
        enum: [INBOUND, OUTBOUND]
      date:
        type: string
        format: date-time
      customerId:
        type: string
        description: customer id
      threadId:
        type: string
        description: thread id
      userId:
        type: string
        description: user id (SA)

  PostStatusUpdateEvent:
    properties:
      workspaceId:
        type: string
        description: workspace id
      userId:
        type: string
        description: user id (SA)
      postId:
        type: string
        description: post id
      status:
        type: string
        enum: [SENDING, SENT, RECEIVED, READ, ERROR]
      threadId:
        type: string
        description: thread id
      customerId:
        type: string
        description: customer id

  PagedChannel:
    properties:
      page:
        $ref: '#/definitions/Page'
      elements:
        type: array
        items:
          $ref: "#/definitions/Channel"

  Channel:
    type: object
    properties:
      id:
        type: string
        description: The id of the channel
      key:
        type: string
        description: The key of the channel
      value:
        type: string
        description: The value of the channel
      news:
        type: object
        properties:
          total: 
            type: number
            description: Total news associated to the channel
            
  MediumRes:
    type: object
    properties:
      medium: 
        description: channel key
        type: string
        enum: [EMAIL, SMS, MESSENGER, TELEGRAM, WECHAT, LINE]
      group:
        type: string
        enum: [EMAIL, SMS, IM]
      thumbnail:
        $ref: '#/definitions/ImageMetadata' 

  PagedNews:
    properties:
      page:
        $ref: '#/definitions/Page'
      elements:
        type: array
        items:
          $ref: "#/definitions/News"

  News:
    type: object
    properties:
      id:
        type: string
        description: The id of the news
      title:
        type: string
        description: The title of the news
      description:
        type: string
        description: The description of the news
      thumbnail:
        $ref: '#/definitions/ImageMetadata'
      likes:
        type: object
        properties:
          total: 
            type: number
            description: Total of likes
          userNewsLikeId: 
            type: string
            description: Id of user like, null if the user has never liked the news
      language:
        type: string
        description: The language of the news
      channel:
        type: string
      link:
        type: string
        description: Link to details
      pubDate:
        type: string
        format: date-time

  Like:
    type: object
    properties:
      id:
        type: string
        description: The id of the like

  NewsLikeSource:     
    type: object
    required:
      - postId
    properties:
      newsId:
        type: string
        description: The id of the news

  DeliverySource:
    type: object
    required:
      - deliveryInstances
    properties:
      deliveryInstances:
        type: array
        items:
          type: string
          description: Message context id to send
      threadId:
        type: string
        description: Id of the thread

  InvitationSource:          
    type: object
    required:
      - channel
      - details
    properties:
      channel:
        type: string
        description: Channel that will be used to send the message
        enum: [EMAIL, SMS, MESSENGER, WECHAT, TELEGRAM, LINE]
      type:
        type: string
        description: Type of invitation
        enum: [IM]
      details:
         $ref: "#/definitions/InvitationDetailsSource"
         
  InvitationDetailsSource:
    type: object
    properties:
      mediumIds:
        type: array
        items: 
         type: string

  MessageBlueprint:
    type: object
    properties:
      type:
        type: string
        description: Output Type of the template
        enum: [HTML]
      parts:
        type: object
        description: Map of message parts ready to render such as subject, body etc.
        additionalProperties:
          type: string
          description: Content of the message part in the format defined by type
                     
  MessageDelivery:
    type: object
    properties:
      id:
        type: string
        description: The id of the delivery
      messageId:
        type: string
        description: The id of the message
      date:
        type: string
        format: date-time
      deliveryInstances:
        type: array
        items:
          $ref: "#/definitions/DeliveryInstance"

  DeliveryInstance:
    type: object
    properties:
      deliveryInstanceId:
        type: string
        description: The id of the delivery instance
      threadId:
        type: string
        description: Id of the thread
      messageInstanceId:
        type: string
        description: The id of the message instance
      customerId:
        type: string
        description: The id of the customer
      deliveryStatus:
        type: object
        properties:
          code:
            type: string
            enum: [DELIVERED, UNDELIVERED, ERROR]
          description:
            type: string 
            description: A description of the status
      parts:
        type: object
        description: Map of message parts ready to render such as subject, body etc.
        additionalProperties:
            $ref: "#/definitions/MessagePart"
  
  MessagePart:
    type: object
    properties:
      mimeType:
        type: string
        description: part media type
        enum: [text/html, text/plain, application/json]
      value:
        type: object
        description: rendered value
      schema:
        type: object
        description: schema defining json structure if mimeType is application/json
        properties:
          type:
            type: string
            description: type of schema in case of application/json mimeType
            enum: [IMAGE, CONTENT]

  PagedMessageBlueprint:
    type: object
    properties:
      page:
        $ref: '#/definitions/Page'
      elements:
        type: array
        items:
          $ref: "#/definitions/MessageBlueprint"

  PagedMessageDelivery:
    properties:
      page:
        $ref: '#/definitions/Page'
      elements:
        type: array
        items:
          $ref: "#/definitions/MessageDelivery"

  ImageMetadata:
    type: object
    properties:
      url:
        type: string
        description: Image url
      originalUrl::
        type: string 
        description: Image original url
      size:
        type: object
        description: size information
        properties:
          width:
            type: integer
            description: Image width
          height:
            type: integer
            description: Image height
          ratio:
            type: string
            description: Width/Height ratio
      file:
        type: object
        description: Image file properties
        properties:
          weight:
            type: integer
            description: Image weight
          mime_type:
            type: string
            description: Image mime type
      colors:
        type: object
        description: Image color metadata
        properties:
          palette:
            type: array
            description: Image color palette
            items:
              type: string

  Repository:
    type: object
    properties:
      id:
        type: string
        description: The id of the repository
      contentTypeId:
        type: string
        description: Identifier of the content type provided by the repository. The ContentTypeId field is used as a reference in templates (and occasionally as resource paramenter) to establish a reference to a suitable content. Several repositories may provide the same contentTypeId (e.g. several "product" repositories could provide a "product")
      name:
        type: string
        description: Name of the repository
      description:
        type: string
        description: Description of the repository
      thumbnail:
        $ref: '#/definitions/ImageMetadata'
      features:
        description: Describes the repoistory features, such as capability to support full text queries, and navigation by categories or tags.
        type: object
        properties:
          categories:
            type: boolean
            description: True if categories is supported
          tags:
            type: boolean
            description: True if tags is supported
          query:
            type: boolean
            description: True if simple search is supported (?query=%value%)
      rules:
        type: array
        description: List of supported rules
        items:
          $ref: "#/definitions/Rule"
      cardinality:
        $ref: "#/definitions/Cardinality"
      supportedLocales:
        type: array
        description: the languages that the repository support
        items:
          type: string

  PagedRepository:
    properties:
      page:
        $ref: '#/definitions/Page'
      elements:
        type: array
        items:
          $ref: "#/definitions/Repository"

  Rule:
    type: object
    description: An algorithm supported by the repository to allow manual or automated extraction of contents It might need explicit parameters (implicit parameters will be provide seamlessly). E.g. a product repository could support the manual retrievial of a product as well as the automatic retrivial of related products. In this case a product id is required as imput.
    properties:
      id:
        type: string
        description: The id of the rule. This will be referenced to query the repository, along with the required parameters.
      name:
        type: string
        description: Name of the rule. This is mainly intended as a way to present the eventual choice to an end user.
      description:
        type: string
        description: Description of the rule
      parameters:
        type: array
        description: |
          List of parameters required by the rule
        items:
          $ref: "#/definitions/RuleParameter"

  TemplateInput:
    type: object
    description: Definition of an input required by Template
    properties:
      id:
        type: string
        description: Id of the parameter. This will be sent as key to the repository when applying the given rule.
      name:
        type: string
        description: Name of the parameter
      description:
        type: string
        description: Description of the parameter
      placeholder:
        type: string
        description: Placeholder of the parameter
      defaultValue:
        type: string
        description: Default value of the input
      validationRules:
        type: array
        description: List of rule for validation of parameter
        items:
          $ref: "#/definitions/ValidationRule"
      type:
        $ref: "#/definitions/InputType"
      extras:
        type: object
        description: see the json schema related to type
      cardinality:
        $ref: "#/definitions/Cardinality"

  RuleParameter:
    type: object
    description: Advanced input with browse capability to use in rules
    properties:
      id:
        type: string
        description: Id of the parameter. This will be sent as key to the repository when applying the given rule.
      name:
        type: string
        description: Name of the parameter
      description:
        type: string
        description: Description of the parameter
      placeholder:
        type: string
        description: Placeholder of the parameter
      validationRules:
        type: array
        description: List of rule for validation of parameter
        items:
          $ref: "#/definitions/ValidationRule"
      type:
        type: string
        description: Type of the field
        enum: [INPUT_TEXT, INPUT_TEXTAREA, INPUT_NUMBER, INPUT_EMAIL, INPUT_DATE, BROWSE_CONTENTS, BROWSE_CATEGORIES, BROWSE_TAGS, IMAGE_URL, INPUT_ENUM]
      cardinality:
        $ref: "#/definitions/Cardinality"
      extras:
        type: object
        description: see the json schema related to type
      browse:
        type: object
        properties:
          repository:
            type: string
            description: id of the repository to browse for contents (browse-contents), tags (browse-tags), categories (browse-categories)

  ValidationRule:
    type: object
    description: Rule definition for parameter validation
    properties:
      type:
        type: string
        enum: [REGEX]
        description: Type of rule
      criteria:
        type: object
        properties:
          pattern:
            type: string
            description: Pattern to satisfy the rule
          match:
            type: boolean
            description: True if the rule must be satisfied
      message:
        type: string
        description: Message to display in case of error validation

  Cardinality:
    type: object
    properties:
      min:
        type: number
        format: int
        description: Minimum number of accepted occurrences
      max:
        type: number
        format: int
        description: Maximum number of accepted occurrences
    required: [min, max]
  
  ApplicationProperties:
    type: object
    description: Map of client application configuration
    properties:
      ui:
        type: object
        description: Client application UI configuration parameters
      conf:
        type: object
        description: Client application configuration parameters
      custom:
        type: object
        description: Client application custom configuration values  
  
  EnvironmentProperties:
    type: object
    description: the workspace environment configuration
    properties:
      enabledChannels:
        description: enabled channels for the workspace
        type: array
        items:
          $ref: '#/definitions/MediumRes'
      defaultLanguage:
        description: default language
        type: object
        properties:
            key:
              type: string
            label:
              type: string
      features:
        description: features of workspace
        type: object
        properties:
          todo:
            type: object
            properties:
              enabled:
                type: boolean
                description: flag to show if todo is enabled for workspace
          optInSms:
            type: object
            properties:
              enabled:
                type: boolean
                description: flag to show if optin is enabled for sms
          optInEmail:
            type: object
            properties:
              enabled:
                type: boolean
                description: flag to show if optin is enabled for email
      permissions:
        description: permissions
        type: object
        properties:
          customer:
            type: object
            properties:
              write:
                type: boolean
                description: flag to show if user can add or update customers
                
      enabledLanguages:
        description: enabled languages for the workspace
        type: array
        items:
          type: object
          properties:
            key:
              type: string
            label:
              type: string
  
  CompanyProperties:
    type: object
    description: the properties of the company owning current workspace
    properties:
      name:
        type: string
        description: name of the company
      logo:
        $ref: '#/definitions/ImageMetadata'
      websiteUrl:
        type: string
        description: url for the copmany website

  CompanyAndApplicationConfiguration:
    type: object
    properties:
      company:
        $ref: '#/definitions/CompanyProperties'
      environment:
        $ref: '#/definitions/EnvironmentProperties'
      application:
        $ref: '#/definitions/ApplicationProperties'

  LightCustomer:
    type: object
    properties:
      id:
        type: string
        description: Id of the customer
      externalId:
        type: string
        description: the external id of customer
      primaryLabel:
        type: string
        description: primary label of customer
      secondaryLabel:
        type: string
        description: secondary label of
      picture:
        $ref: '#/definitions/ImageMetadata'
      userId:
        type: string
        description: Id of the S.A. the customer is associated to
      user:
        $ref: '#/definitions/UserInCustomer'
      subscriptions:
        type: object
        description: channels subscribed by customer
        additionalProperties:
          $ref: '#/definitions/CustomerSubscription'

  CustomerSubscription:
    type: object
    properties:
      status:
        type: string
        enum:  [PENDING, SUBSCRIBED, UNSUBSCRIBED]
      dndInfo:
        type: object
        properties:
          active:
            type: boolean
            description: indicates if customer can be contacted according to dnd policy
          deadline:
            type: string
            format: date-time
            description: the deadline to contact customer according to dnd policy
          remainingMessages:
            type: integer
            description: number of messages remaining after deadline

  SourceCustomer:
    type: object
    properties:
      externalId:
        type: string
        description: externalId of customer
      userId:
        type: string
        description: userid to assign customer
      picture:
        type: string
        description: url for the customer picture
      cards:
        type: object
        description: cards of customer
        additionalProperties:
          type: object
          description: map of fields in cards and values
          additionalProperties:
            type: object
            description: value of field 
                
  Customer:
    type: object
    properties:
      id:
        type: string
        description: Id of the customer
      externalId:
        type: string
        description: the external id of customer
      primaryLabel:
        type: string
        description: primary label of customer
      secondaryLabel:
        type: string
        description: secondary label of
      picture:
        $ref: '#/definitions/ImageMetadata'
      userId:
        type: string
        description: Id of the S.A. the customer is associated to
      user:
        $ref: '#/definitions/UserInCustomer'
      subscriptions:
        type: object
        description: channels subscribed by customer
        additionalProperties:
          $ref: '#/definitions/CustomerSubscription'
      cards:
        type: object
        description: map of customer cards containing detailed information
        additionalProperties:
          $ref: '#/definitions/CustomerCard'
          
  UserInCustomer:
    type: object
    properties:
      id:
        type: string
        description: user ID
      firstName:
        type: string
      lastName:
        type: string
            
  CustomerCard:
    type: object
    properties:
      label:
        description: The title of the card
        type: string
      position:
        type: number
      fields:
        type: object
        description: The fields of the card
        additionalProperties:
          $ref: '#/definitions/CustomerCardField'

  CustomerCardField:
    type: object
    properties:
      semantic:
        description: Semantic of the field
        type: string
        enum: [FIRST_NAME, LAST_NAME, BIRTHDATE, GENDER, EMAIL, PHONE]
      value:
        description: Value of the field
        type: string
      label:
        description: Label of the field
        type: string
      type:
        type: string
        description: Type of the field
        enum: [INPUT_TEXT, INPUT_TEXTAREA, INPUT_NUMBER, INPUT_EMAIL, INPUT_DATE]
      position:
        type: number

  PagedCustomer:
    type: object
    properties:
      page:
        $ref: "#/definitions/Page"
      elements:
        type: array
        items:
          $ref: "#/definitions/LightCustomer"

  PagedCustomerEvent:
    type: object
    properties:
      page:
        $ref: "#/definitions/Page"
      elements:
        type: array
        items:
          $ref: "#/definitions/CustomerEvent"
  
  CustomerEvent:
    type: object
    properties:
      id:
        type: string
        description: event id
      customerId:
        type: string
        description: customer id
      name:
        type: string
        description: event type
      date:
        type: string
        description: event time
        format: date-time
      
  ConversationCustomer:
    type: object
    properties:
      id:
        type: string
        description: Id of the customer
      externalId:
        type: string
        description: the external id of customer
      primaryLabel:
        type: string
        description: primary label of customer
      secondaryLabel:
        type: string
        description: secondary label of
      picture:
        $ref: '#/definitions/ImageMetadata'
      userId:
        type: string
        description: Id of the S.A. the customer is associated to
      user:
        $ref: '#/definitions/UserInCustomer'
      subscriptions:
        type: object
        description: channels subscribed by customer
        additionalProperties:
          $ref: '#/definitions/CustomerSubscription'
      threads:
        type: array
        items:
          $ref: "#/definitions/ConversationThread"

  PagedConversationCustomer:
    properties:
      page:
        $ref: '#/definitions/Page'
      elements:
        type: array
        items:
          $ref: "#/definitions/ConversationCustomer"

  ConversationThread:
    type: object
    properties:
      id: 
        type: string
        description: thread id
      unread:
        type: number
        description: number of unread messages 
      medium:
        type: string
        enum: [EMAIL, SMS, MESSENGER, WECHAT, LINE, TELEGRAM]
      lastRead:
        type: string
        format: date-time
      lastMessage:
        $ref: '#/definitions/Post'
      
  PagedPost:
    properties:
      page:
        $ref: '#/definitions/Page'
      elements:
        type: array
        items:
          $ref: "#/definitions/Post"
          
  Post:
    properties:
      parts:
        type: object
        description: Map of post parts ready to render such as subject, body etc.
        additionalProperties:
          $ref: "#/definitions/MessagePart"
      status:
        type: string
        enum: [SENDING, SENT, RECEIVED, READ, ERROR] 
      date:
        type: string
        format: date-time
      direction:
        type: string
        enum: [INBOUND, OUTBOUND]
      userStatus:
        type: string
        description: user status at the time of creating the post
        enum: [ONLINE, OUT_OF_OFFICE]
      origin:
        type: string
        enum: [CUSTOMER, USER, BOT]

  Content:
    type: object
    properties:
      id:
        type: string
      externalId:
        type: string
      base:
        $ref: '#/definitions/ContentBaseProperties'
      extended:
        type: object
        additionalProperties:
          type: string
      extra:
        type: string
      tags:
        type: array
        items:
          type: string

  ContentBaseProperties:
    type: object
    properties:
      description:
        type: string
      name:
        type: string
      thumbnail:
        $ref: '#/definitions/ImageMetadata'

  PagedContent:
    properties:
      page:
        $ref: '#/definitions/Page'
      elements:
        type: array
        items:
          $ref: "#/definitions/Content"

  Template:
    title: Template
    type: object
    properties:
      id:
        type: string
        description: Id of the template
      version:
        type: string
        description: Version of the template
      name:
        type: string
        description: Identifier name of the template
      thumbnail:
        $ref: '#/definitions/ImageMetadata'
      features:
        type: object
        properties:
          channels:
            type: array
            items:
              title: Channels supported by template for deliveries
              type: string
              enum: [EMAIL, SMS, MESSENGER, TELEGRAM, WECHAT, LINE]
      templateVariables:
        type: object
        description: Map of variables used in the template
        additionalProperties:
          $ref: "#/definitions/TemplateVariable"
      templateInputs:
        type: object
        description: Map of inputs used in the template
        additionalProperties:
          $ref: "#/definitions/TemplateInput"
      supportedLocales:
        type: array
        description: the languages that the repository support
        items:
          type: string
          
  TemplateVariable:
    type: object
    properties:
      contentTypeId:
        type: string
        description: Content type id of the variable
      cardinality:
        $ref: "#/definitions/Cardinality"

  PagedTemplate:
    type: object
    properties:
      page:
        $ref: "#/definitions/Page"
      elements:
        type: array
        items:
          $ref: "#/definitions/Template"

  RuleInstance:
    type: object
    description: Definition of a rule to be used when retriving values of template variable
    properties:
      ruleId:
        type: string
        description: Id of rule to be compiled
      cardinality:
        $ref: "#/definitions/Cardinality"
      repositoryId:
        type: string
        description: Id of the repository this rule belongs to
      parameters:
        type: object
        description: |
          Args of the rule which should be supplied by client.
          These args will be used for creating an instance of rule.
        additionalProperties:
          type: object
          title: value of the parameter for the rule

  MessageSource:
    type: object
    description: Message definition used to create a proper message to render
    required:
     - customers
     - templateId
     - channel
    properties:
      customers:
        type: array
        description: List of customer id
        items:
          type: string
      templateId:
        type: string
        description: Id of the template used for the message
      channel:
        type: string
        description: Channel that will be used to send the message
        enum: [EMAIL, MESSENGER, TELEGRAM, WECHAT, LINE]
      templateVariables:
        type: object
        description: Rule instances to use for retriving the values of template variables
        additionalProperties:
          $ref: "#/definitions/RuleInstance"
      templateInputs:
        type: object
        description: Inputs to use for creating message
        additionalProperties:
          type: object

  Message:
    type: object
    description: Message definition used to create a proper message to render
    properties:
      id:
        type: string
        description: Id of the message
      templateId:
        type: string
        description: Id of the template used for the message
      channel:
        type: string
        description: Channel that will be used to send the message
        enum: [EMAIL, MESSENGER, TELEGRAM, WECHAT, LINE]
      instances:
        type: object
        additionalProperties:
          type: object
          properties:
            customerId:
              type: string
      templateVariables:
        type: object
        description: Rule instances to use for retriving the values of template variables
        additionalProperties:
          $ref: "#/definitions/RuleInstance"
      templateInputs:
        type: object
        description: Inputs to use for creating message
        additionalProperties:
          type: object

  PagedMessage:
    type: object
    properties:
      page:
        $ref: '#/definitions/Page'
      elements:
        type: array
        items:
          $ref: "#/definitions/Message"

  PagedTag:
    type: object
    properties:
      page:
        $ref: '#/definitions/Page'
      elements:
        type: array
        items:
          type: object
          properties:
            name:
              type: string
              description: name of the tag

  Category:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      externalId:
        type: string
      parentId:
        type: string

  PagedCategory:
    properties:
      page:
        $ref: '#/definitions/Page'
      elements:
        type: array
        items:
          $ref: "#/definitions/Category"
  
  Profile:
    type: object
    properties:
      base:
        type: object
        description: Base properties of user's profile
        properties:
          id:
            type: string
            description: User's id
          firstName:
            type: string
            description: User's first name
          lastName:
            type: string
            description: Users's last name
          status:
            type: string
            description: user status
            enum: [ONLINE, OUT_OF_OFFICE]
          profilePicture:
            $ref: '#/definitions/ImageMetadata'
          contacts:
            type: object
            description: Contact informaion of user
            properties:
              email:
                type: string
                description: User's email address
      extended:
        type: object
        description: Custom data for profile
        properties:
          signature:
            $ref: '#/definitions/ImageMetadata'
          workspaces:
            type: array
            items:
              type: object
              properties:
                id:
                  type: string
                  description: The id of the workspace
                name:
                  type: string
                  description: Name of the workspace
                permissions:
                  type: object
                  properties:
                    customer:
                      type: object
                      properties:
                        write:
                          type: boolean
              
  ProfileSource:
    type: object
    properties:
      firstName:
        type: string
        description: User's first name
      lastName:
        type: string
        description: Users's last name
      profilePictureUrl:
        type: string
        description: Users's profile picture
      signatureUrl:
        type: string
        description: Url of the signature image
      email:
        type: string
        description: User's email address  
      status:
        type: string
        description: user current status
        enum: [ONLINE, OUT_OF_OFFICE]
              
  Workspace:
    type: object
    properties:
      workspaceId:
        type: string
        description: Id of the workspace 
      workspaceName:
        type: string
        description: Name of the workspace 
      companyId:
        type: string
        description: Id of the company to add the workspace
      clabApplicationUser:
        $ref: "#/definitions/ClabApplicationUser"
      hubWorkspace:
        $ref: "#/definitions/HubAttributes"
      enabledMedia:
        type: array
        items:
          $ref: "#/definitions/Medium"
      content:
        type: object
        description: Content service workspace
        properties:
          id:
            type: string
            description: Id of the content service workspace

  Page:
    description: Page
    type: object
    properties:
      size:
        type: integer
        description: Size of the page
      totalElements:
        type: integer
        description: Total elements in the collection
      totalUnfilteredElements:
        type: integer
        description: Total number of unfiltered elements
      totalPages:
        type: integer
        description: Total pages of the collection
      number:
        type: integer
        description: Number of the current page
        
  Collection:
    description: collection for the templates
    type: object
    properties:
      id:
        type: string
        description: id of the collection
      name:
        type: string
        description: name of the collection
      description:
        type: string
        description: description of the collection
      thumbnail:
        $ref: '#/definitions/ImageMetadata'
      totalTemplates:
        type: number
        description: number of templates associated with collection
      primaryTemplates:
        type: number
        description: number of primary templates associated with collection
  
  PagedCollection:
    properties:
      page:
        $ref: '#/definitions/Page'
      elements:
        type: array
        items:
          $ref: "#/definitions/Collection"
          
  InputType:  
    type: object
    properties:     
      type:
        type: string
        description: Type of the field
        enum: [INPUT_TEXT, INPUT_TEXTAREA, INPUT_NUMBER, INPUT_EMAIL, INPUT_DATE, BROWSE_CONTENTS, BROWSE_CATEGORIES, BROWSE_TAGS, IMAGE_URL, INPUT_ENUM]      
        
  CustomerModel:
    type: object
    properties:
      picture:
        $ref: "#/definitions/CustomerModelField"
      primaryLabel:
        $ref: "#/definitions/CustomerModelField"
      secondaryLabel:
        $ref: "#/definitions/CustomerModelField"
      cards:
        type: object
        description: map of customer cards containing detailed information
        additionalProperties:
          $ref: '#/definitions/CustomerModelCard'
  
  CustomerModelField:        
    type: object
    properties:
      type:
        type: string
        description: type of field
        enum: [INPUT_TEXT, INPUT_TEXTAREA, INPUT_NUMBER, INPUT_EMAIL, INPUT_DATE, INPUT_ENUM, INPUT_IMAGE]
      cardinality:
        $ref: "#/definitions/Cardinality"
      name:
        type: string
        description: name of field
      description:
        type: string
        description: description of field
      placeholder:
        type: string
      defaultValue:
        type: object
      semantic:
        type: string
        enum: [FIRST_NAME, LAST_NAME, BIRTHDATE, GENDER, EMAIL, PHONE, OTHER]
      position:
        type: integer
      validationRules:
        type: array
        description: List of rule for validation of parameter
        items:
          $ref: "#/definitions/ValidationRule"
      extras:
        type: object
        description: see the json schema related to type
        
  CustomerModelCard:
    type: object
    properties:
      label:
        type: string
        description: label of card
      position:
        type: integer
      fields:
        type: object
        description: map of card fields
        additionalProperties:
          $ref: '#/definitions/CustomerModelField'

  ErrorResource:
    title: Error resource
    type: object
    properties:
      message:
        type: string
        description: Descriptive error message (English)
      logref:
        type: string
        description: Unique identifier that is reported in the application log
      data:
        type: object
        description: Specific error data
      errors:
        description: Sub-errors array
        type: array
        items:
          type: object
          properties:
            path:
              type: string
              description: JSON pointer to the invalid property
            message:
              type: string
              description: Descriptive error message (English)
            code:
              type: string
              description: Custom error code related to the path
            data:
              type: object
              description: Specific error data
          required: [path, message]
    required: [message, logref]

  FacebookInfo:
    type: object
    properties:
      apiVersion:
        type: string
        description: facebook api version
      appId:
        type: string
        description: facebook app ID

  PagedCompany:
    type: object
    properties:
      page:
        $ref: '#/definitions/Page'
      elements:
        type: array
        items:
          $ref: '#/definitions/Company'
  
  Company:
    type: object
    properties:
      id:
        type: string
        description: Company id
      name:
        type: string
        description: Company name
      groupPk:
        type: number
        description: Company external Id
      logo:
        $ref: '#/definitions/Image'
      websiteUrl:
        type: string
        format: uri
        description: Company website url
      userRegistry:
        type: object
        properties:
          name:
            type: string
      applicationUser:
        type: object
        properties:
          uid:
            type: string
          secret:
            type: string
  
  CompanySource:
    type: object
    properties:
      name:
        type: string
        description: Company name
      groupPk:
        type: number
        description: Company external Id
      logoUrl:
        type: string
        format: uri
        description: Company logo url
      websiteUrl:
        type: string
        format: uri
        description: Company website url
      userRegistry:
        type: string
        description: user registry for company
      applicationUser:
        type: object
        properties:
          uid:
            type: string
            description: application user uid
          secret:
            type: string
            description: application user secret
            
  CompanyPatchSource:
    type: object
    properties:
      name:
        type: string
        description: Company name
      logoUrl:
        type: string
        format: uri
        description: Company logo url
      websiteUrl:
        type: string
        format: uri
        description: Company website url
      applicationUser:
        type: object
        properties:
          uid:
            type: string
            description: application user uid
          secret:
            type: string
            description: application user secret          
  
  StoreSource:
    type: object
    required:
      - name
    properties:
      name:
        type: string
        description: Store name
      emailSender:
        type: string
        description: Email sender for store
      smsSender:
        type: string
        description: Sms sender for store
      userIds:
        type: array
        description: user ids assigned to store
        items:
          type: string
          description: user id

  StorePatchSource:
    type: object
    properties:
      name:
        type: string
        description: Store name
      emailSender:
        type: string
        description: Email sender for store
      smsSender:
        type: string
        description: Sms sender for store
      userIds:
        type: array
        description: user ids assigned to store
        items:
          type: string
          description: user id
        
  PagedStore:
    type: object
    properties:
      page:
        $ref: '#/definitions/Page'
      elements:
        type: array
        items:
          $ref: '#/definitions/Store'
          
  Store:
    type: object
    required:
      - id
      - name
      - userIds
    properties:
      id:
        type: string
        description: id for store
      name:
        type: string
        description: Store name
      emailSender:
        type: string
        description: Email sender for store
      smsSender:
        type: string
        description: Sms sender for store
      userIds:
        type: array
        description: user ids assigned to store
        items:
          type: string
          description: user id

  PagedSentEmail:
    type: object
    properties:
      page:
        $ref: '#/definitions/Page'
      elements:
        type: array
        items:
          $ref: '#/definitions/SentEmail'
          
  SentEmail:
    type: object
    properties:
      customerId:
        type: string
        description: customer id
      templateId:
        type: string
        description: template id
      template:
        $ref: "#/definitions/Template"
      date:
        type: string
        description: delivery date
        format: date-time
      parts:
        type: object
        description: Map of message parts ready to render such as subject, body etc.
        additionalProperties:
            $ref: "#/definitions/MessagePart"
      status:
        type: string
        enum: [SENDING, SENT, RECEIVED, READ, ERROR] 

  LightRepository:
    type: object
    properties:
      id:
        type: string
        description: The id of the repository
      name:
        type: string
        description: Name of the repository
      description:
        type: string
        description: Description of the repository
      thumbnail:
        $ref: '#/definitions/ImageMetadata'
      supportedLocales:
        type: array
        description: the languages that the repository support
        items:
          type: string

  PagedLightRepository:
    properties:
      page:
        $ref: '#/definitions/Page'
      elements:
        type: array
        items:
          $ref: "#/definitions/LightRepository"
          
  TranslatedRepository:
    type: object
    properties:
      id:
        type: string
        description: The id of the repository
      contentTypeId:
        type: string
        description: Identifier of the content type provided by the repository. The ContentTypeId field is used as a reference in templates (and occasionally as resource paramenter) to establish a reference to a suitable content. Several repositories may provide the same contentTypeId (e.g. several "product" repositories could provide a "product")
      name:
        $ref: '#/definitions/TranslatedField'
      description:
        $ref: '#/definitions/TranslatedField'
      thumbnail:
        $ref: '#/definitions/TranslatedField'
      primary:
        type: boolean
        description: if true, the repository can by show in the "byContent" path of client application
      features:
        description: Describes the repoistory features, such as capability to support full text queries, and navigation by categories or tags.
        type: object
        properties:
          categories:
            type: boolean
            description: True if categories is supported
          tags:
            type: boolean
            description: True if tags is supported
          query:
            type: boolean
            description: True if simple search is supported (?query=%value%)
      rules:
        type: array
        description: List of supported rules
        items:
          $ref: "#/definitions/TranslatedRule"
      supportedLocales:
        type: array
        description: the languages that the repository support
        items:
          type: string
      locales:
        $ref: '#/definitions/Locales'
        
  TranslatedRule:
    type: object
    description: An algorithm supported by the repository to allow manual or automated extraction of contents It might need explicit parameters (implicit parameters will be provide seamlessly). E.g. a product repository could support the manual retrievial of a product as well as the automatic retrivial of related products. In this case a product id is required as imput.
    properties:
      id:
        type: string
        description: The id of the rule. This will be referenced to query the repository, along with the required parameters.
      name:
        $ref: '#/definitions/TranslatedField'
      description:
        $ref: '#/definitions/TranslatedField'
      parameters:
        type: array
        description: |
          List of parameters required by the rule
        items:
          $ref: "#/definitions/TranslatedRuleParameter"        

  TranslatedRuleParameter:
    type: object
    description: Advanced input with browse capability to use in rules
    properties:
      id:
        type: string
        description: Id of the parameter. This will be sent as key to the repository when applying the given rule.
      name:
        type: string
        description: Name of the parameter
      description:
        type: string
        description: Description of the parameter
      placeholder:
        type: string
        description: Placeholder of the parameter
      defaultValue:
        type: string
        description: Default value for the parameter
      validationRules:
        type: array
        description: List of rule for validation of parameter
        items:
          $ref: "#/definitions/TranslatedValidationRule"
      type:
        type: string
        description: Type of the field
        enum: [INPUT_TEXT, INPUT_TEXTAREA, INPUT_NUMBER, INPUT_EMAIL, INPUT_DATE, BROWSE_CONTENTS, BROWSE_CATEGORIES, BROWSE_TAGS]
      cardinality:
        $ref: "#/definitions/Cardinality"
      browse:
        type: object
        properties:
          repository:
            type: string
            description: id of the repository to browse for contents (browse-contents), tags (browse-tags), categories (browse-categories)

  RepositorySource:
    type: object
    required:
      - nameKey
      - descriptionKey
      - thumbnailUrlKey
      - adapterId
      - parametersKey
      - locales
    description: Object used to create or update a repository. Some fields can be localized. You
     can declare a key associated to particular field and translate the field using "locales" object
    properties:
      nameKey: 
        type: string
        description: The key associated to the localized name of the repository
      descriptionKey:
        type: string
        description: The key associated to the localized description of the repository
      primary:
        type: boolean
        description: new value for the primary flag
      thumbnailUrlKey:
        type: string
        description: The key associated to the localized thumbnail url of the repository 
      supportedLocales:
        type: array
        description: the languages that the repository support
        items:
          type: string
      adapterId:
        type: string
        description: id of the adapter for the repository
      rules:
        type: array
        description: List of rules supported by the repository
        items:
          $ref: '#/definitions/RuleSource'
      parametersKey:
        type: string
        description: The key associated to the localized parameters of the repository
      locales:
        $ref: '#/definitions/Locales'
        
  RepositoryPatchSource:
    type: object
    properties:
      primary:
        type: boolean
        description: if true, the repository can by show in the "byContent" path of client application
      supportedLocales:
        type: array
        description: the languages that the repository support
        items:
          type: string
      locales:
        type: object
        description: available languages
        additionalProperties:
          type: string

  RuleSource:
    type: object
    required:
      - nameKey
      - descriptionKey
      - adapterRuleId
    properties:
      nameKey:
        type: string
        description: The key associated to the localized name of the rule
      descriptionKey:
        type: string
        description: The key associated to the localized description of the rule
      adapterRuleId:
        type: string
        description: Id of the adapter rule
      parameters:
        type: array
        description: Parameters for the rule. Will be passed to constructor of the adapter rule with the given id to get an instance of rule
        items:
          $ref: '#/definitions/RuleParameterSource'

  RuleParameterSource:
    type: object
    required:
      - adapterRuleParameterId
    properties:
      adapterRuleParameterId:
        type: string
        description: id of the adapter rule parameter refered
      browse:
        type: object
        properties:
          repository:
            type: string
            description: id of the repository to browse for contents (browse-contents), tags (browse-tags), categories (browse-categories)'
            
  LightTemplate:
    type: object
    properties:
      id:
        type: string
        description: The id of the template
      name:
        type: string
        description: Name of the template
      version:
        type: string
        description: Template version
      contentTypeId:
        type: string
        description: Identifier of the content type required by the template.
      supportedLocales:
        type: array
        description: the languages that the repository support
        items:
          type: string
      thumbnail:
        $ref: '#/definitions/ImageMetadata'
  
  PagedLightTemplate:
    properties:
      page:
        $ref: '#/definitions/Page'
      elements:
        type: array
        items:
          $ref: "#/definitions/LightTemplate"
  
  TranslatedTemplate:
    title: Template
    type: object
    properties:
      id:
        type: string
        description: Id of the template
      version:
        type: string
        description: Version of the template
      name:
        $ref: '#/definitions/TranslatedField'
      thumbnail:
        $ref: '#/definitions/TranslatedImageField'
      features:
        type: object
        properties:
          channels:
            type: array
            items:
              title: Channels supported by template for deliveries
              type: string
              enum: [EMAIL, SMS, MESSENGER, TELEGRAM, WECHAT, LINE]
      templateVariables:
        type: object
        description: Map of variables used in the template
        additionalProperties:
          $ref: "#/definitions/TemplateVariable"

      templateInputs:
        type: object
        description: Map of inputs used in the template
        additionalProperties:
          $ref: "#/definitions/TranslatedTemplateInput"
      templateAssets:
        type: object
        description: Map of assets used in the template
        additionalProperties:
          type: object
          description: assets for medium
          additionalProperties:
            $ref: "#/definitions/TemplateAsset"
      supportedLocales:
        type: array
        description: the languages that the repository support
        items:
          type: string
      locales:
        type: object
        description: available languages
        additionalProperties:
          type: string
      collections:
        type: array
        items:
          $ref: "#/definitions/Collection"
  
  TranslatedTemplateInput:
    type: object
    description: Definition of an input required by Template
    properties:
      id:
        type: string
        description: Id of the parameter. This will be sent as key to the repository when applying the given rule.
      name:
        $ref: '#/definitions/TranslatedField'
      description:
        $ref: '#/definitions/TranslatedField'
      placeholder:
        $ref: '#/definitions/TranslatedField'
      defaultValue:
        $ref: '#/definitions/TranslatedField'
      validationRules:
        type: array
        description: List of rule for validation of parameter
        items:
          $ref: "#/definitions/TranslatedValidationRule"
      type:
        type: string
        description: Type of the field
        enum: [INPUT_TEXT, INPUT_TEXTAREA, INPUT_NUMBER, INPUT_EMAIL, INPUT_DATE]
      cardinality:
        $ref: "#/definitions/Cardinality"
  
  TemplateAsset:
    type: object
    properties:
      assetMimeType:
        type: string
        description: asset mime type
        enum: [HTML, TXT, APPLICATION_JSON]
      url:
        $ref: '#/definitions/TranslatedField'

  TemplateSource:
    type: object
    required:
      - nameKey
      - thumbnailUrlKey
      - version
      - locales
    properties:
      primary:
        type: boolean
        description: if true the template can by show in the "byMoments path of client application
      supportedLocales:
        type: array
        description: the languages that the repository support
        items:
          type: string
      locales:
        type: object
        description: available languages
        additionalProperties:
          type: string
      collections:
        type: array
        description: collections of template
        items:
          type: string
      assets:
        type: array
        description: assets to update
        items:
          $ref: '#/definitions/TemplateAssetSource'  
      nameKey:
        type: string
      thumbnailUrlKey:
        type: string
        format: url
      version:
        type: string
      templateInputs:
        type: object
        description: inputs used in the template
        additionalProperties:
          $ref: '#/definitions/TemplateInputSource'
      templateVariables:
        type: object
        description: variables used in the template
        additionalProperties:
          $ref: '#/definitions/TemplateVariable'
          
  TemplateInputSource:
    type: object
    required:
      - id
      - nameKey
      - descriptionKey
      - placeholderKey
      - defaultValueKey
      - type
      - cardinality
    description: Template inputs
    properties:
      id:
        type: string
        description: id of the input which will be used to refer this input in the asset
      nameKey:
        type: string
        description: The key associated to the localized name of the templateInput
      descriptionKey:
        type: string
        description: The key associated to the localized description of the templateInput
      placeholderKey:
        type: string
        description: The key associated to the localized placeholder of the templateInput
      defaultValueKey:
        type: string
        description: The key associated to the localized default value of the templateInput
      validationRules:
        type: array
        description: List of rule for validation of input
        items:
          $ref: "#/definitions/ValidationRuleSource"
      type:
        $ref: "#/definitions/InputType"
      cardinality:
        $ref: "#/definitions/Cardinality"
          
  TemplatePatchSource:
    type: object
    properties:
      primary:
        type: boolean
        description: if true the template can by show in the "byMoments path of client application
      supportedLocales:
        type: array
        description: the languages that the repository support
        items:
          type: string
      locales:
        type: object
        description: available languages
        additionalProperties:
          type: string
      collections:
        type: array
        description: collections of template
        items:
          type: string
      assets:
        type: array
        description: assets to update
        items:
          $ref: '#/definitions/TemplateAssetSource' 

  TemplateAssetSource:
    type: object
    required:
      - assetMimeType
      - urlKey
      - assetPartKey
      - media
    properties:
      assetMimeType:
        type: string
        enum: [HTML, TXT, APPLICATION_JSON]
      urlKey:
        type: string
      assetPartKey:
        type: string
        enum: [BODY, SUBJECT]
      media:
        type: array
        items:
          type: string
          enum: [EMAIL, SMS, MESSENGER, TELEGRAM, WECHAT, LINE]          

  ValidationRuleSource:
    type: object
    description: Rule definition for parameter validation
    properties:
      type:
        type: string
        enum: [REGEX]
        description: Type of rule
      pattern:
        type: string
        description: Pattern to satisfy the rule
      match:
        type: boolean
        description: True if the rule must be satisfied
      messageKey:
        type: string
        description: The key of the localized message to display in case of error validation
  

  TranslatedCollection:
    description: collection for the templates
    type: object
    properties:
      id:
        type: string
        description: id of the collection
      name:
        $ref: '#/definitions/TranslatedField'
      description:
        $ref: '#/definitions/TranslatedField'
      thumbnail:
        $ref: '#/definitions/TranslatedImageField'
      totalTemplates:
        type: number
        description: number of templates associated with collection
      primaryTemplates:
        type: number
        description: number of primary templates associated with collection
      supportedLocales:
        type: array
        description: the languages supported by the collection
        items:
          type: string
      locales:
        $ref: '#/definitions/Locales'

  CollectionSource:
    type: object
    required:
      - nameKey
      - descriptionKey
      - thumbnailUrlKey
      - supportedLocales
      - locales
    description: Object used to create or update a collection. Some fields can be localized. You
     can declare a key associated to particular field and translate the field using "locales" object
    properties:
      nameKey: 
        type: string
        description: The key associated to the localized name of the collection
      descriptionKey:
        type: string
        description: The key associated to the localized description of the collection
      thumbnailUrlKey:
        type: string
        description: The key associated to the localized thumbnail url of the collection
      supportedLocales:
        type: array
        description: the languages that the collection support
        items:
          type: string
      locales:
        $ref: '#/definitions/Locales'
  
  CollectionPatchSource:
    type: object
    description: Object used to update a collection.
    properties:
      supportedLocales:
        type: array
        description: the languages that the collection support
        items:
          type: string
      locales:
        $ref: '#/definitions/Locales'

  ConfigurationChannel:
    type: object
    properties:
      id:
        type: string
        description: The id of the channel
      key:
        type: string
        description: Key of the channel
      value:
        type: string
        description: channel value
      enabled:
        type: boolean
        description: Enabled flag 
      news:
        type: object
        properties:
          total:
            type: number

  PagedConfigurationChannel:
    properties:
      page:
        $ref: '#/definitions/Page'
      elements:
        type: array
        items:
          $ref: "#/definitions/ConfigurationChannel"

  ChannelSource:
    type: object
    required:
      - key
      - value
    properties:
      key:
        type: string
        description: Key of the channel
      value:
        type: string
        description: channel value
      enabled:
        type: boolean
        description: Enabled flag 
  
  Feed:
    type: object
    properties:
      id:
        type: string
        description: The id of the feed
      name:
        type: string
        description: Name of the feed
      description:
        type: string
        description: Description of the feed
      feedUrl:
        type: string
        description: Url of the feed
      channel:
        type: string
        enum: [company, app]
      language:
        type: string
        description: Language of the feed
      relevant:
        type: boolean
      thumbnail:
        $ref: '#/definitions/ImageMetadata'
      adapterId:
        type: string
        description: Feed adapterId
      parameters:
        type: object
        description: Map of parameters to create feed (rssFeedUrl, propertyMap for mapping fields)
        additionalProperties:
          type: object
          
  PagedFeed:
    properties:
      page:
        $ref: '#/definitions/Page'
      elements:
        type: array
        items:
          $ref: "#/definitions/Feed"

  FeedSource:
    type: object
    required:
      - name
      - channel
      - feedUrl
      - language
      - relevant
      - parameters
      - adapterId
    properties:
      name:
        type: string
        description: Feed name
      description:
        type: string
        description: Feed description
      channel:
        type: string
        description: Feed channel
      feedUrl:
        type: string
        description: Feed url
      thumbnailUrl:
        type: string
        description: Feed thumbnail url
      language:
        type: string
        description: Feed language
      adapterId:
        type: string
        description: Feed adapterId
      parameters:
        type: object
        description: Map of parameters to create feed (rssFeedUrl, propertyMap for mapping fields)
        additionalProperties:
          type: object
      relevant: 
        type: boolean
        description: Flag showing if the feed is going to be used even the language is different from the specified one

  FeedPatchSource:
    type: object
    properties:
      name:
        type: string
        description: Feed name
      description:
        type: string
        description: Feed description
      channel:
        type: string
        description: Feed channel
      feedUrl:
        type: string
        description: Feed url
      thumbnailUrl:
        type: string
        description: Feed thumbnail url
      language:
        type: string
        description: Feed language
      adapterId:
        type: string
        description: Feed adapterId
      parameters:
        type: object
        description: Map of parameters to create feed (rssFeedUrl, propertyMap for mapping fields)
        additionalProperties:
          type: object
      relevant: 
        type: boolean
        description: Flag showing if the feed is going to be used even the language is different from the specified one
          
  TranslatedField:
    type: object
    properties:
      key:
        type: string
        description: key of the field refered in locales
      value:
        type: string
        description: localized value of the field.
  
  TranslatedImageField:
    type: object
    properties:
      key:
        type: string
        description: key of the field refered in locales
      value:
        $ref: '#/definitions/ImageMetadata'
  
  TranslatedValidationRule:
    type: object
    description: Rule definition for parameter validation
    properties:
      type:
        type: string
        enum: [REGEX]
        description: Type of rule
      pattern:
        type: string
        description: Pattern to satisfy the rule
      match:
        type: boolean
        description: True if the rule must be satisfied
      message:
        type: string
        description: Message to display in case of error validation
        
  Locales:
    type: object
    description: available languages
    additionalProperties:
      type: object
      description: The translation for specific language
      additionalProperties:
        type: string
  
  Permissions:
    type: object
    properties:
      salesAssociate:
        type: object
        properties:
          customer:
            type: object
            properties:
              write: 
                type: boolean
  
  SourcePermissions:
    type: object
    properties:
      salesAssociate:
        type: object
        properties:
          customer:
            type: object
            required:
              - write
            properties:
              write: 
                type: boolean
                
parameters:
  AuthorizationHeader:
    name: Authorization
    in: header
    description: A valid OAuth2 token
    required: true
    type: string